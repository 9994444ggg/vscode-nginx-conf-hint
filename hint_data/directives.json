[
  {
    "name": "google_perftools_profiles",
    "syntax": "google_perftools_profiles file;",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Sets a file name that keeps profiling information ofnginx worker process.The ID of the worker process is always a part of the file nameand is appended to the end of the file name, after a dot.",
    "doc": "<p>\nSets a file name that keeps profiling information of\nnginx worker process.\nThe ID of the worker process is always a part of the file name\nand is appended to the end of the file name, after a dot.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_google_perftools_module.html#google_perftools_profiles",
    "module": "ngx_google_perftools_module"
  },
  {
    "name": "health_check",
    "syntax": "health_check [parameters];",
    "def": null,
    "contexts": [
      "server"
    ],
    "desc": "Enables periodic health checks of the servers in agroup.",
    "doc": "<p>\nEnables periodic health checks of the servers in a\n<a href=\"ngx_stream_upstream_module.html#upstream\">group</a>.\n</p><p>\nThe following optional parameters are supported:\n</p><dl class=\"compact\">\n\n<dt id=\"health_check_interval\">\n<code>interval</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the interval between two consecutive health checks,\nby default, 5 seconds.\n</dd>\n\n<dt id=\"health_check_jitter\">\n<code>jitter</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the time within which\neach health check will be randomly delayed,\nby default, there is no delay.\n</dd>\n\n<dt id=\"health_check_fails\">\n<code>fails</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of consecutive failed health checks of a particular server\nafter which this server will be considered unhealthy,\nby default, 1.\n</dd>\n\n<dt id=\"health_check_passes\">\n<code>passes</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of consecutive passed health checks of a particular server\nafter which the server will be considered healthy,\nby default, 1.\n</dd>\n\n<dt id=\"health_check_mandatory\">\n<code>mandatory</code>\n</dt>\n<dd>\nsets the initial &#x201C;checking&#x201D; state for a server\nuntil the first health check is completed (1.11.7).\nClient connections are not passed to servers in the &#x201C;checking&#x201D; state.\nIf the parameter is not specified,\nthe server will be initially considered healthy.\n</dd>\n\n<dt id=\"health_check_match\">\n<code>match</code>=<code><i>name</i></code>\n</dt>\n<dd>\nspecifies the <code>match</code> block configuring the tests that a\nsuccessful connection should pass in order for a health check to pass.\nBy default, for TCP, only the ability\nto establish a TCP connection with the server is checked.\nFor <a href=\"#health_check_udp\">UDP</a>, the absence of\nICMP &#x201C;<code>Destination Unreachable</code>&#x201D; message is expected\nin reply to the sent string &#x201C;<code>nginx health check</code>&#x201D;.\n<blockquote class=\"note\">\nPrior to version 1.11.7, by default, UDP health check\nrequired a <a href=\"#hc_match\">match</a> block with the\n<a href=\"#match_send\">send</a> and <a href=\"#match_expect\">expect</a>\nparameters.\n</blockquote>\n</dd>\n\n<dt id=\"health_check_port\">\n<code>port</code>=<code><i>number</i></code>\n</dt>\n<dd>\ndefines the port used when connecting to a server\nto perform a health check (1.9.7).\nBy default, equals the\n<a href=\"ngx_stream_upstream_module.html#server\">server</a> port.\n</dd>\n\n<dt id=\"health_check_udp\">\n<code>udp</code>\n</dt>\n<dd>\nspecifies that the <code>UDP</code> protocol should be used for\nhealth checks instead of the default <code>TCP</code> protocol (1.9.13).\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_upstream_hc_module.html#health_check",
    "module": "ngx_stream_upstream_hc_module"
  },
  {
    "name": "health_check_timeout",
    "syntax": "health_check_timeout timeout;",
    "def": "health_check_timeout 5s;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Overrides theproxy_timeoutvalue for health checks.",
    "doc": "<p>\nOverrides the\n<a href=\"ngx_stream_proxy_module.html#proxy_timeout\">proxy_timeout</a>\nvalue for health checks.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_upstream_hc_module.html#health_check_timeout",
    "module": "ngx_stream_upstream_hc_module"
  },
  {
    "name": "match",
    "syntax": "match name  { ... }",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Defines the named test set used to verify server responses to health checks.",
    "doc": "<p>\nDefines the named test set used to verify server responses to health checks.\n</p><p>\nThe following parameters can be configured:\n</p><dl class=\"compact\">\n\n<dt id=\"match_send\">\n<code>send</code> <code><i>string</i></code>;\n</dt>\n<dd>\nsends a <code><i>string</i></code> to the server;\n</dd>\n\n<dt id=\"match_expect\">\n<code>expect</code> <code><i>string</i></code> |\n<code>~</code> <code><i>regex</i></code>;\n</dt>\n<dd>\na literal string (1.9.12) or a regular expression\nthat the data obtained from the server should match.\nThe regular expression is specified with the preceding\n&#x201C;<code>~*</code>&#x201D; modifier (for case-insensitive matching), or the\n&#x201C;<code>~</code>&#x201D; modifier (for case-sensitive matching).\n</dd>\n\n</dl><p> \nBoth `send` and `expect` parameters\ncan contain hexadecimal literals with the prefix &#x201C;`\\x`&#x201D;\nfollowed by two hex digits, for example, &#x201C;`\\x80`&#x201D; (1.9.12).\n</p><p>\nHealth check is passed if:\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_upstream_hc_module.html#match",
    "module": "ngx_stream_upstream_hc_module"
  },
  {
    "name": "upstream",
    "syntax": "upstream name { ... }",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Defines a group of servers.Servers can listen on different ports.In addition, servers listening on TCP and UNIX-domain socketscan be mixed.",
    "doc": "<p>\nDefines a group of servers.\nServers can listen on different ports.\nIn addition, servers listening on TCP and UNIX-domain sockets\ncan be mixed.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nupstream backend {\n    server backend1.example.com:12345 weight=5;\n    server 127.0.0.1:12345            max_fails=3 fail_timeout=30s;\n    server unix:/tmp/backend2;\n    server backend3.example.com:12345 resolve;\n\n    server backup1.example.com:12345  backup;\n}\n</pre></blockquote><p>\nBy default, connections are distributed between the servers using a\nweighted round-robin balancing method.\nIn the above example, each 7 connections will be distributed as follows:\n5 connections go to `backend1.example.com:12345`\nand one connection to each of the second and third servers.\nIf an error occurs during communication with a server, the connection will\nbe passed to the next server, and so on until all of the functioning\nservers will be tried.\nIf communication with all servers fails, the connection will be closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_upstream_module.html#upstream",
    "module": "ngx_stream_upstream_module"
  },
  {
    "name": "server",
    "syntax": "server address [parameters];",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Defines the address and other parametersof a server.The address can be specified as a domain name or IP addresswith an obligatory port, or as a UNIX-domain socket pathspecified after the “unix:” prefix.A domain name that resolves to several IP addresses definesmultiple servers at once.",
    "doc": "<p>\nDefines the *`address`* and other *`parameters`*\nof a server.\nThe address can be specified as a domain name or IP address\nwith an obligatory port, or as a UNIX-domain socket path\nspecified after the &#x201C;`unix:`&#x201D; prefix.\nA domain name that resolves to several IP addresses defines\nmultiple servers at once.\n</p><p>\nThe following parameters can be defined:\n</p><dl class=\"compact\">\n\n<dt id=\"weight\">\n<code>weight</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the weight of the server, by default, 1.\n</dd>\n\n<dt id=\"max_conns\">\n<code>max_conns</code>=<code><i>number</i></code>\n</dt>\n<dd>\nlimits the maximum <code><i>number</i></code> of simultaneous\nconnections to the proxied server (1.11.5).\nDefault value is zero, meaning there is no limit.\nIf the server group does not reside in the <a href=\"#zone\">shared memory</a>,\nthe limitation works per each worker process.\n<blockquote class=\"note\">\nPrior to version 1.11.5, this parameter was available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>\n</dd>\n\n<dt id=\"max_fails\">\n<code>max_fails</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of unsuccessful attempts to communicate with the server\nthat should happen in the duration set by the <code>fail_timeout</code>\nparameter to consider the server unavailable for a duration also set by the\n<code>fail_timeout</code> parameter.\nBy default, the number of unsuccessful attempts is set to 1.\nThe zero value disables the accounting of attempts.\nHere, an unsuccessful attempt is an error or timeout\nwhile establishing a connection with the server.\n</dd>\n\n<dt id=\"fail_timeout\">\n<code>fail_timeout</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets\n<ul class=\"compact\">\n\n<li>\nthe time during which the specified number of unsuccessful attempts to\ncommunicate with the server should happen to consider the server unavailable;\n</li>\n\n<li>\nand the period of time the server will be considered unavailable.\n</li>\n\n</ul>\nBy default, the parameter is set to 10 seconds.\n</dd>\n\n<dt id=\"backup\">\n<code>backup</code>\n</dt>\n<dd>\nmarks the server as a backup server.\nConnections to the backup server will be passed\nwhen the primary servers are unavailable.\n</dd>\n\n<dt id=\"down\">\n<code>down</code>\n</dt>\n<dd>\nmarks the server as permanently unavailable.\n</dd>\n\n</dl><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p><dl class=\"compact\">\n\n<dt id=\"resolve\">\n<code>resolve</code>\n</dt>\n<dd>\nmonitors changes of the IP addresses\nthat correspond to a domain name of the server,\nand automatically modifies the upstream configuration\nwithout the need of restarting nginx.\nThe server group must reside in the <a href=\"#zone\">shared memory</a>.\n<p>\nIn order for this parameter to work,\nthe <a href=\"ngx_stream_core_module.html#resolver\">resolver</a> directive\nmust be specified in the\n<a href=\"ngx_stream_core_module.html#stream\">stream</a> block.\nExample:\n</p> <blockquote class=\"example\"><pre>\nstream {\n    resolver 10.0.0.1;\n\n    upstream u {\n        zone ...;\n        ...\n        server example.com:12345 resolve;\n    }\n}\n</pre></blockquote><p> \n</p>\n</dd>\n\n<dt id=\"service\">\n<code>service</code>=<code><i>name</i></code>\n</dt>\n<dd>\nenables resolving of DNS\n<a href=\"https://tools.ietf.org/html/rfc2782\">SRV</a>\nrecords and sets the service <code><i>name</i></code> (1.9.13).\nIn order for this parameter to work, it is necessary to specify\nthe <a href=\"#resolve\">resolve</a> parameter for the server\nand specify a hostname without a port number.\n<p>\nIf the service name does not contain a dot (&#x201C;<code>.</code>&#x201D;), then\nthe <a href=\"https://tools.ietf.org/html/rfc2782\">RFC</a>-compliant name\nis constructed\nand the TCP protocol is added to the service prefix.\nFor example, to look up the\n<code>_http._tcp.backend.example.com</code> SRV record,\nit is necessary to specify the directive:\n</p> <blockquote class=\"example\"><pre>\nserver backend.example.com service=http resolve;\n</pre></blockquote><p> \nIf the service name contains one or more dots, then the name is constructed\nby joining the service prefix and the server name.\nFor example, to look up the <code>_http._tcp.backend.example.com</code>\nand <code>server1.backend.example.com</code> SRV records,\nit is necessary to specify the directives:\n</p> <blockquote class=\"example\"><pre>\nserver backend.example.com service=_http._tcp resolve;\nserver example.com service=server1.backend resolve;\n</pre></blockquote><p> \n</p>\n\n<p>\nHighest-priority SRV records\n(records with the same lowest-number priority value)\nare resolved as primary servers,\nthe rest of SRV records are resolved as backup servers.\nIf the <a href=\"#backup\">backup</a> parameter is specified for the server,\nhigh-priority SRV records are resolved as backup servers,\nthe rest of SRV records are ignored.\n</p>\n</dd>\n\n<dt id=\"slow_start\">\n<code>slow_start</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the <code><i>time</i></code> during which the server will recover its weight\nfrom zero to a nominal value, when unhealthy server becomes\n<a href=\"ngx_stream_upstream_hc_module.html#health_check\">healthy</a>,\nor when the server becomes available after a period of time\nit was considered <a href=\"#fail_timeout\">unavailable</a>.\nDefault value is zero, i.e. slow start is disabled.\n<blockquote class=\"note\">\nThe parameter cannot be used along with the\n<a href=\"#hash\">hash</a> load balancing method.\n</blockquote>\n</dd>\n\n</dl><blockquote class=\"note\">\nIf there is only a single server in a group, <code>max_fails</code>,\n<code>fail_timeout</code> and <code>slow_start</code> parameters\nare ignored, and such a server will never be considered unavailable.\n</blockquote>",
    "notes": [
      "\nIf there is only a single server in a group, max_fails,\nfail_timeout and slow_start parameters\nare ignored, and such a server will never be considered unavailable.\n"
    ],
    "since": null,
    "link": "stream/ngx_stream_upstream_module.html#server",
    "module": "ngx_stream_upstream_module"
  },
  {
    "name": "zone",
    "syntax": "zone name [size];",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Defines the name and size of the sharedmemory zone that keeps the group’s configuration and run-time state that areshared between worker processes.Several groups may share the same zone.In this case, it is enough to specify the zone size only once.",
    "doc": "<p>\nDefines the *`name`* and *`size`* of the shared\nmemory zone that keeps the group&#x2019;s configuration and run-time state that are\nshared between worker processes.\nSeveral groups may share the same zone.\nIn this case, it is enough to specify the zone size only once.\n</p><p>\nAdditionally,\nas part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>,\nsuch groups allow changing the group membership\nor modifying the settings of a particular server\nwithout the need of restarting nginx.\nThe configuration is accessible via a special location\nhandled by\n<a href=\"../http/ngx_http_upstream_conf_module.html#upstream_conf\">upstream_conf</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_upstream_module.html#zone",
    "module": "ngx_stream_upstream_module"
  },
  {
    "name": "state",
    "syntax": "state file;",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Specifies a file that keeps the stateof the dynamically configurable group.",
    "doc": "<p>\nSpecifies a *`file`* that keeps the state\nof the dynamically configurable group.\n</p><p>\nExamples:\n</p><blockquote class=\"example\"><pre>\nstate /var/lib/nginx/state/servers.conf; # path for Linux\nstate /var/db/nginx/state/servers.conf;  # path for FreeBSD\n</pre></blockquote><p>\nThe state is currently limited to the list of servers with their parameters.\nThe file is read when parsing the configuration and is updated each time\nthe upstream configuration is\n<a href=\"ngx_http_upstream_conf_module.html#upstream_conf\">changed</a>.\nChanging the file content directly should be avoided.\nThe directive cannot be used\nalong with the <a href=\"#server\">server</a> directive.\n</p><blockquote class=\"note\">\nChanges made during\n<a href=\"../control.html#reconfiguration\">configuration reload</a>\nor <a href=\"../control.html#upgrade\">binary upgrade</a>\ncan be lost.\n</blockquote><blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nChanges made during\nconfiguration reload\nor binary upgrade\ncan be lost.\n",
      "\nThis directive is available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.9.7",
    "link": "stream/ngx_stream_upstream_module.html#state",
    "module": "ngx_stream_upstream_module"
  },
  {
    "name": "hash",
    "syntax": "hash key [consistent];",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Specifies a load balancing method for a server groupwhere client-server mapping is based on the hashed key value.The key can contain text, variables,and their combinations (1.11.2).Usage example:",
    "doc": "<p>\nSpecifies a load balancing method for a server group\nwhere client-server mapping is based on the hashed *`key`* value.\nThe *`key`* can contain text, variables,\nand their combinations (1.11.2).\nUsage example:\n</p><blockquote class=\"example\"><pre>\nhash $remote_addr;\n</pre></blockquote><p> \nNote that adding or removing a server from the group\nmay result in remapping most of the keys to different servers.\nThe method is compatible with the\n<a href=\"http://search.cpan.org/perldoc?Cache%3A%3AMemcached\">Cache::Memcached</a>\nPerl library.\n</p><p>\nIf the `consistent` parameter is specified,\nthe <a href=\"http://www.last.fm/user/RJ/journal/2007/04/10/392555/\">ketama</a>\nconsistent hashing method will be used instead.\nThe method ensures that only a few keys\nwill be remapped to different servers\nwhen a server is added to or removed from the group.\nThis helps to achieve a higher cache hit ratio for caching servers.\nThe method is compatible with the\n<a href=\"http://search.cpan.org/perldoc?Cache%3A%3AMemcached%3A%3AFast\">Cache::Memcached::Fast</a>\nPerl library with the *`ketama_points`* parameter set to 160.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_upstream_module.html#hash",
    "module": "ngx_stream_upstream_module"
  },
  {
    "name": "least_conn",
    "syntax": "least_conn;",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Specifies that a server group should use a load balancing methodwhere a connectionis passed to the server with the least number of active connections,taking into account weights of servers.If there are several such servers, they are tried in turn using aweighted round-robin balancing method.",
    "doc": "<p>\nSpecifies that a server group should use a load balancing method\nwhere a connection\nis passed to the server with the least number of active connections,\ntaking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_upstream_module.html#least_conn",
    "module": "ngx_stream_upstream_module"
  },
  {
    "name": "least_time",
    "syntax": "least_time \n    connect |\n    first_byte |\n    last_byte\n    [inflight];",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Specifies that a group should use a load balancing method where a connectionis passed to the server with the least average time andleast number of active connections, taking into account weights of servers.If there are several such servers, they are tried in turn using aweighted round-robin balancing method.",
    "doc": "<p>\nSpecifies that a group should use a load balancing method where a connection\nis passed to the server with the least average time and\nleast number of active connections, taking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\n</p><p>\nIf the `connect` parameter is specified,\ntime to connect to the upstream server is used.\nIf the `first_byte` parameter is specified,\ntime to receive the first byte of data is used.\nIf the `last_byte` is specified,\ntime to receive the last byte of data is used.\nIf the `inflight` parameter is specified (1.11.6),\nincomplete connections are also taken into account.\n</p><blockquote class=\"note\">\nPrior to version 1.11.6,\nincomplete connections were taken into account by default.\n</blockquote><blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nPrior to version 1.11.6,\nincomplete connections were taken into account by default.\n",
      "\nThis directive is available as part of our\ncommercial subscription.\n"
    ],
    "since": null,
    "link": "stream/ngx_stream_upstream_module.html#least_time",
    "module": "ngx_stream_upstream_module"
  },
  {
    "name": "ssl_preread",
    "syntax": "ssl_preread on | off;",
    "def": "ssl_preread off;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Enables extracting information from the ClientHello message atthe preread phase.",
    "doc": "<p>\nEnables extracting information from the ClientHello message at\nthe <a href=\"stream_processing.html#preread_phase\">preread</a> phase.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_preread_module.html#ssl_preread",
    "module": "ngx_stream_ssl_preread_module"
  },
  {
    "name": "ssl_certificate",
    "syntax": "ssl_certificate file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with the certificate in the PEM formatfor the given server.If intermediate certificates should be specified in addition to a primarycertificate, they should be specified in the same file in the followingorder: the primary certificate comes first, then the intermediate certificates.A secret key in the PEM format may be placed in the same file.",
    "doc": "<p>\nSpecifies a *`file`* with the certificate in the PEM format\nfor the given server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\n</p><p>\nSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\n</p><blockquote class=\"example\"><pre>\nserver {\n    listen              12345 ssl;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n</pre></blockquote><blockquote class=\"note\">\nOnly OpenSSL 1.0.2 or higher supports separate certificate chains\nfor different certificates.\nWith older versions, only one certificate chain can be used.\n</blockquote>",
    "notes": [
      "\nOnly OpenSSL 1.0.2 or higher supports separate certificate chains\nfor different certificates.\nWith older versions, only one certificate chain can be used.\n"
    ],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_certificate",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_certificate_key",
    "syntax": "ssl_certificate_key file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with the secret key in the PEM formatfor the given server.",
    "doc": "<p>\nSpecifies a *`file`* with the secret key in the PEM format\nfor the given server.\n</p><p>\nThe value\n`engine`:*`name`*:*`id`*\ncan be specified instead of the *`file`*,\nwhich loads a secret key with a specified *`id`*\nfrom the OpenSSL engine *`name`*.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_certificate_key",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_ciphers",
    "syntax": "ssl_ciphers ciphers;",
    "def": "ssl_ciphers HIGH:!aNULL:!MD5;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies the enabled ciphers.The ciphers are specified in the format understood by theOpenSSL library, for example:",
    "doc": "<p>\nSpecifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\n</p><blockquote class=\"example\"><pre>\nssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n</pre></blockquote><p>\nThe full list can be viewed using the\n&#x201C;`openssl ciphers`&#x201D; command.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_ciphers",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_client_certificate",
    "syntax": "ssl_client_certificate file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with trusted CA certificates in the PEM formatused to verify client certificates.",
    "doc": "<p>\nSpecifies a *`file`* with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates.\n</p><p>\nThe list of certificates will be sent to clients.\nIf this is not desired, the <a href=\"#ssl_trusted_certificate\">ssl_trusted_certificate</a>\ndirective can be used.\n</p>",
    "notes": [],
    "since": "1.11.8",
    "link": "stream/ngx_stream_ssl_module.html#ssl_client_certificate",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_crl",
    "syntax": "ssl_crl file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with revoked certificates (CRL)in the PEM format used to verifyclient certificates.",
    "doc": "<p>\nSpecifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to <a href=\"#ssl_verify_client\">verify</a>\nclient certificates.\n</p>",
    "notes": [],
    "since": "1.11.8",
    "link": "stream/ngx_stream_ssl_module.html#ssl_crl",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_dhparam",
    "syntax": "ssl_dhparam file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with DH parameters for DHE ciphers.",
    "doc": "<p>\nSpecifies a *`file`* with DH parameters for DHE ciphers.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_dhparam",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_ecdh_curve",
    "syntax": "ssl_ecdh_curve curve;",
    "def": "ssl_ecdh_curve auto;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a curve for ECDHE ciphers.",
    "doc": "<p>\nSpecifies a *`curve`* for ECDHE ciphers.\n</p><p>\nWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\n</p><blockquote class=\"example\"><pre>\nssl_ecdh_curve prime256v1:secp384r1;\n</pre></blockquote><p>\nThe special value `auto` (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor `prime256v1` with older versions.\n</p><blockquote class=\"note\">\nPrior to version 1.11.0,\nthe <code>prime256v1</code> curve was used by default.\n</blockquote>",
    "notes": [
      "\nPrior to version 1.11.0,\nthe prime256v1 curve was used by default.\n"
    ],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_ecdh_curve",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_handshake_timeout",
    "syntax": "ssl_handshake_timeout time;",
    "def": "ssl_handshake_timeout 60s;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a timeout for the SSL handshake to complete.",
    "doc": "<p>\nSpecifies a timeout for the SSL handshake to complete.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_handshake_timeout",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_password_file",
    "syntax": "ssl_password_file file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with passphrases forsecret keyswhere each passphrase is specified on a separate line.Passphrases are tried in turn when loading the key.",
    "doc": "<p>\nSpecifies a *`file`* with passphrases for\n<a href=\"#ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nstream {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        listen 127.0.0.1:12345;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        listen 127.0.0.1:12346;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_password_file",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_prefer_server_ciphers",
    "syntax": "ssl_prefer_server_ciphers on | off;",
    "def": "ssl_prefer_server_ciphers off;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies that server ciphers should be preferred over client cipherswhen the SSLv3 and TLS protocols are used.",
    "doc": "<p>\nSpecifies that server ciphers should be preferred over client ciphers\nwhen the SSLv3 and TLS protocols are used.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_prefer_server_ciphers",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_protocols",
    "syntax": "ssl_protocols \n    [SSLv2]\n    [SSLv3]\n    [TLSv1]\n    [TLSv1.1]\n    [TLSv1.2];",
    "def": "ssl_protocols TLSv1 TLSv1.1 TLSv1.2;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Enables the specified protocols.The TLSv1.1 and TLSv1.2 parameters workonly when the OpenSSL library of version 1.0.1 or higher is used.",
    "doc": "<p>\nEnables the specified protocols.\nThe `TLSv1.1` and `TLSv1.2` parameters work\nonly when the OpenSSL library of version 1.0.1 or higher is used.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_protocols",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_session_cache",
    "syntax": "ssl_session_cache \n    off |\n    none |\n    [builtin[:size]]\n    [shared:name:size];",
    "def": "ssl_session_cache none;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets the types and sizes of caches that store session parameters.A cache can be of any of the following types:",
    "doc": "<p>\nSets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\n</p><dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nthe use of a session cache is strictly prohibited:\nnginx explicitly tells a client that sessions may not be reused.\n</dd>\n\n<dt><code>none</code></dt>\n<dd>\nthe use of a session cache is gently disallowed:\nnginx tells a client that sessions may be reused, but does not\nactually store session parameters in the cache.\n</dd>\n\n<dt><code>builtin</code></dt>\n<dd>\na cache built in OpenSSL; used by one worker process only.\nThe cache size is specified in sessions.\nIf size is not given, it is equal to 20480 sessions.\nUse of the built-in cache can cause memory fragmentation.\n</dd>\n\n<dt><code>shared</code></dt>\n<dd>\na cache shared between all worker processes.\nThe cache size is specified in bytes; one megabyte can store\nabout 4000 sessions.\nEach shared cache should have an arbitrary name.\nA cache with the same name can be used in several\nservers.\n</dd>\n\n</dl><p>\nBoth cache types can be used simultaneously, for example:\n</p><blockquote class=\"example\"><pre>\nssl_session_cache builtin:1000 shared:SSL:10m;\n</pre></blockquote><p> \nbut using only shared cache without the built-in cache should\nbe more efficient.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_session_cache",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_session_ticket_key",
    "syntax": "ssl_session_ticket_key file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets a file with the secret key used to encryptand decrypt TLS session tickets.The directive is necessary if the same key has to be shared betweenmultiple servers.By default, a randomly generated key is used.",
    "doc": "<p>\nSets a *`file`* with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\n</p><p>\nIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\n</p><blockquote class=\"example\"><pre>\nssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n</pre></blockquote><p>\nThe *`file`* must contain 80 or 48 bytes\nof random data and can be created using the following command:\n</p><blockquote class=\"example\"><pre>\nopenssl rand 80 &gt; ticket.key\n</pre></blockquote><p> \nDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_session_ticket_key",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_session_tickets",
    "syntax": "ssl_session_tickets on | off;",
    "def": "ssl_session_tickets on;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Enables or disables session resumption throughTLS session tickets.",
    "doc": "<p>\nEnables or disables session resumption through\n<a href=\"https://tools.ietf.org/html/rfc5077\">TLS session tickets</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_session_tickets",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_session_timeout",
    "syntax": "ssl_session_timeout time;",
    "def": "ssl_session_timeout 5m;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a time during which a client may reuse thesession parameters.",
    "doc": "<p>\nSpecifies a time during which a client may reuse the\nsession parameters.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_ssl_module.html#ssl_session_timeout",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_trusted_certificate",
    "syntax": "ssl_trusted_certificate file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with trusted CA certificates in the PEM formatused to verify client certificates.",
    "doc": "<p>\nSpecifies a *`file`* with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates.\n</p><p>\nIn contrast to the certificate set by <a href=\"#ssl_client_certificate\">ssl_client_certificate</a>,\nthe list of these certificates will not be sent to clients.\n</p>",
    "notes": [],
    "since": "1.11.8",
    "link": "stream/ngx_stream_ssl_module.html#ssl_trusted_certificate",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_verify_client",
    "syntax": "ssl_verify_client \n    on | off |\n    optional | optional_no_ca;",
    "def": "ssl_verify_client off;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Enables verification of client certificates.The verification result is stored in the$ssl_client_verify variable.If an error has occurred during the client certificate verificationor a client has not presented the required certificate,the connection is closed.",
    "doc": "<p>\nEnables verification of client certificates.\nThe verification result is stored in the\n<a href=\"#var_ssl_client_verify\">$ssl_client_verify</a> variable.\nIf an error has occurred during the client certificate verification\nor a client has not presented the required certificate,\nthe connection is closed.\n</p><p>\nThe `optional` parameter requests the client\ncertificate and verifies it if the certificate is present.\n</p><p>\nThe `optional_no_ca` parameter\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through the\n<a href=\"#var_ssl_client_cert\">$ssl_client_cert</a> variable.\n</p>",
    "notes": [],
    "since": "1.11.8",
    "link": "stream/ngx_stream_ssl_module.html#ssl_verify_client",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "ssl_verify_depth",
    "syntax": "ssl_verify_depth number;",
    "def": "ssl_verify_depth 1;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets the verification depth in the client certificates chain.",
    "doc": "<p>\nSets the verification depth in the client certificates chain.\n</p>",
    "notes": [],
    "since": "1.11.8",
    "link": "stream/ngx_stream_ssl_module.html#ssl_verify_depth",
    "module": "ngx_stream_ssl_module"
  },
  {
    "name": "split_clients",
    "syntax": "split_clients \n    string\n    $variable { ... }",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Creates a variable for A/B testing, for example:",
    "doc": "<p>\nCreates a variable for A/B testing, for example:\n</p><blockquote class=\"example\"><pre>\nsplit_clients &quot;${remote_addr}AAA&quot; $variant {\n               0.5%               .one;\n               2.0%               .two;\n               *                  &quot;&quot;;\n}\n</pre></blockquote><p> \nThe value of the original string is hashed using MurmurHash2.\nIn the example given, hash values from 0 to 21474835 (0.5%)\ncorrespond to the\nvalue `&quot;.one&quot;` of the `$variant` variable,\nhash values from 21474836 to 107374180 (2%) correspond to\nthe value `&quot;.two&quot;`,\nand hash values from 107374181 to 4294967295 correspond to\nthe value `&quot;&quot;` (an empty string).\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_split_clients_module.html#split_clients",
    "module": "ngx_stream_split_clients_module"
  },
  {
    "name": "return",
    "syntax": "return value;",
    "def": null,
    "contexts": [
      "server"
    ],
    "desc": "Specifies a value to send to the client.The value can contain text, variables, and their combination.",
    "doc": "<p>\nSpecifies a *`value`* to send to the client.\nThe value can contain text, variables, and their combination.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_return_module.html#return",
    "module": "ngx_stream_return_module"
  },
  {
    "name": "set_real_ip_from",
    "syntax": "set_real_ip_from \n    address |\n    CIDR |\n    unix:;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Defines trusted addresses that are known to send correctreplacement addresses.If the special value unix: is specified,all UNIX-domain sockets will be trusted.",
    "doc": "<p>\nDefines trusted addresses that are known to send correct\nreplacement addresses.\nIf the special value `unix:` is specified,\nall UNIX-domain sockets will be trusted.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_realip_module.html#set_real_ip_from",
    "module": "ngx_stream_realip_module"
  },
  {
    "name": "proxy_bind",
    "syntax": "proxy_bind \n    address\n    [transparent] |\n    off;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Makes outgoing connections to a proxied server originatefrom the specified local IP address.Parameter value can contain variables (1.11.2).The special value off cancels the effectof the proxy_bind directiveinherited from the previous configuration level, which allows thesystem to auto-assign the local IP address.",
    "doc": "<p>\nMakes outgoing connections to a proxied server originate\nfrom the specified local IP *`address`*.\nParameter value can contain variables (1.11.2).\nThe special value `off` cancels the effect\nof the `proxy_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address.\n</p>",
    "notes": [],
    "since": "1.9.2",
    "link": "stream/ngx_stream_proxy_module.html#proxy_bind",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_buffer_size",
    "syntax": "proxy_buffer_size size;",
    "def": "proxy_buffer_size 16k;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets the size of the buffer used for reading datafrom the proxied server.Also sets the size of the buffer used for reading datafrom the client.",
    "doc": "<p>\nSets the *`size`* of the buffer used for reading data\nfrom the proxied server.\nAlso sets the *`size`* of the buffer used for reading data\nfrom the client.\n</p>",
    "notes": [],
    "since": "1.9.4",
    "link": "stream/ngx_stream_proxy_module.html#proxy_buffer_size",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_connect_timeout",
    "syntax": "proxy_connect_timeout time;",
    "def": "proxy_connect_timeout 60s;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Defines a timeout for establishing a connection with a proxied server.",
    "doc": "<p>\nDefines a timeout for establishing a connection with a proxied server.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_connect_timeout",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_download_rate",
    "syntax": "proxy_download_rate rate;",
    "def": "proxy_download_rate 0;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Limits the speed of reading the data from the proxied server.The rate is specified in bytes per second.The zero value disables rate limiting.The limit is set per a connection, so if nginx simultaneously openstwo connections to the proxied server,the overall rate will be twice as much as the specified limit.",
    "doc": "<p>\nLimits the speed of reading the data from the proxied server.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a connection, so if nginx simultaneously opens\ntwo connections to the proxied server,\nthe overall rate will be twice as much as the specified limit.\n</p>",
    "notes": [],
    "since": "1.9.3",
    "link": "stream/ngx_stream_proxy_module.html#proxy_download_rate",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_next_upstream",
    "syntax": "proxy_next_upstream on | off;",
    "def": "proxy_next_upstream on;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "When a connection to the proxied server cannot be established, determineswhether a client connection will be passed to the next server.",
    "doc": "<p>\nWhen a connection to the proxied server cannot be established, determines\nwhether a client connection will be passed to the next server.\n</p><p>\nPassing a connection to the next server can be limited by\n<a href=\"#proxy_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#proxy_next_upstream_timeout\">time</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_next_upstream",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_next_upstream_timeout",
    "syntax": "proxy_next_upstream_timeout time;",
    "def": "proxy_next_upstream_timeout 0;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Limits the time allowed to pass a connection to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the time allowed to pass a connection to the\n<a href=\"#proxy_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_next_upstream_timeout",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_next_upstream_tries",
    "syntax": "proxy_next_upstream_tries number;",
    "def": "proxy_next_upstream_tries 0;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Limits the number of possible tries for passing a connection to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the number of possible tries for passing a connection to the\n<a href=\"#proxy_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_next_upstream_tries",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_pass",
    "syntax": "proxy_pass address;",
    "def": null,
    "contexts": [
      "server"
    ],
    "desc": "Sets the address of a proxied server.The address can be specified as a domain name or IP address,and a port:",
    "doc": "<p>\nSets the address of a proxied server.\nThe address can be specified as a domain name or IP address,\nand a port:\n</p><blockquote class=\"example\"><pre>\nproxy_pass localhost:12345;\n</pre></blockquote><p> \nor as a UNIX-domain socket path:\n</p><blockquote class=\"example\"><pre>\nproxy_pass unix:/tmp/stream.socket;\n</pre></blockquote><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_stream_upstream_module.html\">server group</a>.\n</p><p>\nThe address can also be specified using variables (1.11.3):\n</p><blockquote class=\"example\"><pre>\nproxy_pass $upstream;\n</pre></blockquote><p> \nIn this case, the server name is searched among the described\n<a href=\"ngx_stream_upstream_module.html\">server groups</a>,\nand, if not found, is determined using a\n<a href=\"ngx_stream_core_module.html#resolver\">resolver</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_pass",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_protocol",
    "syntax": "proxy_protocol on | off;",
    "def": "proxy_protocol off;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Enables thePROXYprotocol for connections to a proxied server.",
    "doc": "<p>\nEnables the\n<a href=\"http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt\">PROXY\nprotocol</a> for connections to a proxied server.\n</p>",
    "notes": [],
    "since": "1.9.2",
    "link": "stream/ngx_stream_proxy_module.html#proxy_protocol",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_responses",
    "syntax": "proxy_responses number;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets the number of datagrams expected from the proxied serverin response to the client requestif the UDPprotocol is used.By default, the number of datagrams is not limited:the response datagrams will be sentuntil the proxy_timeout value expires.",
    "doc": "<p>\nSets the number of datagrams expected from the proxied server\nin response to the client request\nif the <a href=\"ngx_stream_core_module.html#udp\">UDP</a>\nprotocol is used.\nBy default, the number of datagrams is not limited:\nthe response datagrams will be sent\nuntil the <a href=\"#proxy_timeout\">proxy_timeout</a> value expires.\n</p>",
    "notes": [],
    "since": "1.9.13",
    "link": "stream/ngx_stream_proxy_module.html#proxy_responses",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl",
    "syntax": "proxy_ssl on | off;",
    "def": "proxy_ssl off;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Enables the SSL/TLS protocol for connections to a proxied server.",
    "doc": "<p>\nEnables the SSL/TLS protocol for connections to a proxied server.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_certificate",
    "syntax": "proxy_ssl_certificate file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with the certificate in the PEM formatused for authentication to a proxied server.",
    "doc": "<p>\nSpecifies a *`file`* with the certificate in the PEM format\nused for authentication to a proxied server.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_certificate",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_certificate_key",
    "syntax": "proxy_ssl_certificate_key file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with the secret key in the PEM formatused for authentication to a proxied server.",
    "doc": "<p>\nSpecifies a *`file`* with the secret key in the PEM format\nused for authentication to a proxied server.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_certificate_key",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_ciphers",
    "syntax": "proxy_ssl_ciphers ciphers;",
    "def": "proxy_ssl_ciphers DEFAULT;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies the enabled ciphers for connections to a proxied server.The ciphers are specified in the format understood by the OpenSSL library.",
    "doc": "<p>\nSpecifies the enabled ciphers for connections to a proxied server.\nThe ciphers are specified in the format understood by the OpenSSL library.\n</p><p>\nThe full list can be viewed using the\n&#x201C;`openssl ciphers`&#x201D; command.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_ciphers",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_crl",
    "syntax": "proxy_ssl_crl file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with revoked certificates (CRL)in the PEM format used to verifythe certificate of the proxied server.",
    "doc": "<p>\nSpecifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to <a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied server.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_crl",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_name",
    "syntax": "proxy_ssl_name name;",
    "def": "proxy_ssl_name host from proxy_pass;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Allows overriding the server name used toverifythe certificate of the proxied server and to bepassed through SNIwhen establishing a connection with the proxied server.The server name can also be specified using variables (1.11.3).",
    "doc": "<p>\nAllows overriding the server name used to\n<a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied server and to be\n<a href=\"#proxy_ssl_server_name\">passed through SNI</a>\nwhen establishing a connection with the proxied server.\nThe server name can also be specified using variables (1.11.3).\n</p><p>\nBy default, the host part of the <a href=\"#proxy_pass\">proxy_pass</a> address is used.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_name",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_password_file",
    "syntax": "proxy_ssl_password_file file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with passphrases forsecret keyswhere each passphrase is specified on a separate line.Passphrases are tried in turn when loading the key.",
    "doc": "<p>\nSpecifies a *`file`* with passphrases for\n<a href=\"#proxy_ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_password_file",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_server_name",
    "syntax": "proxy_ssl_server_name on | off;",
    "def": "proxy_ssl_server_name off;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Enables or disables passing of the server name throughTLSServer Name Indication extension (SNI, RFC 6066)when establishing a connection with the proxied server.",
    "doc": "<p>\nEnables or disables passing of the server name through\n<a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS\nServer Name Indication extension</a> (SNI, RFC 6066)\nwhen establishing a connection with the proxied server.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_server_name",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_session_reuse",
    "syntax": "proxy_ssl_session_reuse on | off;",
    "def": "proxy_ssl_session_reuse on;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Determines whether SSL sessions can be reused when working withthe proxied server.If the errors“SSL3_GET_FINISHED:digest check failed”appear in the logs, try disabling session reuse.",
    "doc": "<p>\nDetermines whether SSL sessions can be reused when working with\nthe proxied server.\nIf the errors\n&#x201C;`SSL3_GET_FINISHED:digest check failed`&#x201D;\nappear in the logs, try disabling session reuse.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_session_reuse",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_protocols",
    "syntax": "proxy_ssl_protocols \n    [SSLv2]\n    [SSLv3]\n    [TLSv1]\n    [TLSv1.1]\n    [TLSv1.2];",
    "def": "proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Enables the specified protocols for connections to a proxied server.",
    "doc": "<p>\nEnables the specified protocols for connections to a proxied server.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_protocols",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_trusted_certificate",
    "syntax": "proxy_ssl_trusted_certificate file;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a file with trusted CA certificates in the PEM formatused to verifythe certificate of the proxied server.",
    "doc": "<p>\nSpecifies a *`file`* with trusted CA certificates in the PEM format\nused to <a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied server.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_trusted_certificate",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_verify",
    "syntax": "proxy_ssl_verify on | off;",
    "def": "proxy_ssl_verify off;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Enables or disables verification of the proxied server certificate.",
    "doc": "<p>\nEnables or disables verification of the proxied server certificate.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_verify",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_ssl_verify_depth",
    "syntax": "proxy_ssl_verify_depth number;",
    "def": "proxy_ssl_verify_depth 1;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets the verification depth in the proxied server certificates chain.",
    "doc": "<p>\nSets the verification depth in the proxied server certificates chain.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_verify_depth",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_timeout",
    "syntax": "proxy_timeout timeout;",
    "def": "proxy_timeout 10m;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets the timeout between two successiveread or write operations on client or proxied server connections.If no data is transmitted within this time, the connection is closed.",
    "doc": "<p>\nSets the *`timeout`* between two successive\nread or write operations on client or proxied server connections.\nIf no data is transmitted within this time, the connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_proxy_module.html#proxy_timeout",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "proxy_upload_rate",
    "syntax": "proxy_upload_rate rate;",
    "def": "proxy_upload_rate 0;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Limits the speed of reading the data from the client.The rate is specified in bytes per second.The zero value disables rate limiting.The limit is set per a connection, so if the client simultaneously openstwo connections,the overall rate will be twice as much as the specified limit.",
    "doc": "<p>\nLimits the speed of reading the data from the client.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a connection, so if the client simultaneously opens\ntwo connections,\nthe overall rate will be twice as much as the specified limit.\n</p>",
    "notes": [],
    "since": "1.9.3",
    "link": "stream/ngx_stream_proxy_module.html#proxy_upload_rate",
    "module": "ngx_stream_proxy_module"
  },
  {
    "name": "map",
    "syntax": "map \n    string\n    $variable { ... }",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Creates a new variable whose valuedepends on values of one or more of the source variablesspecified in the first parameter.",
    "doc": "<p>\nCreates a new variable whose value\ndepends on values of one or more of the source variables\nspecified in the first parameter.\n</p><blockquote class=\"note\">\nSince variables are evaluated only when they are used, the mere declaration\neven of a large number of &#x201C;<code>map</code>&#x201D; variables\ndoes not add any extra costs to connection processing.\n</blockquote><p>\nParameters inside the `map` block specify a mapping\nbetween source and resulting values.\n</p><p>\nSource values are specified as strings or regular expressions.\n</p><p>\nStrings are matched ignoring the case.\n</p><p>\nA regular expression should either start from the &#x201C;`~`&#x201D;\nsymbol for a case-sensitive matching, or from the &#x201C;`~*`&#x201D;\nsymbols for case-insensitive matching.\nA regular expression can contain named and positional captures\nthat can later be used in other directives along with the\nresulting variable.\n</p><p>\nIf a source value matches one of the names of special parameters\ndescribed below, it should be prefixed with the &#x201C;`\\`&#x201D; symbol.\n</p><p>\nThe resulting value can contain text,\nvariable, and their combination.\n</p><p>\nThe following special parameters are also supported:\n</p><dl class=\"compact\">\n<dt><code>default</code> <code><i>value</i></code></dt>\n<dd>\nsets the resulting value if the source value matches none\nof the specified variants.\nWhen <code>default</code> is not specified, the default\nresulting value will be an empty string.\n</dd>\n\n<dt><code>hostnames</code></dt>\n<dd>\nindicates that source values can be hostnames with a prefix or suffix mask:\n<blockquote class=\"example\"><pre>\n*.example.com 1;\nexample.*     1;\n</pre></blockquote>\nThe following two records\n<blockquote class=\"example\"><pre>\nexample.com   1;\n*.example.com 1;\n</pre></blockquote>\ncan be combined:\n<blockquote class=\"example\"><pre>\n.example.com  1;\n</pre></blockquote>\nThis parameter should be specified before the list of values.\n</dd>\n\n<dt><code>include</code> <code><i>file</i></code></dt>\n<dd>\nincludes a file with values.\nThere can be several inclusions.\n</dd>\n\n<dt id=\"volatile\"><code>volatile</code></dt>\n<dd>\nindicates that the variable is not cacheable (1.11.7).\n</dd>\n\n</dl><p>\nIf the source value matches more than one of the specified variants,\ne.g. both a mask and a regular expression match, the first matching\nvariant will be chosen, in the following order of priority:\n</p>",
    "notes": [
      "\nSince variables are evaluated only when they are used, the mere declaration\neven of a large number of “map” variables\ndoes not add any extra costs to connection processing.\n"
    ],
    "since": null,
    "link": "stream/ngx_stream_map_module.html#map",
    "module": "ngx_stream_map_module"
  },
  {
    "name": "map_hash_bucket_size",
    "syntax": "map_hash_bucket_size size;",
    "def": "map_hash_bucket_size 32|64|128;",
    "contexts": [
      "stream"
    ],
    "desc": "Sets the bucket size for the map variables hash tables.Default value depends on the processor’s cache line size.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the bucket size for the <a href=\"#map\">map</a> variables hash tables.\nDefault value depends on the processor&#x2019;s cache line size.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_map_module.html#map_hash_bucket_size",
    "module": "ngx_stream_map_module"
  },
  {
    "name": "map_hash_max_size",
    "syntax": "map_hash_max_size size;",
    "def": "map_hash_max_size 2048;",
    "contexts": [
      "stream"
    ],
    "desc": "Sets the maximum size of the map variableshash tables.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the maximum *`size`* of the <a href=\"#map\">map</a> variables\nhash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_map_module.html#map_hash_max_size",
    "module": "ngx_stream_map_module"
  },
  {
    "name": "access_log",
    "syntax": "access_log \n    path\n    format\n    [buffer=size]\n    [gzip[=level]]\n    [flush=time]\n    [if=condition];access_log off;",
    "def": "access_log off;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets the path, format,and configuration for a buffered log write.Several logs can be specified on the same level.Logging to syslogcan be configured by specifyingthe “syslog:” prefix in the first parameter.The special value off cancels allaccess_log directives on the current level.",
    "doc": "<p>\nSets the path, <a href=\"#log_format\">format</a>,\nand configuration for a buffered log write.\nSeveral logs can be specified on the same level.\nLogging to <a href=\"../syslog.html\">syslog</a>\ncan be configured by specifying\nthe &#x201C;`syslog:`&#x201D; prefix in the first parameter.\nThe special value `off` cancels all\n`access_log` directives on the current level.\n</p><p>\nIf either the `buffer` or `gzip`\nparameter is used, writes to log will be buffered.\n</p><blockquote class=\"note\">\nThe buffer size must not exceed the size of an atomic write to a disk file.\nFor FreeBSD this size is unlimited.\n</blockquote><p>\nWhen buffering is enabled, the data will be written to the file:\n</p>",
    "notes": [
      "\nThe buffer size must not exceed the size of an atomic write to a disk file.\nFor FreeBSD this size is unlimited.\n"
    ],
    "since": null,
    "link": "stream/ngx_stream_log_module.html#access_log",
    "module": "ngx_stream_log_module"
  },
  {
    "name": "log_format",
    "syntax": "log_format \n    name\n    [escape=default|json]\n    string ...;",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Specifies the log format, for example:",
    "doc": "<p>\nSpecifies the log format, for example:\n</p><blockquote class=\"example\"><pre>\nlog_format proxy &apos;$remote_addr [$time_local] &apos;\n                 &apos;$protocol $status $bytes_sent $bytes_received &apos;\n                 &apos;$session_time &quot;$upstream_addr&quot; &apos;\n                 &apos;&quot;$upstream_bytes_sent&quot; &quot;$upstream_bytes_received&quot; &quot;$upstream_connect_time&quot;&apos;;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_log_module.html#log_format",
    "module": "ngx_stream_log_module"
  },
  {
    "name": "open_log_file_cache",
    "syntax": "open_log_file_cache \nmax=N\n[inactive=time]\n[min_uses=N]\n[valid=time];open_log_file_cache off;",
    "def": "open_log_file_cache off;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Defines a cache that stores the file descriptors of frequently used logswhose names contain variables.The directive has the following parameters:",
    "doc": "<p>\nDefines a cache that stores the file descriptors of frequently used logs\nwhose names contain variables.\nThe directive has the following parameters:\n</p><dl class=\"compact\">\n\n<dt><code>max</code></dt>\n<dd>\nsets the maximum number of descriptors in a cache;\nif the cache becomes full the least recently used (LRU)\ndescriptors are closed\n</dd>\n\n<dt><code>inactive</code></dt>\n<dd>\nsets the time after which the cached descriptor is closed\nif there were no access during this time;\nby default, 10 seconds\n</dd>\n\n<dt><code>min_uses</code></dt>\n<dd>\nsets the minimum number of file uses during the time\ndefined by the <code>inactive</code> parameter\nto let the descriptor stay open in a cache;\nby default, 1\n</dd>\n\n<dt><code>valid</code></dt>\n<dd>\nsets the time after which it should be checked that the file\nstill exists with the same name; by default, 60 seconds\n</dd>\n\n<dt><code>off</code></dt>\n<dd>\ndisables caching\n</dd>\n\n</dl><p>\nUsage example:\n</p><blockquote class=\"example\"><pre>\nopen_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_log_module.html#open_log_file_cache",
    "module": "ngx_stream_log_module"
  },
  {
    "name": "limit_conn",
    "syntax": "limit_conn zone number;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets the shared memory zoneand the maximum allowed number of connections for a given key value.When this limit is exceeded, the server will close the connection.For example, the directives",
    "doc": "<p>\nSets the shared memory zone\nand the maximum allowed number of connections for a given key value.\nWhen this limit is exceeded, the server will close the connection.\nFor example, the directives\n</p><blockquote class=\"example\"><pre>\nlimit_conn_zone $binary_remote_addr zone=addr:10m;\n\nserver {\n    ...\n    limit_conn addr 1;\n}\n</pre></blockquote><p> \nallow only one connection per an IP address at a time.\n</p><p>\nWhen several `limit_conn` directives are specified,\nany configured limit will apply.\n</p><p>\nThe directives are inherited from the previous level if and\nonly if there are no\n`limit_conn`\ndirectives on the current level.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_limit_conn_module.html#limit_conn",
    "module": "ngx_stream_limit_conn_module"
  },
  {
    "name": "limit_conn_log_level",
    "syntax": "limit_conn_log_level \ninfo |\nnotice |\nwarn |\nerror;",
    "def": "limit_conn_log_level error;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets the desired logging level for cases when the serverlimits the number of connections.",
    "doc": "<p>\nSets the desired logging level for cases when the server\nlimits the number of connections.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_limit_conn_module.html#limit_conn_log_level",
    "module": "ngx_stream_limit_conn_module"
  },
  {
    "name": "limit_conn_zone",
    "syntax": "limit_conn_zone \n    key\n    zone=name:size;",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Sets parameters for a shared memory zonethat will keep states for various keys.In particular, the state includes the current number of connections.The key can contain text, variables,and their combinations (1.11.2).Connections with an empty key value are not accounted.Usage example:",
    "doc": "<p>\nSets parameters for a shared memory zone\nthat will keep states for various keys.\nIn particular, the state includes the current number of connections.\nThe *`key`* can contain text, variables,\nand their combinations (1.11.2).\nConnections with an empty key value are not accounted.\nUsage example:\n</p><blockquote class=\"example\"><pre>\nlimit_conn_zone $binary_remote_addr zone=addr:10m;\n</pre></blockquote><p> \nHere, the key is a client IP address set by the\n`$binary_remote_addr` variable.\nThe size of `$binary_remote_addr`\nis 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses.\nThe stored state always occupies 32 or 64 bytes\non 32-bit platforms and 64 bytes on 64-bit platforms.\nOne megabyte zone can keep about 32 thousand 32-byte states\nor about 16 thousand 64-byte states.\nIf the zone storage is exhausted, the server will close the connection.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_limit_conn_module.html#limit_conn_zone",
    "module": "ngx_stream_limit_conn_module"
  },
  {
    "name": "js_access",
    "syntax": "js_access function;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets an nginScript function which will be called at theaccess phase.",
    "doc": "<p>\nSets an nginScript function which will be called at the\n<a href=\"stream_processing.html#access_phase\">access</a> phase.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_js_module.html#js_access",
    "module": "ngx_stream_js_module"
  },
  {
    "name": "js_filter",
    "syntax": "js_filter function;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets a data filter.",
    "doc": "<p>\nSets a data filter.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_js_module.html#js_filter",
    "module": "ngx_stream_js_module"
  },
  {
    "name": "js_include",
    "syntax": "js_include file;",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Specifies a file that implements server and variable handlers in nginScript.",
    "doc": "<p>\nSpecifies a file that implements server and variable handlers in nginScript.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_js_module.html#js_include",
    "module": "ngx_stream_js_module"
  },
  {
    "name": "js_preread",
    "syntax": "js_preread function;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets an nginScript function which will be called at thepreread phase.",
    "doc": "<p>\nSets an nginScript function which will be called at the\n<a href=\"stream_processing.html#preread_phase\">preread</a> phase.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_js_module.html#js_preread",
    "module": "ngx_stream_js_module"
  },
  {
    "name": "js_set",
    "syntax": "js_set \n$variable function;",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Sets an nginScript function for the specified variable.",
    "doc": "<p>\nSets an nginScript function for the specified variable.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_js_module.html#js_set",
    "module": "ngx_stream_js_module"
  },
  {
    "name": "geoip_country",
    "syntax": "geoip_country file;",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Specifies a database used to determine the countrydepending on the client IP address.The following variables are available when using this database:",
    "doc": "<p>\nSpecifies a database used to determine the country\ndepending on the client IP address.\nThe following variables are available when using this database:\n</p><dl class=\"compact\">\n\n<dt id=\"var_geoip_country_code\"><code>$geoip_country_code</code></dt>\n<dd>\ntwo-letter country code, for example,\n&#x201C;<code>RU</code>&#x201D;, &#x201C;<code>US</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_country_code3\"><code>$geoip_country_code3</code>\n</dt>\n<dd>\nthree-letter country code, for example,\n&#x201C;<code>RUS</code>&#x201D;, &#x201C;<code>USA</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_country_name\"><code>$geoip_country_name</code></dt>\n<dd>\ncountry name, for example,\n&#x201C;<code>Russian Federation</code>&#x201D;, &#x201C;<code>United States</code>&#x201D;.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_geoip_module.html#geoip_country",
    "module": "ngx_stream_geoip_module"
  },
  {
    "name": "geoip_city",
    "syntax": "geoip_city file;",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Specifies a database used to determine the country, region, and citydepending on the client IP address.The following variables are available when using this database:",
    "doc": "<p>\nSpecifies a database used to determine the country, region, and city\ndepending on the client IP address.\nThe following variables are available when using this database:\n</p><dl class=\"compact\">\n\n<dt id=\"var_geoip_area_code\"><code>$geoip_area_code</code></dt>\n<dd>telephone area code (US only).\n<blockquote class=\"note\">\nThis variable may contain outdated information since\nthe corresponding database field is deprecated.\n</blockquote>\n</dd>\n\n<dt id=\"var_geoip_city_continent_code\">\n<code>$geoip_city_continent_code</code></dt>\n<dd>two-letter continent code, for example,\n&#x201C;<code>EU</code>&#x201D;, &#x201C;<code>NA</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_city_country_code\"><code>$geoip_city_country_code</code>\n</dt>\n<dd>\ntwo-letter country code, for example,\n&#x201C;<code>RU</code>&#x201D;, &#x201C;<code>US</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_city_country_code3\"><code>$geoip_city_country_code3</code>\n</dt>\n<dd>\nthree-letter country code, for example,\n&#x201C;<code>RUS</code>&#x201D;, &#x201C;<code>USA</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_city_country_name\"><code>$geoip_city_country_name</code>\n</dt>\n<dd>\ncountry name, for example,\n&#x201C;<code>Russian Federation</code>&#x201D;, &#x201C;<code>United States</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_dma_code\"><code>$geoip_dma_code</code></dt>\n<dd>\nDMA region code in US (also known as &#x201C;metro code&#x201D;), according to the\n<a href=\"https://developers.google.com/adwords/api/docs/appendix/cities-DMAregions\">geotargeting</a>\nin Google AdWords API.\n</dd>\n\n<dt id=\"var_geoip_latitude\"><code>$geoip_latitude</code></dt>\n<dd>latitude.</dd>\n\n<dt id=\"var_geoip_longitude\"><code>$geoip_longitude</code></dt>\n<dd>longitude.</dd>\n\n<dt id=\"var_geoip_region\"><code>$geoip_region</code></dt>\n<dd>\ntwo-symbol country region code (region, territory, state, province, federal land\nand the like), for example,\n&#x201C;<code>48</code>&#x201D;, &#x201C;<code>DC</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_region_name\"><code>$geoip_region_name</code></dt>\n<dd>\ncountry region name (region, territory, state, province, federal land\nand the like), for example,\n&#x201C;<code>Moscow City</code>&#x201D;, &#x201C;<code>District of Columbia</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_city\"><code>$geoip_city</code></dt>\n<dd>\ncity name, for example,\n&#x201C;<code>Moscow</code>&#x201D;, &#x201C;<code>Washington</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_postal_code\"><code>$geoip_postal_code</code></dt>\n<dd>\npostal code.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_geoip_module.html#geoip_city",
    "module": "ngx_stream_geoip_module"
  },
  {
    "name": "geoip_org",
    "syntax": "geoip_org file;",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Specifies a database used to determine the organizationdepending on the client IP address.The following variable is available when using this database:",
    "doc": "<p>\nSpecifies a database used to determine the organization\ndepending on the client IP address.\nThe following variable is available when using this database:\n</p><dl class=\"compact\">\n\n<dt id=\"var_geoip_org\"><code>$geoip_org</code></dt>\n<dd>\norganization name, for example, &#x201C;The University of Melbourne&#x201D;.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_geoip_module.html#geoip_org",
    "module": "ngx_stream_geoip_module"
  },
  {
    "name": "geo",
    "syntax": "geo [$address] $variable { ... }",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Describes the dependency of values of the specified variableon the client IP address.By default, the address is taken from the $remote_addr variable,but it can also be taken from another variable, for example:",
    "doc": "<p>\nDescribes the dependency of values of the specified variable\non the client IP address.\nBy default, the address is taken from the `$remote_addr` variable,\nbut it can also be taken from another variable, for example:\n</p><blockquote class=\"example\"><pre>\ngeo $arg_remote_addr $geo {\n    ...;\n}\n</pre></blockquote><blockquote class=\"note\">\nSince variables are evaluated only when used, the mere existence\nof even a large number of declared &#x201C;<code>geo</code>&#x201D; variables\ndoes not cause any extra costs for connection processing.\n</blockquote><p>\nIf the value of a variable does not represent a valid IP address\nthen the &#x201C;`255.255.255.255`&#x201D; address is used.\n</p><p>\nAddresses are specified either as prefixes in CIDR notation\n(including individual addresses) or as ranges.\n</p><p>\nThe following special parameters are also supported:\n</p><dl class=\"compact\">\n\n<dt><code>delete</code></dt>\n<dd>\ndeletes the specified network.\n</dd>\n\n<dt><code>default</code></dt>\n<dd>\na value set to the variable if the client address does not\nmatch any of the specified addresses.\nWhen addresses are specified in CIDR notation,\n&#x201C;<code>0.0.0.0/0</code>&#x201D; and &#x201C;<code>::/0</code>&#x201D;\ncan be used instead of <code>default</code>.\nWhen <code>default</code> is not specified, the default\nvalue will be an empty string.\n</dd>\n\n<dt><code>include</code></dt>\n<dd>\nincludes a file with addresses and values.\nThere can be several inclusions.\n</dd>\n\n<dt><code>ranges</code></dt>\n<dd>\nindicates that addresses are specified as ranges.\nThis parameter should be the first.\nTo speed up loading of a geo base, addresses should be put in ascending order.\n</dd>\n\n</dl><p>\nExample:\n</p><blockquote class=\"example\"><pre>\ngeo $country {\n    default        ZZ;\n    include        conf/geo.conf;\n    delete         127.0.0.0/16;\n\n    127.0.0.0/24   US;\n    127.0.0.1/32   RU;\n    10.1.0.0/16    RU;\n    192.168.1.0/24 UK;\n}\n</pre></blockquote><p>\nThe `conf/geo.conf` file could contain the following lines:\n</p><blockquote class=\"example\"><pre>\n10.2.0.0/16    RU;\n192.168.2.0/24 RU;\n</pre></blockquote><p>\nA value of the most specific match is used.\nFor example, for the 127.0.0.1 address the value &#x201C;`RU`&#x201D;\nwill be chosen, not &#x201C;`US`&#x201D;.\n</p><p>\nExample with ranges:\n</p><blockquote class=\"example\"><pre>\ngeo $country {\n    ranges;\n    default                   ZZ;\n    127.0.0.0-127.0.0.0       US;\n    127.0.0.1-127.0.0.1       RU;\n    127.0.0.1-127.0.0.255     US;\n    10.1.0.0-10.1.255.255     RU;\n    192.168.1.0-192.168.1.255 UK;\n}\n</pre></blockquote>",
    "notes": [
      "\nSince variables are evaluated only when used, the mere existence\nof even a large number of declared “geo” variables\ndoes not cause any extra costs for connection processing.\n"
    ],
    "since": null,
    "link": "stream/ngx_stream_geo_module.html#geo",
    "module": "ngx_stream_geo_module"
  },
  {
    "name": "allow",
    "syntax": "allow \n    address |\n    CIDR |\n    unix: |\n    all;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Allows access for the specified network or address.If the special value unix: is specified,allows access for all UNIX-domain sockets.",
    "doc": "<p>\nAllows access for the specified network or address.\nIf the special value `unix:` is specified,\nallows access for all UNIX-domain sockets.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_access_module.html#allow",
    "module": "ngx_stream_access_module"
  },
  {
    "name": "deny",
    "syntax": "deny \n    address |\n    CIDR |\n    unix: |\n    all;",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Denies access for the specified network or address.If the special value unix: is specified,denies access for all UNIX-domain sockets.",
    "doc": "<p>\nDenies access for the specified network or address.\nIf the special value `unix:` is specified,\ndenies access for all UNIX-domain sockets.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_access_module.html#deny",
    "module": "ngx_stream_access_module"
  },
  {
    "name": "listen",
    "syntax": "listen \n    address:port\n    [ssl]\n    [udp]\n    [proxy_protocol]\n    [backlog=number]\n    [bind]\n    [ipv6only=on|off]\n    [reuseport]\n    [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];",
    "def": null,
    "contexts": [
      "server"
    ],
    "desc": "Sets the address and port for the socketon which the server will accept connections.It is possible to specify just the port.The address can also be a hostname, for example:",
    "doc": "<p>\nSets the *`address`* and *`port`* for the socket\non which the server will accept connections.\nIt is possible to specify just the port.\nThe address can also be a hostname, for example:\n</p><blockquote class=\"example\"><pre>\nlisten 127.0.0.1:12345;\nlisten *:12345;\nlisten 12345;     # same as *:12345\nlisten localhost:12345;\n</pre></blockquote><p> \nIPv6 addresses are specified in square brackets:\n</p><blockquote class=\"example\"><pre>\nlisten [::1]:12345;\nlisten [::]:12345;\n</pre></blockquote><p> \nUNIX-domain sockets are specified with the &#x201C;`unix:`&#x201D;\nprefix:\n</p><blockquote class=\"example\"><pre>\nlisten unix:/var/run/nginx.sock;\n</pre></blockquote><p>\nThe `ssl` parameter allows specifying that all\nconnections accepted on this port should work in SSL mode.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_core_module.html#listen",
    "module": "ngx_stream_core_module"
  },
  {
    "name": "preread_buffer_size",
    "syntax": "preread_buffer_size size;",
    "def": "preread_buffer_size 16k;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a size of thepreread buffer.",
    "doc": "<p>\nSpecifies a *`size`* of the\n<a href=\"stream_processing.html#preread_phase\">preread</a> buffer.\n</p>",
    "notes": [],
    "since": "1.11.5",
    "link": "stream/ngx_stream_core_module.html#preread_buffer_size",
    "module": "ngx_stream_core_module"
  },
  {
    "name": "preread_timeout",
    "syntax": "preread_timeout timeout;",
    "def": "preread_timeout 30s;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a timeout of thepreread phase.",
    "doc": "<p>\nSpecifies a *`timeout`* of the\n<a href=\"stream_processing.html#preread_phase\">preread</a> phase.\n</p>",
    "notes": [],
    "since": "1.11.5",
    "link": "stream/ngx_stream_core_module.html#preread_timeout",
    "module": "ngx_stream_core_module"
  },
  {
    "name": "proxy_protocol_timeout",
    "syntax": "proxy_protocol_timeout timeout;",
    "def": "proxy_protocol_timeout 30s;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Specifies a timeout forreading the PROXY protocol header to complete.If no entire header is transmitted within this time,the connection is closed.",
    "doc": "<p>\nSpecifies a *`timeout`* for\nreading the PROXY protocol header to complete.\nIf no entire header is transmitted within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": "1.11.4",
    "link": "stream/ngx_stream_core_module.html#proxy_protocol_timeout",
    "module": "ngx_stream_core_module"
  },
  {
    "name": "resolver",
    "syntax": "resolver \n    address ...\n    [valid=time]\n    [ipv6=on|off];",
    "def": null,
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Configures name servers used to resolve names of upstream serversinto addresses, for example:",
    "doc": "<p>\nConfigures name servers used to resolve names of upstream servers\ninto addresses, for example:\n</p><blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p> \nAn address can be specified as a domain name or IP address,\nand an optional port.\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\n</p><p>\nBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv6 addresses is not desired,\nthe `ipv6=off` parameter can be specified.\n</p><p>\nBy default, nginx caches answers using the TTL value of a response.\nThe optional `valid` parameter allows overriding it:\n</p><blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353 valid=30s;\n</pre></blockquote><blockquote class=\"note\">\nBefore version 1.11.3, this directive was available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nBefore version 1.11.3, this directive was available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.11.3",
    "link": "stream/ngx_stream_core_module.html#resolver",
    "module": "ngx_stream_core_module"
  },
  {
    "name": "resolver_timeout",
    "syntax": "resolver_timeout time;",
    "def": "resolver_timeout 30s;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Sets a timeout for name resolution, for example:",
    "doc": "<p>\nSets a timeout for name resolution, for example:\n</p><blockquote class=\"example\"><pre>\nresolver_timeout 5s;\n</pre></blockquote><blockquote class=\"note\">\nBefore version 1.11.3, this directive was available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nBefore version 1.11.3, this directive was available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.11.3",
    "link": "stream/ngx_stream_core_module.html#resolver_timeout",
    "module": "ngx_stream_core_module"
  },
  {
    "name": "server",
    "syntax": "server { ... }",
    "def": null,
    "contexts": [
      "stream"
    ],
    "desc": "Sets the configuration for a server.",
    "doc": "<p>\nSets the configuration for a server.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_core_module.html#server",
    "module": "ngx_stream_core_module"
  },
  {
    "name": "stream",
    "syntax": "stream { ... }",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Provides the configuration file context in which the stream server directivesare specified.",
    "doc": "<p>\nProvides the configuration file context in which the stream server directives\nare specified.\n</p>",
    "notes": [],
    "since": null,
    "link": "stream/ngx_stream_core_module.html#stream",
    "module": "ngx_stream_core_module"
  },
  {
    "name": "tcp_nodelay",
    "syntax": "tcp_nodelay on | off;",
    "def": "tcp_nodelay on;",
    "contexts": [
      "stream",
      "server"
    ],
    "desc": "Enables or disables the use of the TCP_NODELAY option.The option is enabled for both client and proxied server connections.",
    "doc": "<p>\nEnables or disables the use of the `TCP_NODELAY` option.\nThe option is enabled for both client and proxied server connections.\n</p>",
    "notes": [],
    "since": "1.9.4",
    "link": "stream/ngx_stream_core_module.html#tcp_nodelay",
    "module": "ngx_stream_core_module"
  },
  {
    "name": "variables_hash_bucket_size",
    "syntax": "variables_hash_bucket_size size;",
    "def": "variables_hash_bucket_size 64;",
    "contexts": [
      "stream"
    ],
    "desc": "Sets the bucket size for the variables hash table.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the bucket size for the variables hash table.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": "1.11.2",
    "link": "stream/ngx_stream_core_module.html#variables_hash_bucket_size",
    "module": "ngx_stream_core_module"
  },
  {
    "name": "variables_hash_max_size",
    "syntax": "variables_hash_max_size size;",
    "def": "variables_hash_max_size 1024;",
    "contexts": [
      "stream"
    ],
    "desc": "Sets the maximum size of the variables hash table.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the maximum *`size`* of the variables hash table.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": "1.11.2",
    "link": "stream/ngx_stream_core_module.html#variables_hash_max_size",
    "module": "ngx_stream_core_module"
  },
  {
    "name": "smtp_auth",
    "syntax": "smtp_auth method ...;",
    "def": "smtp_auth login plain;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets permitted methods ofSASL authenticationfor SMTP clients.Supported methods are:",
    "doc": "<p>\nSets permitted methods of\n<a href=\"https://tools.ietf.org/html/rfc2554\">SASL authentication</a>\nfor SMTP clients.\nSupported methods are:\n</p><dl class=\"compact\">\n\n<dt><code>login</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/draft-murchison-sasl-login-00\">AUTH LOGIN</a>\n</dd>\n\n<dt><code>plain</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc4616\">AUTH PLAIN</a>\n</dd>\n\n<dt><code>cram-md5</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc2195\">AUTH CRAM-MD5</a>.\nIn order for this method to work, the password must be stored unencrypted.\n</dd>\n\n<dt><code>external</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc4422\">AUTH EXTERNAL</a> (1.11.6).\n</dd>\n\n<dt><code>none</code></dt>\n<dd>\nAuthentication is not required.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_smtp_module.html#smtp_auth",
    "module": "ngx_mail_smtp_module"
  },
  {
    "name": "smtp_capabilities",
    "syntax": "smtp_capabilities extension ...;",
    "def": null,
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets the SMTP protocol extensions listthat is passed to the client in response to theEHLO command.The authentication methods specified in the smtp_auth directive andSTARTTLSare automatically added to this list depending on thestarttls directive value.",
    "doc": "<p>\nSets the SMTP protocol extensions list\nthat is passed to the client in response to the\n`EHLO` command.\nThe authentication methods specified in the <a href=\"#smtp_auth\">smtp_auth</a> directive and\n<a href=\"https://tools.ietf.org/html/rfc3207\">STARTTLS</a>\nare automatically added to this list depending on the\n<a href=\"ngx_mail_ssl_module.html#starttls\">starttls</a> directive value.\n</p><p>\nIt makes sense to specify the extensions\nsupported by the MTA\nto which the clients are proxied (if these extensions are related to commands\nused after the authentication, when nginx transparently proxies the client\nconnection to the backend).\n</p><p>\nThe current list of standardized extensions is published at\n<a href=\"http://www.iana.org/assignments/mail-parameters\">www.iana.org</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_smtp_module.html#smtp_capabilities",
    "module": "ngx_mail_smtp_module"
  },
  {
    "name": "pop3_auth",
    "syntax": "pop3_auth method ...;",
    "def": "pop3_auth plain;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets permitted methods of authentication for POP3 clients.Supported methods are:",
    "doc": "<p>\nSets permitted methods of authentication for POP3 clients.\nSupported methods are:\n</p><dl class=\"compact\">\n\n<dt><code>plain</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc1939\">USER/PASS</a>,\n<a href=\"https://tools.ietf.org/html/rfc4616\">AUTH PLAIN</a>,\n<a href=\"https://tools.ietf.org/html/draft-murchison-sasl-login-00\">AUTH LOGIN</a>.\nIt is not possible to disable these methods.\n</dd>\n\n<dt><code>apop</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc1939\">APOP</a>.\nIn order for this method to work, the password must be stored unencrypted.\n</dd>\n\n<dt><code>cram-md5</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc2195\">AUTH CRAM-MD5</a>.\nIn order for this method to work, the password must be stored unencrypted.\n</dd>\n\n<dt><code>external</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc4422\">AUTH EXTERNAL</a> (1.11.6).\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_pop3_module.html#pop3_auth",
    "module": "ngx_mail_pop3_module"
  },
  {
    "name": "pop3_capabilities",
    "syntax": "pop3_capabilities extension ...;",
    "def": "pop3_capabilities TOP USER UIDL;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets thePOP3 protocolextensions list that is passed to the client in response tothe CAPA command.The authentication methods specified in the pop3_auth directive(SASL extension) andSTLSare automatically added to this list depending on thestarttls directive value.",
    "doc": "<p>\nSets the\n<a href=\"https://tools.ietf.org/html/rfc2449\">POP3 protocol</a>\nextensions list that is passed to the client in response to\nthe `CAPA` command.\nThe authentication methods specified in the <a href=\"#pop3_auth\">pop3_auth</a> directive\n(<a href=\"https://tools.ietf.org/html/rfc2449\">SASL</a> extension) and\n<a href=\"https://tools.ietf.org/html/rfc2595\">STLS</a>\nare automatically added to this list depending on the\n<a href=\"ngx_mail_ssl_module.html#starttls\">starttls</a> directive value.\n</p><p>\nIt makes sense to specify the extensions\nsupported by the POP3 backends\nto which the clients are proxied (if these extensions are related to commands\nused after the authentication, when nginx transparently proxies the client\nconnection to the backend).\n</p><p>\nThe current list of standardized extensions is published at\n<a href=\"http://www.iana.org/assignments/pop3-extension-mechanism\">www.iana.org</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_pop3_module.html#pop3_capabilities",
    "module": "ngx_mail_pop3_module"
  },
  {
    "name": "imap_auth",
    "syntax": "imap_auth method ...;",
    "def": "imap_auth plain;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets permitted methods of authentication for IMAP clients.Supported methods are:",
    "doc": "<p>\nSets permitted methods of authentication for IMAP clients.\nSupported methods are:\n</p><dl class=\"compact\">\n\n<dt><code>login</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/draft-murchison-sasl-login-00\">AUTH=LOGIN</a>\n</dd>\n\n<dt><code>plain</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc4616\">AUTH=PLAIN</a>\n</dd>\n\n<dt><code>cram-md5</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc2195\">AUTH=CRAM-MD5</a>.\nIn order for this method to work, the password must be stored unencrypted.\n</dd>\n\n<dt><code>external</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc4422\">AUTH=EXTERNAL</a> (1.11.6).\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_imap_module.html#imap_auth",
    "module": "ngx_mail_imap_module"
  },
  {
    "name": "imap_capabilities",
    "syntax": "imap_capabilities extension ...;",
    "def": "imap_capabilities IMAP4 IMAP4rev1 UIDPLUS;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets theIMAP protocolextensions list that is passed to the client in response tothe CAPABILITY command.The authentication methods specified in the imap_auth directive andSTARTTLSare automatically added to this list depending on thestarttls directive value.",
    "doc": "<p>\nSets the\n<a href=\"https://tools.ietf.org/html/rfc3501\">IMAP protocol</a>\nextensions list that is passed to the client in response to\nthe `CAPABILITY` command.\nThe authentication methods specified in the <a href=\"#imap_auth\">imap_auth</a> directive and\n<a href=\"https://tools.ietf.org/html/rfc2595\">STARTTLS</a>\nare automatically added to this list depending on the\n<a href=\"ngx_mail_ssl_module.html#starttls\">starttls</a> directive value.\n</p><p>\nIt makes sense to specify the extensions\nsupported by the IMAP backends\nto which the clients are proxied (if these extensions are related to commands\nused after the authentication, when nginx transparently proxies a client\nconnection to the backend).\n</p><p>\nThe current list of standardized extensions is published at\n<a href=\"http://www.iana.org/assignments/imap4-capabilities\">www.iana.org</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_imap_module.html#imap_capabilities",
    "module": "ngx_mail_imap_module"
  },
  {
    "name": "imap_client_buffer",
    "syntax": "imap_client_buffer size;",
    "def": "imap_client_buffer 4k|8k;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets the IMAP commands read buffer size.By default, the buffer size is equal to one memory page.This is either 4K or 8K, depending on a platform.",
    "doc": "<p>\nSets the IMAP commands read buffer size.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_imap_module.html#imap_client_buffer",
    "module": "ngx_mail_imap_module"
  },
  {
    "name": "ssl",
    "syntax": "ssl on | off;",
    "def": "ssl off;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Enables the SSL/TLS protocol for the given server.",
    "doc": "<p>\nEnables the SSL/TLS protocol for the given server.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_ssl_module.html#ssl",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_certificate",
    "syntax": "ssl_certificate file;",
    "def": null,
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Specifies a file with the certificate in the PEM formatfor the given server.If intermediate certificates should be specified in addition to a primarycertificate, they should be specified in the same file in the followingorder: the primary certificate comes first, then the intermediate certificates.A secret key in the PEM format may be placed in the same file.",
    "doc": "<p>\nSpecifies a *`file`* with the certificate in the PEM format\nfor the given server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\n</p><p>\nSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\n</p><blockquote class=\"example\"><pre>\nserver {\n    listen              993 ssl;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n</pre></blockquote><blockquote class=\"note\">\nOnly OpenSSL 1.0.2 or higher supports separate certificate chains\nfor different certificates.\nWith older versions, only one certificate chain can be used.\n</blockquote>",
    "notes": [
      "\nOnly OpenSSL 1.0.2 or higher supports separate certificate chains\nfor different certificates.\nWith older versions, only one certificate chain can be used.\n"
    ],
    "since": null,
    "link": "mail/ngx_mail_ssl_module.html#ssl_certificate",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_certificate_key",
    "syntax": "ssl_certificate_key file;",
    "def": null,
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Specifies a file with the secret key in the PEM formatfor the given server.",
    "doc": "<p>\nSpecifies a *`file`* with the secret key in the PEM format\nfor the given server.\n</p><p>\nThe value\n`engine`:*`name`*:*`id`*\ncan be specified instead of the *`file`* (1.7.9),\nwhich loads a secret key with a specified *`id`*\nfrom the OpenSSL engine *`name`*.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_ssl_module.html#ssl_certificate_key",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_ciphers",
    "syntax": "ssl_ciphers ciphers;",
    "def": "ssl_ciphers HIGH:!aNULL:!MD5;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Specifies the enabled ciphers.The ciphers are specified in the format understood by theOpenSSL library, for example:",
    "doc": "<p>\nSpecifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\n</p><blockquote class=\"example\"><pre>\nssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n</pre></blockquote><p>\nThe full list can be viewed using the\n&#x201C;`openssl ciphers`&#x201D; command.\n</p><blockquote class=\"note\">\nThe previous versions of nginx used\n<a href=\"../http/configuring_https_servers.html#compatibility\">different</a>\nciphers by default.\n</blockquote>",
    "notes": [
      "\nThe previous versions of nginx used\ndifferent\nciphers by default.\n"
    ],
    "since": null,
    "link": "mail/ngx_mail_ssl_module.html#ssl_ciphers",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_client_certificate",
    "syntax": "ssl_client_certificate file;",
    "def": null,
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Specifies a file with trusted CA certificates in the PEM formatused to verify client certificates.",
    "doc": "<p>\nSpecifies a *`file`* with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates.\n</p><p>\nThe list of certificates will be sent to clients.\nIf this is not desired, the <a href=\"#ssl_trusted_certificate\">ssl_trusted_certificate</a>\ndirective can be used.\n</p>",
    "notes": [],
    "since": "1.7.11",
    "link": "mail/ngx_mail_ssl_module.html#ssl_client_certificate",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_crl",
    "syntax": "ssl_crl file;",
    "def": null,
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Specifies a file with revoked certificates (CRL)in the PEM format used to verifyclient certificates.",
    "doc": "<p>\nSpecifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to <a href=\"#ssl_verify_client\">verify</a>\nclient certificates.\n</p>",
    "notes": [],
    "since": "1.7.11",
    "link": "mail/ngx_mail_ssl_module.html#ssl_crl",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_dhparam",
    "syntax": "ssl_dhparam file;",
    "def": null,
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Specifies a file with DH parameters for DHE ciphers.",
    "doc": "<p>\nSpecifies a *`file`* with DH parameters for DHE ciphers.\n</p>",
    "notes": [],
    "since": "0.7.2",
    "link": "mail/ngx_mail_ssl_module.html#ssl_dhparam",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_ecdh_curve",
    "syntax": "ssl_ecdh_curve curve;",
    "def": "ssl_ecdh_curve auto;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Specifies a curve for ECDHE ciphers.",
    "doc": "<p>\nSpecifies a *`curve`* for ECDHE ciphers.\n</p><p>\nWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\n</p><blockquote class=\"example\"><pre>\nssl_ecdh_curve prime256v1:secp384r1;\n</pre></blockquote><p>\nThe special value `auto` (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor `prime256v1` with older versions.\n</p><blockquote class=\"note\">\nPrior to version 1.11.0,\nthe <code>prime256v1</code> curve was used by default.\n</blockquote>",
    "notes": [
      "\nPrior to version 1.11.0,\nthe prime256v1 curve was used by default.\n"
    ],
    "since": "1.1.0",
    "link": "mail/ngx_mail_ssl_module.html#ssl_ecdh_curve",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_password_file",
    "syntax": "ssl_password_file file;",
    "def": null,
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Specifies a file with passphrases forsecret keyswhere each passphrase is specified on a separate line.Passphrases are tried in turn when loading the key.",
    "doc": "<p>\nSpecifies a *`file`* with passphrases for\n<a href=\"#ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nmail {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        server_name mail1.example.com;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        server_name mail2.example.com;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n</pre></blockquote>",
    "notes": [],
    "since": "1.7.3",
    "link": "mail/ngx_mail_ssl_module.html#ssl_password_file",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_prefer_server_ciphers",
    "syntax": "ssl_prefer_server_ciphers on | off;",
    "def": "ssl_prefer_server_ciphers off;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Specifies that server ciphers should be preferred over client cipherswhen the SSLv3 and TLS protocols are used.",
    "doc": "<p>\nSpecifies that server ciphers should be preferred over client ciphers\nwhen the SSLv3 and TLS protocols are used.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_ssl_module.html#ssl_prefer_server_ciphers",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_protocols",
    "syntax": "ssl_protocols \n    [SSLv2]\n    [SSLv3]\n    [TLSv1]\n    [TLSv1.1]\n    [TLSv1.2];",
    "def": "ssl_protocols TLSv1 TLSv1.1 TLSv1.2;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Enables the specified protocols.The TLSv1.1 and TLSv1.2 parameters workonly when the OpenSSL library of version 1.0.1 or higher is used.",
    "doc": "<p>\nEnables the specified protocols.\nThe `TLSv1.1` and `TLSv1.2` parameters work\nonly when the OpenSSL library of version 1.0.1 or higher is used.\n</p><blockquote class=\"note\">\nThe <code>TLSv1.1</code> and <code>TLSv1.2</code> parameters are\nsupported starting from versions 1.1.13 and 1.0.12\nso when the OpenSSL version 1.0.1 or higher\nis used on older nginx versions, these protocols work, but cannot\nbe disabled.\n</blockquote>",
    "notes": [
      "\nThe TLSv1.1 and TLSv1.2 parameters are\nsupported starting from versions 1.1.13 and 1.0.12\nso when the OpenSSL version 1.0.1 or higher\nis used on older nginx versions, these protocols work, but cannot\nbe disabled.\n"
    ],
    "since": null,
    "link": "mail/ngx_mail_ssl_module.html#ssl_protocols",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_session_cache",
    "syntax": "ssl_session_cache \n    off |\n    none |\n    [builtin[:size]]\n    [shared:name:size];",
    "def": "ssl_session_cache none;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets the types and sizes of caches that store session parameters.A cache can be of any of the following types:",
    "doc": "<p>\nSets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\n</p><dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nthe use of a session cache is strictly prohibited:\nnginx explicitly tells a client that sessions may not be reused.\n</dd>\n\n<dt><code>none</code></dt>\n<dd>\nthe use of a session cache is gently disallowed:\nnginx tells a client that sessions may be reused, but does not\nactually store session parameters in the cache.\n</dd>\n\n<dt><code>builtin</code></dt>\n<dd>\na cache built in OpenSSL; used by one worker process only.\nThe cache size is specified in sessions.\nIf size is not given, it is equal to 20480 sessions.\nUse of the built-in cache can cause memory fragmentation.\n</dd>\n\n<dt><code>shared</code></dt>\n<dd>\na cache shared between all worker processes.\nThe cache size is specified in bytes; one megabyte can store\nabout 4000 sessions.\nEach shared cache should have an arbitrary name.\nA cache with the same name can be used in several\nservers.\n</dd>\n\n</dl><p>\nBoth cache types can be used simultaneously, for example:\n</p><blockquote class=\"example\"><pre>\nssl_session_cache builtin:1000 shared:SSL:10m;\n</pre></blockquote><p> \nbut using only shared cache without the built-in cache should\nbe more efficient.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_ssl_module.html#ssl_session_cache",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_session_ticket_key",
    "syntax": "ssl_session_ticket_key file;",
    "def": null,
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets a file with the secret key used to encryptand decrypt TLS session tickets.The directive is necessary if the same key has to be shared betweenmultiple servers.By default, a randomly generated key is used.",
    "doc": "<p>\nSets a *`file`* with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\n</p><p>\nIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\n</p><blockquote class=\"example\"><pre>\nssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n</pre></blockquote><p>\nThe *`file`* must contain 80 or 48 bytes\nof random data and can be created using the following command:\n</p><blockquote class=\"example\"><pre>\nopenssl rand 80 &gt; ticket.key\n</pre></blockquote><p> \nDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.\n</p>",
    "notes": [],
    "since": "1.5.7",
    "link": "mail/ngx_mail_ssl_module.html#ssl_session_ticket_key",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_session_tickets",
    "syntax": "ssl_session_tickets on | off;",
    "def": "ssl_session_tickets on;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Enables or disables session resumption throughTLS session tickets.",
    "doc": "<p>\nEnables or disables session resumption through\n<a href=\"https://tools.ietf.org/html/rfc5077\">TLS session tickets</a>.\n</p>",
    "notes": [],
    "since": "1.5.9",
    "link": "mail/ngx_mail_ssl_module.html#ssl_session_tickets",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_session_timeout",
    "syntax": "ssl_session_timeout time;",
    "def": "ssl_session_timeout 5m;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Specifies a time during which a client may reuse thesession parameters.",
    "doc": "<p>\nSpecifies a time during which a client may reuse the\nsession parameters.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_ssl_module.html#ssl_session_timeout",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_trusted_certificate",
    "syntax": "ssl_trusted_certificate file;",
    "def": null,
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Specifies a file with trusted CA certificates in the PEM formatused to verify client certificates.",
    "doc": "<p>\nSpecifies a *`file`* with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates.\n</p><p>\nIn contrast to the certificate set by <a href=\"#ssl_client_certificate\">ssl_client_certificate</a>,\nthe list of these certificates will not be sent to clients.\n</p>",
    "notes": [],
    "since": "1.7.11",
    "link": "mail/ngx_mail_ssl_module.html#ssl_trusted_certificate",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_verify_client",
    "syntax": "ssl_verify_client \n    on | off |\n    optional | optional_no_ca;",
    "def": "ssl_verify_client off;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Enables verification of client certificates.The verification result is passed in the“Auth-SSL-Verify” header of theauthenticationrequest.",
    "doc": "<p>\nEnables verification of client certificates.\nThe verification result is passed in the\n&#x201C;Auth-SSL-Verify&#x201D; header of the\n<a href=\"ngx_mail_auth_http_module.html#auth_http\">authentication</a>\nrequest.\n</p><p>\nThe `optional` parameter requests the client\ncertificate and verifies it if the certificate is present.\n</p><p>\nThe `optional_no_ca` parameter\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through requests\n<a href=\"ngx_mail_auth_http_module.html#auth_http_pass_client_cert\">sent</a>\nto the authentication server.\n</p>",
    "notes": [],
    "since": "1.7.11",
    "link": "mail/ngx_mail_ssl_module.html#ssl_verify_client",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "ssl_verify_depth",
    "syntax": "ssl_verify_depth number;",
    "def": "ssl_verify_depth 1;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets the verification depth in the client certificates chain.",
    "doc": "<p>\nSets the verification depth in the client certificates chain.\n</p>",
    "notes": [],
    "since": "1.7.11",
    "link": "mail/ngx_mail_ssl_module.html#ssl_verify_depth",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "starttls",
    "syntax": "starttls \n  on |\n  off |\n  only;",
    "def": "starttls off;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "",
    "doc": "<dl class=\"compact\">\n\n<dt><code>on</code></dt>\n<dd>\nallow usage of the <code>STLS</code> command for the POP3\nand the <code>STARTTLS</code> command for the IMAP and SMTP;\n</dd>\n\n<dt><code>off</code></dt>\n<dd>\ndeny usage of the <code>STLS</code>\nand <code>STARTTLS</code> commands;\n</dd>\n\n<dt><code>only</code></dt>\n<dd>\nrequire preliminary TLS transition.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_ssl_module.html#starttls",
    "module": "ngx_mail_ssl_module"
  },
  {
    "name": "proxy_buffer",
    "syntax": "proxy_buffer size;",
    "def": "proxy_buffer 4k|8k;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets the size of the buffer used for proxying.By default, the buffer size is equal to one memory page.Depending on a platform, it is either 4K or 8K.",
    "doc": "<p>\nSets the size of the buffer used for proxying.\nBy default, the buffer size is equal to one memory page.\nDepending on a platform, it is either 4K or 8K.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_proxy_module.html#proxy_buffer",
    "module": "ngx_mail_proxy_module"
  },
  {
    "name": "proxy_pass_error_message",
    "syntax": "proxy_pass_error_message on | off;",
    "def": "proxy_pass_error_message off;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Indicates whether to pass the error message obtained duringthe authentication on the backend to the client.",
    "doc": "<p>\nIndicates whether to pass the error message obtained during\nthe authentication on the backend to the client.\n</p><p>\nUsually, if the authentication in nginx is a success,\nthe backend cannot return an error.\nIf it nevertheless returns an error,\nit means some internal error has occurred.\nIn such case the backend message can contain information\nthat should not be shown to the client.\nHowever, responding with an error for the correct password\nis a normal behavior for some POP3 servers.\nFor example, CommuniGatePro informs a user about\n<a href=\"http://www.stalker.com/CommuniGatePro/Alerts.html#Quota\">mailbox\noverflow</a> or other events by periodically outputting the\n<a href=\"http://www.stalker.com/CommuniGatePro/POP.html#Alerts\">authentication\nerror</a>.\nThe directive should be enabled in this case.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_proxy_module.html#proxy_pass_error_message",
    "module": "ngx_mail_proxy_module"
  },
  {
    "name": "proxy_timeout",
    "syntax": "proxy_timeout timeout;",
    "def": "proxy_timeout 24h;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets the timeout between two successiveread or write operations on client or proxied server connections.If no data is transmitted within this time, the connection is closed.",
    "doc": "<p>\nSets the *`timeout`* between two successive\nread or write operations on client or proxied server connections.\nIf no data is transmitted within this time, the connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_proxy_module.html#proxy_timeout",
    "module": "ngx_mail_proxy_module"
  },
  {
    "name": "xclient",
    "syntax": "xclient on | off;",
    "def": "xclient on;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Enables or disables the passing of theXCLIENTcommand with client parameters when connecting to the SMTP backend.",
    "doc": "<p>\nEnables or disables the passing of the\n<a href=\"http://www.postfix.org/XCLIENT_README.html\">XCLIENT</a>\ncommand with client parameters when connecting to the SMTP backend.\n</p><p>\nWith `XCLIENT`, the MTA is able to write client information\nto the log and apply various limitations based on this data.\n</p><p>\nIf `XCLIENT` is enabled\nthen nginx passes the following commands when connecting to the backend:\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_proxy_module.html#xclient",
    "module": "ngx_mail_proxy_module"
  },
  {
    "name": "auth_http",
    "syntax": "auth_http URL;",
    "def": null,
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets the URL of the HTTP authentication server.The protocol is described below.",
    "doc": "<p>\nSets the URL of the HTTP authentication server.\nThe protocol is described <a href=\"#protocol\">below</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_auth_http_module.html#auth_http",
    "module": "ngx_mail_auth_http_module"
  },
  {
    "name": "auth_http_header",
    "syntax": "auth_http_header header value;",
    "def": null,
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Appends the specified header to requests sent to the authentication server.This header can be used as the shared secret to verifythat the request comes from nginx.For example:",
    "doc": "<p>\nAppends the specified header to requests sent to the authentication server.\nThis header can be used as the shared secret to verify\nthat the request comes from nginx.\nFor example:\n</p><blockquote class=\"example\"><pre>\nauth_http_header X-Auth-Key &quot;secret_string&quot;;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_auth_http_module.html#auth_http_header",
    "module": "ngx_mail_auth_http_module"
  },
  {
    "name": "auth_http_pass_client_cert",
    "syntax": "auth_http_pass_client_cert on | off;",
    "def": "auth_http_pass_client_cert off;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Appends the “Auth-SSL-Cert” header with theclientcertificate in the PEM format (urlencoded)to requests sent to the authentication server.",
    "doc": "<p>\nAppends the &#x201C;Auth-SSL-Cert&#x201D; header with the\n<a href=\"ngx_mail_ssl_module.html#ssl_verify_client\">client</a>\ncertificate in the PEM format (urlencoded)\nto requests sent to the authentication server.\n</p>",
    "notes": [],
    "since": "1.7.11",
    "link": "mail/ngx_mail_auth_http_module.html#auth_http_pass_client_cert",
    "module": "ngx_mail_auth_http_module"
  },
  {
    "name": "auth_http_timeout",
    "syntax": "auth_http_timeout time;",
    "def": "auth_http_timeout 60s;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets the timeout for communication with the authentication server.",
    "doc": "<p>\nSets the timeout for communication with the authentication server.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_auth_http_module.html#auth_http_timeout",
    "module": "ngx_mail_auth_http_module"
  },
  {
    "name": "listen",
    "syntax": "listen \n    address:port\n    [ssl]\n    [backlog=number]\n    [bind]\n    [ipv6only=on|off]\n    [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];",
    "def": null,
    "contexts": [
      "server"
    ],
    "desc": "Sets the address and port for the socketon which the server will accept requests.It is possible to specify just the port.The address can also be a hostname, for example:",
    "doc": "<p>\nSets the *`address`* and *`port`* for the socket\non which the server will accept requests.\nIt is possible to specify just the port.\nThe address can also be a hostname, for example:\n</p><blockquote class=\"example\"><pre>\nlisten 127.0.0.1:110;\nlisten *:110;\nlisten 110;     # same as *:110\nlisten localhost:110;\n</pre></blockquote><p> \nIPv6 addresses (0.7.58) are specified in square brackets:\n</p><blockquote class=\"example\"><pre>\nlisten [::1]:110;\nlisten [::]:110;\n</pre></blockquote><p> \nUNIX-domain sockets (1.3.5) are specified with the &#x201C;`unix:`&#x201D;\nprefix:\n</p><blockquote class=\"example\"><pre>\nlisten unix:/var/run/nginx.sock;\n</pre></blockquote><p>\nDifferent servers must listen on different\n*`address`*:*`port`* pairs.\n</p><p>\nThe `ssl` parameter allows specifying that all\nconnections accepted on this port should work in SSL mode.\n</p><p>\nThe `listen` directive\ncan have several additional parameters specific to socket-related system calls.\n</p><dl class=\"compact\">\n\n<dt>\n<code>backlog</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the <code>backlog</code> parameter in the\n<code>listen()</code> call that limits\nthe maximum length for the queue of pending connections (1.9.2).\nBy default,\n<code>backlog</code> is set to -1 on FreeBSD, DragonFly BSD, and macOS,\nand to 511 on other platforms.\n</dd>\n\n<dt>\n<code>bind</code>\n</dt>\n<dd>\nthis parameter instructs to make a separate <code>bind()</code>\ncall for a given address:port pair.\nThe fact is that if there are several <code>listen</code> directives with\nthe same port but different addresses, and one of the\n<code>listen</code> directives listens on all addresses\nfor the given port (<code>*:</code><code><i>port</i></code>), nginx will\n<code>bind()</code> only to <code>*:</code><code><i>port</i></code>.\nIt should be noted that the <code>getsockname()</code> system call will be\nmade in this case to determine the address that accepted the connection.\nIf the <code>ipv6only</code>\nor <code>so_keepalive</code> parameters\nare used then for a given\n<code><i>address</i></code>:<code><i>port</i></code> pair\na separate <code>bind()</code> call will always be made.\n</dd>\n\n<dt>\n<code>ipv6only</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nthis parameter determines\n(via the <code>IPV6_V6ONLY</code> socket option)\nwhether an IPv6 socket listening on a wildcard address <code>[::]</code>\nwill accept only IPv6 connections or both IPv6 and IPv4 connections.\nThis parameter is turned on by default.\nIt can only be set once on start.\n</dd>\n\n<dt>\n<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code><i>keepidle</i></code>]:[<code><i>keepintvl</i></code>]:[<code><i>keepcnt</i></code>]\n</dt>\n<dd>\nthis parameter configures the &#x201C;TCP keepalive&#x201D; behavior\nfor the listening socket.\nIf this parameter is omitted then the operating system&#x2019;s settings will be\nin effect for the socket.\nIf it is set to the value &#x201C;<code>on</code>&#x201D;, the\n<code>SO_KEEPALIVE</code> option is turned on for the socket.\nIf it is set to the value &#x201C;<code>off</code>&#x201D;, the\n<code>SO_KEEPALIVE</code> option is turned off for the socket.\nSome operating systems support setting of TCP keepalive parameters on\na per-socket basis using the <code>TCP_KEEPIDLE</code>,\n<code>TCP_KEEPINTVL</code>, and <code>TCP_KEEPCNT</code> socket options.\nOn such systems (currently, Linux&#xA0;2.4+, NetBSD&#xA0;5+, and\nFreeBSD&#xA0;9.0-STABLE), they can be configured\nusing the <code><i>keepidle</i></code>, <code><i>keepintvl</i></code>, and\n<code><i>keepcnt</i></code> parameters.\nOne or two parameters may be omitted, in which case the system default setting\nfor the corresponding socket option will be in effect.\nFor example,\n<blockquote class=\"example\"><pre>so_keepalive=30m::10</pre></blockquote>\nwill set the idle timeout (<code>TCP_KEEPIDLE</code>) to 30 minutes,\nleave the probe interval (<code>TCP_KEEPINTVL</code>) at its system default,\nand set the probes count (<code>TCP_KEEPCNT</code>) to 10 probes.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_core_module.html#listen",
    "module": "ngx_mail_core_module"
  },
  {
    "name": "mail",
    "syntax": "mail { ... }",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Provides the configuration file context in which the mail server directivesare specified.",
    "doc": "<p>\nProvides the configuration file context in which the mail server directives\nare specified.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_core_module.html#mail",
    "module": "ngx_mail_core_module"
  },
  {
    "name": "protocol",
    "syntax": "protocol \n  imap |\n  pop3 |\n  smtp;",
    "def": null,
    "contexts": [
      "server"
    ],
    "desc": "Sets the protocol for a proxied server.Supported protocols areIMAP,POP3, andSMTP.",
    "doc": "<p>\nSets the protocol for a proxied server.\nSupported protocols are\n<a href=\"ngx_mail_imap_module.html\">IMAP</a>,\n<a href=\"ngx_mail_pop3_module.html\">POP3</a>, and\n<a href=\"ngx_mail_smtp_module.html\">SMTP</a>.\n</p><p>\nIf the directive is not set, the protocol can be detected automatically\nbased on the well-known port specified in the <a href=\"#listen\">listen</a>\ndirective:\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_core_module.html#protocol",
    "module": "ngx_mail_core_module"
  },
  {
    "name": "resolver",
    "syntax": "resolver \naddress ...\n[valid=time];resolver off;",
    "def": "resolver off;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Configures name servers used to find the client’s hostnameto pass it to theauthentication server,and in theXCLIENTcommand when proxying SMTP.For example:",
    "doc": "<p>\nConfigures name servers used to find the client&#x2019;s hostname\nto pass it to the\n<a href=\"ngx_mail_auth_http_module.html\">authentication server</a>,\nand in the\n<a href=\"ngx_mail_proxy_module.html#xclient\">XCLIENT</a>\ncommand when proxying SMTP.\nFor example:\n</p><blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p> \nAn address can be specified as a domain name or IP address,\nand an optional port (1.3.1, 1.2.2).\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\n</p><blockquote class=\"note\">\nBefore version 1.1.7, only a single name server could be configured.\nSpecifying name servers using IPv6 addresses is supported\nstarting from versions 1.3.1 and 1.2.2.\n</blockquote><p> \nBy default, nginx caches answers using the TTL value of a response.\nAn optional `valid` parameter allows overriding it:\n</p><blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353 valid=30s;\n</pre></blockquote><blockquote class=\"note\">\nBefore version 1.1.9, tuning of caching time was not possible,\nand nginx always cached answers for the duration of 5 minutes.\n</blockquote><p>\nThe special value `off` disables resolving.\n</p>",
    "notes": [
      "\nBefore version 1.1.7, only a single name server could be configured.\nSpecifying name servers using IPv6 addresses is supported\nstarting from versions 1.3.1 and 1.2.2.\n",
      "\nBefore version 1.1.9, tuning of caching time was not possible,\nand nginx always cached answers for the duration of 5 minutes.\n"
    ],
    "since": null,
    "link": "mail/ngx_mail_core_module.html#resolver",
    "module": "ngx_mail_core_module"
  },
  {
    "name": "resolver_timeout",
    "syntax": "resolver_timeout time;",
    "def": "resolver_timeout 30s;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets a timeout for DNS operations, for example:",
    "doc": "<p>\nSets a timeout for DNS operations, for example:\n</p><blockquote class=\"example\"><pre>\nresolver_timeout 5s;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_core_module.html#resolver_timeout",
    "module": "ngx_mail_core_module"
  },
  {
    "name": "server",
    "syntax": "server { ... }",
    "def": null,
    "contexts": [
      "mail"
    ],
    "desc": "Sets the configuration for a server.",
    "doc": "<p>\nSets the configuration for a server.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_core_module.html#server",
    "module": "ngx_mail_core_module"
  },
  {
    "name": "server_name",
    "syntax": "server_name name;",
    "def": "server_name hostname;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets the server name that is used:",
    "doc": "<p>\nSets the server name that is used:\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_core_module.html#server_name",
    "module": "ngx_mail_core_module"
  },
  {
    "name": "timeout",
    "syntax": "timeout time;",
    "def": "timeout 60s;",
    "contexts": [
      "mail",
      "server"
    ],
    "desc": "Sets the timeout that is used before proxying to the backend starts.",
    "doc": "<p>\nSets the timeout that is used before proxying to the backend starts.\n</p>",
    "notes": [],
    "since": null,
    "link": "mail/ngx_mail_core_module.html#timeout",
    "module": "ngx_mail_core_module"
  },
  {
    "name": "xml_entities",
    "syntax": "xml_entities path;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies the DTD file that declares character entities.This file is compiled at the configuration stage.For technical reasons, the module is unable to use theexternal subset declared in the processed XML, so it isignored and a specially defined file is used instead.This file should not describe the XML structure.It is enough to declare just the required character entities, for example:",
    "doc": "<p>\nSpecifies the DTD file that declares character entities.\nThis file is compiled at the configuration stage.\nFor technical reasons, the module is unable to use the\nexternal subset declared in the processed XML, so it is\nignored and a specially defined file is used instead.\nThis file should not describe the XML structure.\nIt is enough to declare just the required character entities, for example:\n</p><blockquote class=\"example\"><pre>\n&lt;!ENTITY nbsp &quot;&amp;#xa0;&quot;&gt;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_xslt_module.html#xml_entities",
    "module": "ngx_http_xslt_module"
  },
  {
    "name": "xslt_last_modified",
    "syntax": "xslt_last_modified on | off;",
    "def": "xslt_last_modified off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows preserving the “Last-Modified” header fieldfrom the original response during XSLT transformationsto facilitate response caching.",
    "doc": "<p>\nAllows preserving the &#x201C;Last-Modified&#x201D; header field\nfrom the original response during XSLT transformations\nto facilitate response caching.\n</p><p>\nBy default, the header field is removed as contents of the response\nare modified during transformations and may contain dynamically generated\nelements or parts that are changed independently of the original response.\n</p>",
    "notes": [],
    "since": "1.5.1",
    "link": "http/ngx_http_xslt_module.html#xslt_last_modified",
    "module": "ngx_http_xslt_module"
  },
  {
    "name": "xslt_param",
    "syntax": "xslt_param parameter value;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines the parameters for XSLT stylesheets.The value is treated as an XPath expression.The value can contain variables.To pass a string value to a stylesheet,the xslt_string_param directive can be used.",
    "doc": "<p>\nDefines the parameters for XSLT stylesheets.\nThe *`value`* is treated as an XPath expression.\nThe *`value`* can contain variables.\nTo pass a string value to a stylesheet,\nthe <a href=\"#xslt_string_param\">xslt_string_param</a> directive can be used.\n</p><p>\nThere could be several `xslt_param` directives.\nThese directives are inherited from the previous level if and\nonly if there are no\n`xslt_param` and <a href=\"#xslt_string_param\">xslt_string_param</a>\ndirectives defined on the current level.\n</p>",
    "notes": [],
    "since": "1.1.18",
    "link": "http/ngx_http_xslt_module.html#xslt_param",
    "module": "ngx_http_xslt_module"
  },
  {
    "name": "xslt_string_param",
    "syntax": "xslt_string_param parameter value;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines the string parameters for XSLT stylesheets.XPath expressions in the value are not interpreted.The value can contain variables.",
    "doc": "<p>\nDefines the string parameters for XSLT stylesheets.\nXPath expressions in the *`value`* are not interpreted.\nThe *`value`* can contain variables.\n</p><p>\nThere could be several `xslt_string_param` directives.\nThese directives are inherited from the previous level if and\nonly if there are no\n<a href=\"#xslt_param\">xslt_param</a> and `xslt_string_param`\ndirectives defined on the current level.\n</p>",
    "notes": [],
    "since": "1.1.18",
    "link": "http/ngx_http_xslt_module.html#xslt_string_param",
    "module": "ngx_http_xslt_module"
  },
  {
    "name": "xslt_stylesheet",
    "syntax": "xslt_stylesheet \n    stylesheet\n    [parameter=value ...];",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Defines the XSLT stylesheet and its optional parameters.A stylesheet is compiled at the configuration stage.",
    "doc": "<p>\nDefines the XSLT stylesheet and its optional parameters.\nA stylesheet is compiled at the configuration stage.\n</p><p>\nParameters can either be specified separately, or grouped in a\nsingle line using the &#x201C;`:`&#x201D; delimiter.\nIf a parameter includes the &#x201C;`:`&#x201D; character,\nit should be escaped as &#x201C;`%3A`&#x201D;.\nAlso, `libxslt` requires to enclose parameters\nthat contain non-alphanumeric characters into single or double quotes,\nfor example:\n</p><blockquote class=\"example\"><pre>\nparam1=&apos;http%3A//www.example.com&apos;:param2=value2\n</pre></blockquote><p>\nThe parameters description can contain variables, for example,\nthe whole line of parameters can be taken from a single variable:\n</p><blockquote class=\"example\"><pre>\nlocation / {\n    xslt_stylesheet /site/xslt/one.xslt\n                    $arg_xslt_params\n                    param1=&apos;$value1&apos;:param2=value2\n                    param3=value3;\n}\n</pre></blockquote><p>\nIt is possible to specify several stylesheets.\nThey will be applied sequentially in the specified order.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_xslt_module.html#xslt_stylesheet",
    "module": "ngx_http_xslt_module"
  },
  {
    "name": "xslt_types",
    "syntax": "xslt_types mime-type ...;",
    "def": "xslt_types text/xml;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables transformations in responses with the specified MIME typesin addition to “text/xml”.The special value “*” matches any MIME type (0.8.29).If the transformation result is an HTML response, its MIME typeis changed to “text/html”.",
    "doc": "<p>\nEnables transformations in responses with the specified MIME types\nin addition to &#x201C;`text/xml`&#x201D;.\nThe special value &#x201C;`*`&#x201D; matches any MIME type (0.8.29).\nIf the transformation result is an HTML response, its MIME type\nis changed to &#x201C;`text/html`&#x201D;.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_xslt_module.html#xslt_types",
    "module": "ngx_http_xslt_module"
  },
  {
    "name": "http2_chunk_size",
    "syntax": "http2_chunk_size size;",
    "def": "http2_chunk_size 8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the maximum size of chunksinto which the response body is sliced.A too low value results in higher overhead.A too high value impairs prioritization due toHOL blocking.",
    "doc": "<p>\nSets the maximum size of chunks\ninto which the response body is sliced.\nA too low value results in higher overhead.\nA too high value impairs prioritization due to\n<a href=\"http://en.wikipedia.org/wiki/Head-of-line_blocking\">\nHOL blocking</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_v2_module.html#http2_chunk_size",
    "module": "ngx_http_v2_module"
  },
  {
    "name": "http2_body_preread_size",
    "syntax": "http2_body_preread_size size;",
    "def": "http2_body_preread_size 64k;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Sets the size of the buffer per each requestin which the request body may be savedbefore it is started to be processed.",
    "doc": "<p>\nSets the *`size`* of the buffer per each request\nin which the request body may be saved\nbefore it is started to be processed.\n</p>",
    "notes": [],
    "since": "1.11.0",
    "link": "http/ngx_http_v2_module.html#http2_body_preread_size",
    "module": "ngx_http_v2_module"
  },
  {
    "name": "http2_idle_timeout",
    "syntax": "http2_idle_timeout time;",
    "def": "http2_idle_timeout 3m;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Sets the timeout of inactivity after which the connection is closed.",
    "doc": "<p>\nSets the timeout of inactivity after which the connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_v2_module.html#http2_idle_timeout",
    "module": "ngx_http_v2_module"
  },
  {
    "name": "http2_max_concurrent_streams",
    "syntax": "http2_max_concurrent_streams number;",
    "def": "http2_max_concurrent_streams 128;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Sets the maximum number of concurrent HTTP/2 streamsin a connection.",
    "doc": "<p>\nSets the maximum number of concurrent HTTP/2 streams\nin a connection.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_v2_module.html#http2_max_concurrent_streams",
    "module": "ngx_http_v2_module"
  },
  {
    "name": "http2_max_field_size",
    "syntax": "http2_max_field_size size;",
    "def": "http2_max_field_size 4k;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Limits the maximum size ofan HPACK-compressedrequest header field.The limit applies equally to both name and value.Note that if Huffman encoding is applied,the actual size of decompressed name and value strings may be larger.For most requests, the default limit should be enough.",
    "doc": "<p>\nLimits the maximum size of\nan <a href=\"https://tools.ietf.org/html/rfc7541\">HPACK</a>-compressed\nrequest header field.\nThe limit applies equally to both name and value.\nNote that if Huffman encoding is applied,\nthe actual size of decompressed name and value strings may be larger.\nFor most requests, the default limit should be enough.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_v2_module.html#http2_max_field_size",
    "module": "ngx_http_v2_module"
  },
  {
    "name": "http2_max_header_size",
    "syntax": "http2_max_header_size size;",
    "def": "http2_max_header_size 16k;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Limits the maximum size of the entire request header list afterHPACK decompression.For most requests, the default limit should be enough.",
    "doc": "<p>\nLimits the maximum size of the entire request header list after\n<a href=\"https://tools.ietf.org/html/rfc7541\">HPACK</a> decompression.\nFor most requests, the default limit should be enough.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_v2_module.html#http2_max_header_size",
    "module": "ngx_http_v2_module"
  },
  {
    "name": "http2_max_requests",
    "syntax": "http2_max_requests number;",
    "def": "http2_max_requests 1000;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the maximum number of requests that can beserved through one HTTP/2 connection,after which the connection is closedand the client should use a new connection.",
    "doc": "<p>\nSets the maximum number of requests that can be\nserved through one HTTP/2 connection,\nafter which the connection is closed\nand the client should use a new connection.\n</p>",
    "notes": [],
    "since": "1.11.6",
    "link": "http/ngx_http_v2_module.html#http2_max_requests",
    "module": "ngx_http_v2_module"
  },
  {
    "name": "http2_recv_buffer_size",
    "syntax": "http2_recv_buffer_size size;",
    "def": "http2_recv_buffer_size 256k;",
    "contexts": [
      "http"
    ],
    "desc": "Sets the size of the perworkerinput buffer.",
    "doc": "<p>\nSets the size of the per\n<a href=\"../ngx_core_module.html#worker_processes\">worker</a>\ninput buffer.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_v2_module.html#http2_recv_buffer_size",
    "module": "ngx_http_v2_module"
  },
  {
    "name": "http2_recv_timeout",
    "syntax": "http2_recv_timeout time;",
    "def": "http2_recv_timeout 30s;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Sets the timeout for expecting more data from the client,after which the connection is closed.",
    "doc": "<p>\nSets the timeout for expecting more data from the client,\nafter which the connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_v2_module.html#http2_recv_timeout",
    "module": "ngx_http_v2_module"
  },
  {
    "name": "uwsgi_bind",
    "syntax": "uwsgi_bind \n    address\n    [transparent] |\n    off;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Makes outgoing connections to a uwsgi server originatefrom the specified local IP address with an optional port (1.11.2).Parameter value can contain variables (1.3.12).The special value off (1.3.12) cancels the effectof the uwsgi_bind directiveinherited from the previous configuration level, which allows thesystem to auto-assign the local IP address and port.",
    "doc": "<p>\nMakes outgoing connections to a uwsgi server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value `off` (1.3.12) cancels the effect\nof the `uwsgi_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_bind",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_buffer_size",
    "syntax": "uwsgi_buffer_size size;",
    "def": "uwsgi_buffer_size 4k|8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the size of the buffer used for reading the first partof the response received from the uwsgi server.This part usually contains a small response header.By default, the buffer size is equal to one memory page.This is either 4K or 8K, depending on a platform.It can be made smaller, however.",
    "doc": "<p>\nSets the *`size`* of the buffer used for reading the first part\nof the response received from the uwsgi server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_buffer_size",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_buffering",
    "syntax": "uwsgi_buffering on | off;",
    "def": "uwsgi_buffering on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables buffering of responses from the uwsgi server.",
    "doc": "<p>\nEnables or disables buffering of responses from the uwsgi server.\n</p><p>\nWhen buffering is enabled, nginx receives a response from the uwsgi server\nas soon as possible, saving it into the buffers set by the\n<a href=\"#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"#uwsgi_buffers\">uwsgi_buffers</a> directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a <a href=\"#uwsgi_temp_path\">temporary file</a> on the disk.\nWriting to temporary files is controlled by the\n<a href=\"#uwsgi_max_temp_file_size\">uwsgi_max_temp_file_size</a> and\n<a href=\"#uwsgi_temp_file_write_size\">uwsgi_temp_file_write_size</a> directives.\n</p><p>\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the uwsgi server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the <a href=\"#uwsgi_buffer_size\">uwsgi_buffer_size</a> directive.\n</p><p>\nBuffering can also be enabled or disabled by passing\n&#x201C;`yes`&#x201D; or &#x201C;`no`&#x201D; in the\n&#x201C;X-Accel-Buffering&#x201D; response header field.\nThis capability can be disabled using the\n<a href=\"#uwsgi_ignore_headers\">uwsgi_ignore_headers</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_buffering",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_buffers",
    "syntax": "uwsgi_buffers number size;",
    "def": "uwsgi_buffers 8 4k|8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the number and size of thebuffers used for reading a response from the uwsgi server,for a single connection.By default, the buffer size is equal to one memory page.This is either 4K or 8K, depending on a platform.",
    "doc": "<p>\nSets the *`number`* and *`size`* of the\nbuffers used for reading a response from the uwsgi server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_buffers",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_busy_buffers_size",
    "syntax": "uwsgi_busy_buffers_size size;",
    "def": "uwsgi_busy_buffers_size 8k|16k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When buffering of responses from the uwsgiserver is enabled, limits the total size of buffers thatcan be busy sending a response to the client while the response is notyet fully read.In the meantime, the rest of the buffers can be used for reading the responseand, if needed, buffering part of the response to a temporary file.By default, size is limited by the size of two buffers set by theuwsgi_buffer_size and uwsgi_buffers directives.",
    "doc": "<p>\nWhen <a href=\"#uwsgi_buffering\">buffering</a> of responses from the uwsgi\nserver is enabled, limits the total *`size`* of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, *`size`* is limited by the size of two buffers set by the\n<a href=\"#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"#uwsgi_buffers\">uwsgi_buffers</a> directives.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_busy_buffers_size",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache",
    "syntax": "uwsgi_cache zone | off;",
    "def": "uwsgi_cache off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a shared memory zone used for caching.The same zone can be used in several places.Parameter value can contain variables (1.7.9).The off parameter disables caching inheritedfrom the previous configuration level.",
    "doc": "<p>\nDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe `off` parameter disables caching inherited\nfrom the previous configuration level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_background_update",
    "syntax": "uwsgi_cache_background_update on | off;",
    "def": "uwsgi_cache_background_update off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows starting a background subrequestto update an expired cache item,while a stale cached response is returned to the client.Note that it is necessary toallowthe usage of a stale cached response when it is being updated.",
    "doc": "<p>\nAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n<a href=\"#uwsgi_cache_use_stale_updating\">allow</a>\nthe usage of a stale cached response when it is being updated.\n</p>",
    "notes": [],
    "since": "1.11.10",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_background_update",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_bypass",
    "syntax": "uwsgi_cache_bypass string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the response will not be taken from a cache.If at least one value of the string parameters is not empty and is notequal to “0” then the response will not be taken from the cache:",
    "doc": "<p>\nDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to &#x201C;0&#x201D; then the response will not be taken from the cache:\n</p><blockquote class=\"example\"><pre>\nuwsgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nuwsgi_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#uwsgi_no_cache\">uwsgi_no_cache</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_bypass",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_key",
    "syntax": "uwsgi_cache_key string;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a key for caching, for example",
    "doc": "<p>\nDefines a key for caching, for example\n</p><blockquote class=\"example\"><pre>\nuwsgi_cache_key localhost:9000$request_uri;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_key",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_lock",
    "syntax": "uwsgi_cache_lock on | off;",
    "def": "uwsgi_cache_lock off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When enabled, only one request at a time will be allowed to populatea new cache element identified according to the uwsgi_cache_keydirective by passing a request to a uwsgi server.Other requests of the same cache element will either waitfor a response to appear in the cache or the cache lock forthis element to be released, up to the time set by theuwsgi_cache_lock_timeout directive.",
    "doc": "<p>\nWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the <a href=\"#uwsgi_cache_key\">uwsgi_cache_key</a>\ndirective by passing a request to a uwsgi server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n<a href=\"#uwsgi_cache_lock_timeout\">uwsgi_cache_lock_timeout</a> directive.\n</p>",
    "notes": [],
    "since": "1.1.12",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_lock",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_lock_age",
    "syntax": "uwsgi_cache_lock_age time;",
    "def": "uwsgi_cache_lock_age 5s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the last request passed to the uwsgi serverfor populating a new cache elementhas not completed for the specified time,one more request may be passed to the uwsgi server.",
    "doc": "<p>\nIf the last request passed to the uwsgi server\nfor populating a new cache element\nhas not completed for the specified *`time`*,\none more request may be passed to the uwsgi server.\n</p>",
    "notes": [],
    "since": "1.7.8",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_lock_age",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_lock_timeout",
    "syntax": "uwsgi_cache_lock_timeout time;",
    "def": "uwsgi_cache_lock_timeout 5s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a timeout for uwsgi_cache_lock.When the time expires,the request will be passed to the uwsgi server,however, the response will not be cached.",
    "doc": "<p>\nSets a timeout for <a href=\"#uwsgi_cache_lock\">uwsgi_cache_lock</a>.\nWhen the *`time`* expires,\nthe request will be passed to the uwsgi server,\nhowever, the response will not be cached.\n</p><blockquote class=\"note\">\nBefore 1.7.8, the response could be cached.\n</blockquote>",
    "notes": [
      "\nBefore 1.7.8, the response could be cached.\n"
    ],
    "since": "1.1.12",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_lock_timeout",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_max_range_offset",
    "syntax": "uwsgi_cache_max_range_offset number;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets an offset in bytes for byte-range requests.If the range is beyond the offset,the range request will be passed to the uwsgi serverand the response will not be cached.",
    "doc": "<p>\nSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the uwsgi server\nand the response will not be cached.\n</p>",
    "notes": [],
    "since": "1.11.6",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_max_range_offset",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_methods",
    "syntax": "uwsgi_cache_methods \n    GET |\n    HEAD |\n    POST\n    ...;",
    "def": "uwsgi_cache_methods GET HEAD;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the client request method is listed in this directive thenthe response will be cached.“GET” and “HEAD” methods are alwaysadded to the list, though it is recommended to specify them explicitly.See also the uwsgi_no_cache directive.",
    "doc": "<p>\nIf the client request method is listed in this directive then\nthe response will be cached.\n&#x201C;`GET`&#x201D; and &#x201C;`HEAD`&#x201D; methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the <a href=\"#uwsgi_no_cache\">uwsgi_no_cache</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_methods",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_min_uses",
    "syntax": "uwsgi_cache_min_uses number;",
    "def": "uwsgi_cache_min_uses 1;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the number of requests after which the responsewill be cached.",
    "doc": "<p>\nSets the *`number`* of requests after which the response\nwill be cached.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_min_uses",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_path",
    "syntax": "uwsgi_cache_path \n    path\n    [levels=levels]\n    [use_temp_path=on|off]\n    keys_zone=name:size\n    [inactive=time]\n    [max_size=size]\n    [manager_files=number]\n    [manager_sleep=time]\n    [manager_threshold=time]\n    [loader_files=number]\n    [loader_sleep=time]\n    [loader_threshold=time]\n    [purger=on|off]\n    [purger_files=number]\n    [purger_sleep=time]\n    [purger_threshold=time];",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets the path and other parameters of a cache.Cache data are stored in files.The file name in a cache is a result ofapplying the MD5 function to thecache key.The levels parameter defines hierarchy levels of a cache:from 1 to 3, each level accepts values 1 or 2.For example, in the following configuration",
    "doc": "<p>\nSets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n<a href=\"#uwsgi_cache_key\">cache key</a>.\nThe `levels` parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n</p><blockquote class=\"example\"><pre>\nuwsgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p> \nfile names in a cache will look like this:\n</p><blockquote class=\"example\"><pre>\n/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p>\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe `use_temp_path` parameter (1.7.10).\nIf this parameter is omitted or set to the value `on`,\nthe directory set by the <a href=\"#uwsgi_temp_path\">uwsgi_temp_path</a> directive\nfor the given location will be used.\nIf the value is set to `off`,\ntemporary files will be put directly in the cache directory.\n</p><p>\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose *`name`* and *`size`*\nare configured by the `keys_zone` parameter.\nOne megabyte zone can store about 8 thousand keys.\n</p><p>\nCached data that are not accessed during the time specified by the\n`inactive` parameter get removed from the cache\nregardless of their freshness.\nBy default, `inactive` is set to 10 minutes.\n</p><p>\nThe special &#x201C;cache manager&#x201D; process monitors the maximum cache size set\nby the `max_size` parameter.\nWhen this size is exceeded, it removes the least recently used data.\nThe data is removed in iterations configured by\n`manager_files`,\n`manager_threshold`, and\n`manager_sleep` parameters (1.11.5).\nDuring one iteration no more than `manager_files` items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n`manager_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `manager_sleep`\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nA minute after the start the special &#x201C;cache loader&#x201D; process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than `loader_files` items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n`loader_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `loader_sleep`\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p><dl class=\"compact\">\n\n<dt id=\"purger\">\n<code>purger</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nInstructs whether cache entries that match a\n<a href=\"#uwsgi_cache_purge\">wildcard key</a>\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to <code>on</code>\n(default is <code>off</code>)\nwill activate the &#x201C;cache purger&#x201D; process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\n</dd>\n\n<dt id=\"purger_files\">\n<code>purger_files</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, <code>purger_files</code> is set to 10.\n</dd>\n\n<dt id=\"purger_threshold\">\n<code>purger_threshold</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the duration of one iteration (1.7.12).\nBy default, <code>purger_threshold</code> is set to 50 milliseconds.\n</dd>\n\n<dt id=\"purger_sleep\">\n<code>purger_sleep</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets a pause between iterations (1.7.12).\nBy default, <code>purger_sleep</code> is set to 50 milliseconds.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_path",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_purge",
    "syntax": "uwsgi_cache_purge string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the request will be considered a cachepurge request.If at least one value of the string parameters is not empty and is not equalto “0” then the cache entry with a correspondingcache key is removed.The result of successful operation is indicated by returningthe 204 (No Content) response.",
    "doc": "<p>\nDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto &#x201C;0&#x201D; then the cache entry with a corresponding\n<a href=\"#uwsgi_cache_key\">cache key</a> is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n</p><p>\nIf the <a href=\"#uwsgi_cache_key\">cache key</a> of a purge request ends\nwith an asterisk (&#x201C;`*`&#x201D;), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either <a href=\"#uwsgi_cache_path\">inactivity</a>,\nor processed by the <a href=\"#purger\">cache purger</a> (1.7.12),\nor a client attempts to access them.\n</p><p>\nExample configuration:\n</p><blockquote class=\"example\"><pre>\nuwsgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        uwsgi_pass        backend;\n        uwsgi_cache       cache_zone;\n        uwsgi_cache_key   $uri;\n        uwsgi_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><blockquote class=\"note\">\nThis functionality is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nThis functionality is available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.5.7",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_purge",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_revalidate",
    "syntax": "uwsgi_cache_revalidate on | off;",
    "def": "uwsgi_cache_revalidate off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables revalidation of expired cache items using conditional requests withthe “If-Modified-Since” and “If-None-Match”header fields.",
    "doc": "<p>\nEnables revalidation of expired cache items using conditional requests with\nthe &#x201C;If-Modified-Since&#x201D; and &#x201C;If-None-Match&#x201D;\nheader fields.\n</p>",
    "notes": [],
    "since": "1.5.7",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_revalidate",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_use_stale",
    "syntax": "uwsgi_cache_use_stale \n    error |\n    timeout |\n    invalid_header |\n    updating |\n    http_500 |\n    http_503 |\n    http_403 |\n    http_404 |\n    http_429 |\n    off\n    ...;",
    "def": "uwsgi_cache_use_stale off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines in which cases a stale cached response can be usedwhen an error occurs during communication with the uwsgi server.The directive’s parameters match the parameters of theuwsgi_next_upstream directive.",
    "doc": "<p>\nDetermines in which cases a stale cached response can be used\nwhen an error occurs during communication with the uwsgi server.\nThe directive&#x2019;s parameters match the parameters of the\n<a href=\"#uwsgi_next_upstream\">uwsgi_next_upstream</a> directive.\n</p><p>\nThe `error` parameter also permits\nusing a stale cached response if a uwsgi server to process a request\ncannot be selected.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_use_stale",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_cache_valid",
    "syntax": "uwsgi_cache_valid [code ...] time;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets caching time for different response codes.For example, the following directives",
    "doc": "<p>\nSets caching time for different response codes.\nFor example, the following directives\n</p><blockquote class=\"example\"><pre>\nuwsgi_cache_valid 200 302 10m;\nuwsgi_cache_valid 404      1m;\n</pre></blockquote><p> \nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n</p><p>\nIf only caching *`time`* is specified\n</p><blockquote class=\"example\"><pre>\nuwsgi_cache_valid 5m;\n</pre></blockquote><p> \nthen only 200, 301, and 302 responses are cached.\n</p><p>\nIn addition, the `any` parameter can be specified\nto cache any responses:\n</p><blockquote class=\"example\"><pre>\nuwsgi_cache_valid 200 302 10m;\nuwsgi_cache_valid 301      1h;\nuwsgi_cache_valid any      1m;\n</pre></blockquote><p>\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_valid",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_connect_timeout",
    "syntax": "uwsgi_connect_timeout time;",
    "def": "uwsgi_connect_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a timeout for establishing a connection with a uwsgi server.It should be noted that this timeout cannot usually exceed 75 seconds.",
    "doc": "<p>\nDefines a timeout for establishing a connection with a uwsgi server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_connect_timeout",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_force_ranges",
    "syntax": "uwsgi_force_ranges on | off;",
    "def": "uwsgi_force_ranges off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables byte-range supportfor both cached and uncached responses from the uwsgi serverregardless of the “Accept-Ranges” field in these responses.",
    "doc": "<p>\nEnables byte-range support\nfor both cached and uncached responses from the uwsgi server\nregardless of the &#x201C;Accept-Ranges&#x201D; field in these responses.\n</p>",
    "notes": [],
    "since": "1.7.7",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_force_ranges",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_hide_header",
    "syntax": "uwsgi_hide_header field;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "By default,nginx does not pass the header fields “Status” and“X-Accel-...” from the response of a uwsgiserver to a client.The uwsgi_hide_header directive sets additional fieldsthat will not be passed.If, on the contrary, the passing of fields needs to be permitted,the uwsgi_pass_header directive can be used.",
    "doc": "<p>\nBy default,\nnginx does not pass the header fields &#x201C;Status&#x201D; and\n&#x201C;X-Accel-...&#x201D; from the response of a uwsgi\nserver to a client.\nThe `uwsgi_hide_header` directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe <a href=\"#uwsgi_pass_header\">uwsgi_pass_header</a> directive can be used.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_hide_header",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ignore_client_abort",
    "syntax": "uwsgi_ignore_client_abort on | off;",
    "def": "uwsgi_ignore_client_abort off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether the connection with a uwsgi server should beclosed when a client closes the connection without waitingfor a response.",
    "doc": "<p>\nDetermines whether the connection with a uwsgi server should be\nclosed when a client closes the connection without waiting\nfor a response.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ignore_client_abort",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ignore_headers",
    "syntax": "uwsgi_ignore_headers field ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Disables processing of certain response header fields from the uwsgi server.The following fields can be ignored: “X-Accel-Redirect”,“X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6),“X-Accel-Buffering” (1.1.6),“X-Accel-Charset” (1.1.6), “Expires”,“Cache-Control”, “Set-Cookie” (0.8.44),and “Vary” (1.7.7).",
    "doc": "<p>\nDisables processing of certain response header fields from the uwsgi server.\nThe following fields can be ignored: &#x201C;X-Accel-Redirect&#x201D;,\n&#x201C;X-Accel-Expires&#x201D;, &#x201C;X-Accel-Limit-Rate&#x201D; (1.1.6),\n&#x201C;X-Accel-Buffering&#x201D; (1.1.6),\n&#x201C;X-Accel-Charset&#x201D; (1.1.6), &#x201C;Expires&#x201D;,\n&#x201C;Cache-Control&#x201D;, &#x201C;Set-Cookie&#x201D; (0.8.44),\nand &#x201C;Vary&#x201D; (1.7.7).\n</p><p>\nIf not disabled, processing of these header fields has the following\neffect:\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_intercept_errors",
    "syntax": "uwsgi_intercept_errors on | off;",
    "def": "uwsgi_intercept_errors off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether a uwsgi server responses with codes greater than or equalto 300 should be passed to a clientor be intercepted and redirected to nginx for processingwith the error_page directive.",
    "doc": "<p>\nDetermines whether a uwsgi server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the <a href=\"ngx_http_core_module.html#error_page\">error_page</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_intercept_errors",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_limit_rate",
    "syntax": "uwsgi_limit_rate rate;",
    "def": "uwsgi_limit_rate 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the speed of reading the response from the uwsgi server.The rate is specified in bytes per second.The zero value disables rate limiting.The limit is set per a request, and so if nginx simultaneously openstwo connections to the uwsgi server,the overall rate will be twice as much as the specified limit.The limitation works only ifbuffering of responses from the uwsgiserver is enabled.",
    "doc": "<p>\nLimits the speed of reading the response from the uwsgi server.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the uwsgi server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n<a href=\"#uwsgi_buffering\">buffering</a> of responses from the uwsgi\nserver is enabled.\n</p>",
    "notes": [],
    "since": "1.7.7",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_limit_rate",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_max_temp_file_size",
    "syntax": "uwsgi_max_temp_file_size size;",
    "def": "uwsgi_max_temp_file_size 1024m;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When buffering of responses from the uwsgiserver is enabled, and the whole response does not fit into the buffersset by the uwsgi_buffer_size and uwsgi_buffersdirectives, a part of the response can be saved to a temporary file.This directive sets the maximum size of the temporary file.The size of data written to the temporary file at a time is setby the uwsgi_temp_file_write_size directive.",
    "doc": "<p>\nWhen <a href=\"#uwsgi_buffering\">buffering</a> of responses from the uwsgi\nserver is enabled, and the whole response does not fit into the buffers\nset by the <a href=\"#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"#uwsgi_buffers\">uwsgi_buffers</a>\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum *`size`* of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the <a href=\"#uwsgi_temp_file_write_size\">uwsgi_temp_file_write_size</a> directive.\n</p><p>\nThe zero value disables buffering of responses to temporary files.\n</p><blockquote class=\"note\">\nThis restriction does not apply to responses\nthat will be <a href=\"#uwsgi_cache\">cached</a>\nor <a href=\"#uwsgi_store\">stored</a> on disk.\n</blockquote>",
    "notes": [
      "\nThis restriction does not apply to responses\nthat will be cached\nor stored on disk.\n"
    ],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_max_temp_file_size",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_modifier1",
    "syntax": "uwsgi_modifier1 number;",
    "def": "uwsgi_modifier1 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the value of the modifier1 field in theuwsgipacket header.",
    "doc": "<p>\nSets the value of the `modifier1` field in the\n<a href=\"http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header\">uwsgi\npacket header</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_modifier1",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_modifier2",
    "syntax": "uwsgi_modifier2 number;",
    "def": "uwsgi_modifier2 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the value of the modifier2 field in theuwsgipacket header.",
    "doc": "<p>\nSets the value of the `modifier2` field in the\n<a href=\"http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header\">uwsgi\npacket header</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_modifier2",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_next_upstream",
    "syntax": "uwsgi_next_upstream \n    error |\n    timeout |\n    invalid_header |\n    http_500 |\n    http_503 |\n    http_403 |\n    http_404 |\n    http_429 |\n    non_idempotent |\n    off\n    ...;",
    "def": "uwsgi_next_upstream error timeout;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies in which cases a request should be passed to the next server:",
    "doc": "<p>\nSpecifies in which cases a request should be passed to the next server:\n</p><dl class=\"compact\">\n\n<dt><code>error</code></dt>\n<dd>an error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>timeout</code></dt>\n<dd>a timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>invalid_header</code></dt>\n<dd>a server returned an empty or invalid response;</dd>\n\n<dt><code>http_500</code></dt>\n<dd>a server returned a response with the code 500;</dd>\n\n<dt><code>http_503</code></dt>\n<dd>a server returned a response with the code 503;</dd>\n\n<dt><code>http_403</code></dt>\n<dd>a server returned a response with the code 403;</dd>\n\n<dt><code>http_404</code></dt>\n<dd>a server returned a response with the code 404;</dd>\n\n<dt><code>http_429</code></dt>\n<dd>a server returned a response with the code 429 (1.11.13);</dd>\n\n<dt id=\"non_idempotent\"><code>non_idempotent</code></dt>\n<dd>normally, requests with a\n<a href=\"https://tools.ietf.org/html/rfc7231#section-4.2.2\">non-idempotent</a>\nmethod\n(<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\n</dd>\n\n<dt><code>off</code></dt>\n<dd>disables passing a request to the next server.</dd>\n\n</dl><p>\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n</p><p>\nThe directive also defines what is considered an\n<a href=\"ngx_http_upstream_module.html#max_fails\">unsuccessful\nattempt</a> of communication with a server.\nThe cases of `error`, `timeout` and\n`invalid_header` are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of `http_500`, `http_503`,\nand `http_429` are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of `http_403` and `http_404`\nare never considered unsuccessful attempts.\n</p><p>\nPassing a request to the next server can be limited by\n<a href=\"#uwsgi_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#uwsgi_next_upstream_timeout\">time</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_next_upstream",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_next_upstream_timeout",
    "syntax": "uwsgi_next_upstream_timeout time;",
    "def": "uwsgi_next_upstream_timeout 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the time during which a request can be passed to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the time during which a request can be passed to the\n<a href=\"#uwsgi_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": "1.7.5",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_next_upstream_timeout",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_next_upstream_tries",
    "syntax": "uwsgi_next_upstream_tries number;",
    "def": "uwsgi_next_upstream_tries 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the number of possible tries for passing a request to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the number of possible tries for passing a request to the\n<a href=\"#uwsgi_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": "1.7.5",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_next_upstream_tries",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_no_cache",
    "syntax": "uwsgi_no_cache string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the response will not be saved to a cache.If at least one value of the string parameters is not empty and is notequal to “0” then the response will not be saved:",
    "doc": "<p>\nDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to &#x201C;0&#x201D; then the response will not be saved:\n</p><blockquote class=\"example\"><pre>\nuwsgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nuwsgi_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#uwsgi_cache_bypass\">uwsgi_cache_bypass</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_no_cache",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_param",
    "syntax": "uwsgi_param \n    parameter value\n    [if_not_empty];",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a parameter that should be passed to the uwsgi server.The value can contain text, variables, and their combination.These directives are inherited from the previous level if andonly if there are nouwsgi_paramdirectives defined on the current level.",
    "doc": "<p>\nSets a *`parameter`* that should be passed to the uwsgi server.\nThe *`value`* can contain text, variables, and their combination.\nThese directives are inherited from the previous level if and\nonly if there are no\n`uwsgi_param`\ndirectives defined on the current level.\n</p><p>\nStandard\n<a href=\"https://tools.ietf.org/html/rfc3875#section-4.1\">CGI\nenvironment variables</a>\nshould be provided as uwsgi headers, see the `uwsgi_params` file\nprovided in the distribution:\n</p><blockquote class=\"example\"><pre>\nlocation / {\n    include uwsgi_params;\n    ...\n}\n</pre></blockquote><p>\nIf the directive is specified with `if_not_empty` (1.1.11) then\nsuch a parameter will not be passed to the server until its value is not empty:\n</p><blockquote class=\"example\"><pre>\nuwsgi_param HTTPS $https if_not_empty;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_param",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_pass",
    "syntax": "uwsgi_pass [protocol://]address;",
    "def": null,
    "contexts": [
      "location",
      "ifinlocation"
    ],
    "desc": "Sets the protocol and address of a uwsgi server.As a protocol,“uwsgi” or “suwsgi”(secured uwsgi, uwsgi over SSL) can be specified.The address can be specified as a domain name or IP address,and a port:",
    "doc": "<p>\nSets the protocol and address of a uwsgi server.\nAs a *`protocol`*,\n&#x201C;`uwsgi`&#x201D; or &#x201C;`suwsgi`&#x201D;\n(secured uwsgi, uwsgi over SSL) can be specified.\nThe address can be specified as a domain name or IP address,\nand a port:\n</p><blockquote class=\"example\"><pre>\nuwsgi_pass localhost:9000;\nuwsgi_pass uwsgi://localhost:9000;\nuwsgi_pass suwsgi://[2001:db8::1]:9090;\n</pre></blockquote><p> \nor as a UNIX-domain socket path:\n</p><blockquote class=\"example\"><pre>\nuwsgi_pass unix:/tmp/uwsgi.socket;\n</pre></blockquote><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_http_upstream_module.html\">server group</a>.\n</p><blockquote class=\"note\">\nSecured uwsgi protocol is supported since version 1.5.8.\n</blockquote>",
    "notes": [
      "\nSecured uwsgi protocol is supported since version 1.5.8.\n"
    ],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_pass",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_pass_header",
    "syntax": "uwsgi_pass_header field;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Permits passing otherwise disabled headerfields from a uwsgi server to a client.",
    "doc": "<p>\nPermits passing <a href=\"#uwsgi_hide_header\">otherwise disabled</a> header\nfields from a uwsgi server to a client.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_pass_header",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_pass_request_body",
    "syntax": "uwsgi_pass_request_body on | off;",
    "def": "uwsgi_pass_request_body on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Indicates whether the original request body is passedto the uwsgi server.See also the uwsgi_pass_request_headers directive.",
    "doc": "<p>\nIndicates whether the original request body is passed\nto the uwsgi server.\nSee also the <a href=\"#uwsgi_pass_request_headers\">uwsgi_pass_request_headers</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_pass_request_body",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_pass_request_headers",
    "syntax": "uwsgi_pass_request_headers on | off;",
    "def": "uwsgi_pass_request_headers on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Indicates whether the header fields of the original request are passedto the uwsgi server.See also the uwsgi_pass_request_body directive.",
    "doc": "<p>\nIndicates whether the header fields of the original request are passed\nto the uwsgi server.\nSee also the <a href=\"#uwsgi_pass_request_body\">uwsgi_pass_request_body</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_pass_request_headers",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_read_timeout",
    "syntax": "uwsgi_read_timeout time;",
    "def": "uwsgi_read_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a timeout for reading a response from the uwsgi server.The timeout is set only between two successive read operations,not for the transmission of the whole response.If the uwsgi server does not transmit anything within this time,the connection is closed.",
    "doc": "<p>\nDefines a timeout for reading a response from the uwsgi server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the uwsgi server does not transmit anything within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_read_timeout",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_request_buffering",
    "syntax": "uwsgi_request_buffering on | off;",
    "def": "uwsgi_request_buffering on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables buffering of a client request body.",
    "doc": "<p>\nEnables or disables buffering of a client request body.\n</p><p>\nWhen buffering is enabled, the entire request body is\n<a href=\"ngx_http_core_module.html#client_body_buffer_size\">read</a>\nfrom the client before sending the request to a uwsgi server.\n</p><p>\nWhen buffering is disabled, the request body is sent to the uwsgi server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n<a href=\"#uwsgi_next_upstream\">next server</a>\nif nginx already started sending the request body.\n</p><p>\nWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value.\n</p>",
    "notes": [],
    "since": "1.7.11",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_request_buffering",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_send_timeout",
    "syntax": "uwsgi_send_timeout time;",
    "def": "uwsgi_send_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a timeout for transmitting a request to the uwsgi server.The timeout is set only between two successive write operations,not for the transmission of the whole request.If the uwsgi server does not receive anything within this time,the connection is closed.",
    "doc": "<p>\nSets a timeout for transmitting a request to the uwsgi server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the uwsgi server does not receive anything within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_send_timeout",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_certificate",
    "syntax": "uwsgi_ssl_certificate file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a file with the certificate in the PEM formatused for authentication to a secured uwsgi server.",
    "doc": "<p>\nSpecifies a *`file`* with the certificate in the PEM format\nused for authentication to a secured uwsgi server.\n</p>",
    "notes": [],
    "since": "1.7.8",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_certificate",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_certificate_key",
    "syntax": "uwsgi_ssl_certificate_key file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a file with the secret key in the PEM formatused for authentication to a secured uwsgi server.",
    "doc": "<p>\nSpecifies a *`file`* with the secret key in the PEM format\nused for authentication to a secured uwsgi server.\n</p><p>\nThe value\n`engine`:*`name`*:*`id`*\ncan be specified instead of the *`file`* (1.7.9),\nwhich loads a secret key with a specified *`id`*\nfrom the OpenSSL engine *`name`*.\n</p>",
    "notes": [],
    "since": "1.7.8",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_certificate_key",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_ciphers",
    "syntax": "uwsgi_ssl_ciphers ciphers;",
    "def": "uwsgi_ssl_ciphers DEFAULT;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies the enabled ciphers for requests to a secured uwsgi server.The ciphers are specified in the format understood by the OpenSSL library.",
    "doc": "<p>\nSpecifies the enabled ciphers for requests to a secured uwsgi server.\nThe ciphers are specified in the format understood by the OpenSSL library.\n</p><p>\nThe full list can be viewed using the\n&#x201C;`openssl ciphers`&#x201D; command.\n</p>",
    "notes": [],
    "since": "1.5.8",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_ciphers",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_crl",
    "syntax": "uwsgi_ssl_crl file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a file with revoked certificates (CRL)in the PEM format used to verifythe certificate of the secured uwsgi server.",
    "doc": "<p>\nSpecifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to <a href=\"#uwsgi_ssl_verify\">verify</a>\nthe certificate of the secured uwsgi server.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_crl",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_name",
    "syntax": "uwsgi_ssl_name name;",
    "def": "uwsgi_ssl_name host from uwsgi_pass;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows overriding the server name used toverifythe certificate of the secured uwsgi server and to bepassed through SNIwhen establishing a connection with the secured uwsgi server.",
    "doc": "<p>\nAllows overriding the server name used to\n<a href=\"#uwsgi_ssl_verify\">verify</a>\nthe certificate of the secured uwsgi server and to be\n<a href=\"#uwsgi_ssl_server_name\">passed through SNI</a>\nwhen establishing a connection with the secured uwsgi server.\n</p><p>\nBy default, the host part from <a href=\"#uwsgi_pass\">uwsgi_pass</a> is used.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_name",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_password_file",
    "syntax": "uwsgi_ssl_password_file file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a file with passphrases forsecret keyswhere each passphrase is specified on a separate line.Passphrases are tried in turn when loading the key.",
    "doc": "<p>\nSpecifies a *`file`* with passphrases for\n<a href=\"#uwsgi_ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p>",
    "notes": [],
    "since": "1.7.8",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_password_file",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_protocols",
    "syntax": "uwsgi_ssl_protocols \n    [SSLv2]\n    [SSLv3]\n    [TLSv1]\n    [TLSv1.1]\n    [TLSv1.2];",
    "def": "uwsgi_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables the specified protocols for requests to a secured uwsgi server.",
    "doc": "<p>\nEnables the specified protocols for requests to a secured uwsgi server.\n</p>",
    "notes": [],
    "since": "1.5.8",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_protocols",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_server_name",
    "syntax": "uwsgi_ssl_server_name on | off;",
    "def": "uwsgi_ssl_server_name off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables passing of the server name throughTLSServer Name Indication extension (SNI, RFC 6066)when establishing a connection with the secured uwsgi server.",
    "doc": "<p>\nEnables or disables passing of the server name through\n<a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS\nServer Name Indication extension</a> (SNI, RFC 6066)\nwhen establishing a connection with the secured uwsgi server.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_server_name",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_session_reuse",
    "syntax": "uwsgi_ssl_session_reuse on | off;",
    "def": "uwsgi_ssl_session_reuse on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether SSL sessions can be reused when working witha secured uwsgi server.If the errors“SSL3_GET_FINISHED:digest check failed”appear in the logs, try disabling session reuse.",
    "doc": "<p>\nDetermines whether SSL sessions can be reused when working with\na secured uwsgi server.\nIf the errors\n&#x201C;`SSL3_GET_FINISHED:digest check failed`&#x201D;\nappear in the logs, try disabling session reuse.\n</p>",
    "notes": [],
    "since": "1.5.8",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_session_reuse",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_trusted_certificate",
    "syntax": "uwsgi_ssl_trusted_certificate file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a file with trusted CA certificates in the PEM formatused to verifythe certificate of the secured uwsgi server.",
    "doc": "<p>\nSpecifies a *`file`* with trusted CA certificates in the PEM format\nused to <a href=\"#uwsgi_ssl_verify\">verify</a>\nthe certificate of the secured uwsgi server.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_trusted_certificate",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_verify",
    "syntax": "uwsgi_ssl_verify on | off;",
    "def": "uwsgi_ssl_verify off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables verification of the secured uwsgi server certificate.",
    "doc": "<p>\nEnables or disables verification of the secured uwsgi server certificate.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_ssl_verify_depth",
    "syntax": "uwsgi_ssl_verify_depth number;",
    "def": "uwsgi_ssl_verify_depth 1;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the verification depth in the secured uwsgi server certificates chain.",
    "doc": "<p>\nSets the verification depth in the secured uwsgi server certificates chain.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify_depth",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_store",
    "syntax": "uwsgi_store \n    on |\n    off |\n    string;",
    "def": "uwsgi_store off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables saving of files to a disk.The on parameter saves files with pathscorresponding to the directivesalias orroot.The off parameter disables saving of files.In addition, the file name can be set explicitly using thestring with variables:",
    "doc": "<p>\nEnables saving of files to a disk.\nThe `on` parameter saves files with paths\ncorresponding to the directives\n<a href=\"ngx_http_core_module.html#alias\">alias</a> or\n<a href=\"ngx_http_core_module.html#root\">root</a>.\nThe `off` parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n*`string`* with variables:\n</p><blockquote class=\"example\"><pre>\nuwsgi_store /data/www$original_uri;\n</pre></blockquote><p>\nThe modification time of files is set according to the received\n&#x201C;Last-Modified&#x201D; response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the <a href=\"#uwsgi_temp_path\">uwsgi_temp_path</a>\ndirective, are put on the same file system.\n</p><p>\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n</p><blockquote class=\"example\"><pre>\nlocation /images/ {\n    root               /data/www;\n    error_page         404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    uwsgi_pass         backend:9000;\n    ...\n\n    uwsgi_store        on;\n    uwsgi_store_access user:rw group:rw all:r;\n    uwsgi_temp_path    /data/temp;\n\n    alias              /data/www/;\n}\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_store",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_store_access",
    "syntax": "uwsgi_store_access users:permissions ...;",
    "def": "uwsgi_store_access user:rw;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets access permissions for newly created files and directories, e.g.:",
    "doc": "<p>\nSets access permissions for newly created files and directories, e.g.:\n</p><blockquote class=\"example\"><pre>\nuwsgi_store_access user:rw group:rw all:r;\n</pre></blockquote><p>\nIf any `group` or `all` access permissions\nare specified then `user` permissions may be omitted:\n</p><blockquote class=\"example\"><pre>\nuwsgi_store_access group:rw all:r;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_store_access",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_temp_file_write_size",
    "syntax": "uwsgi_temp_file_write_size size;",
    "def": "uwsgi_temp_file_write_size 8k|16k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the size of data written to a temporary fileat a time, when buffering of responses from the uwsgi serverto temporary files is enabled.By default, size is limited by two buffers set by theuwsgi_buffer_size and uwsgi_buffers directives.The maximum size of a temporary file is set by theuwsgi_max_temp_file_size directive.",
    "doc": "<p>\nLimits the *`size`* of data written to a temporary file\nat a time, when buffering of responses from the uwsgi server\nto temporary files is enabled.\nBy default, *`size`* is limited by two buffers set by the\n<a href=\"#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"#uwsgi_buffers\">uwsgi_buffers</a> directives.\nThe maximum size of a temporary file is set by the\n<a href=\"#uwsgi_max_temp_file_size\">uwsgi_max_temp_file_size</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_temp_file_write_size",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "uwsgi_temp_path",
    "syntax": "uwsgi_temp_path \n    path\n    [level1\n    [level2\n    [level3]]];",
    "def": "uwsgi_temp_path uwsgi_temp;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a directory for storing temporary fileswith data received from uwsgi servers.Up to three-level subdirectory hierarchy can be used underneath the specifieddirectory.For example, in the following configuration",
    "doc": "<p>\nDefines a directory for storing temporary files\nwith data received from uwsgi servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\n</p><blockquote class=\"example\"><pre>\nuwsgi_temp_path /spool/nginx/uwsgi_temp 1 2;\n</pre></blockquote><p> \na temporary file might look like this:\n</p><blockquote class=\"example\"><pre>\n/spool/nginx/uwsgi_temp/<strong>7</strong>/<strong>45</strong>/00000123<strong>457</strong>\n</pre></blockquote><p>\nSee also the `use_temp_path` parameter of the\n<a href=\"#uwsgi_cache_path\">uwsgi_cache_path</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_temp_path",
    "module": "ngx_http_uwsgi_module"
  },
  {
    "name": "userid",
    "syntax": "userid \n    on |\n    v1 |\n    log |\n    off;",
    "def": "userid off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables setting cookies and logging the received cookies:",
    "doc": "<p>\nEnables or disables setting cookies and logging the received cookies:\n</p><dl class=\"compact\">\n\n<dt><code>on</code></dt>\n<dd>\nenables the setting of version 2 cookies\nand logging of the received cookies;\n</dd>\n\n<dt><code>v1</code></dt>\n<dd>\nenables the setting of version 1 cookies\nand logging of the received cookies;\n</dd>\n\n<dt><code>log</code></dt>\n<dd>\ndisables the setting of cookies,\nbut enables logging of the received cookies;\n</dd>\n\n<dt><code>off</code></dt>\n<dd>\ndisables the setting of cookies and logging of the received cookies.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_userid_module.html#userid",
    "module": "ngx_http_userid_module"
  },
  {
    "name": "userid_domain",
    "syntax": "userid_domain name | none;",
    "def": "userid_domain none;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a domain for which the cookie is set.The none parameter disables setting of a domain for thecookie.",
    "doc": "<p>\nDefines a domain for which the cookie is set.\nThe `none` parameter disables setting of a domain for the\ncookie.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_userid_module.html#userid_domain",
    "module": "ngx_http_userid_module"
  },
  {
    "name": "userid_expires",
    "syntax": "userid_expires time | max |\n    off;",
    "def": "userid_expires off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a time during which a browser should keep the cookie.The parameter max will cause the cookie to expire on“31 Dec 2037 23:55:55 GMT”.The parameter off will cause the cookie to expire atthe end of a browser session.",
    "doc": "<p>\nSets a time during which a browser should keep the cookie.\nThe parameter `max` will cause the cookie to expire on\n&#x201C;`31 Dec 2037 23:55:55 GMT`&#x201D;.\nThe parameter `off` will cause the cookie to expire at\nthe end of a browser session.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_userid_module.html#userid_expires",
    "module": "ngx_http_userid_module"
  },
  {
    "name": "userid_mark",
    "syntax": "userid_mark \n    letter | digit |\n    = |\n    off;",
    "def": "userid_mark off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the parameter is not off, enables the cookie markingmechanism and sets the character used as a mark.This mechanism is used to add or changeuserid_p3p and/or a cookie expiration time whilepreserving the client identifier.A mark can be any letter of the English alphabet (case-sensitive),digit, or the “=” character.",
    "doc": "<p>\nIf the parameter is not `off`, enables the cookie marking\nmechanism and sets the character used as a mark.\nThis mechanism is used to add or change\n<a href=\"#userid_p3p\">userid_p3p</a> and/or a cookie expiration time while\npreserving the client identifier.\nA mark can be any letter of the English alphabet (case-sensitive),\ndigit, or the &#x201C;`=`&#x201D; character.\n</p><p>\nIf the mark is set, it is compared with the first padding symbol\nin the base64 representation of the client identifier passed in a cookie.\nIf they do not match, the cookie is resent with the specified mark,\nexpiration time, and &#x201C;P3P&#x201D; header.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_userid_module.html#userid_mark",
    "module": "ngx_http_userid_module"
  },
  {
    "name": "userid_name",
    "syntax": "userid_name name;",
    "def": "userid_name uid;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the cookie name.",
    "doc": "<p>\nSets the cookie name.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_userid_module.html#userid_name",
    "module": "ngx_http_userid_module"
  },
  {
    "name": "userid_p3p",
    "syntax": "userid_p3p string | none;",
    "def": "userid_p3p none;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a value for the “P3P” header field that will besent along with the cookie.If the directive is set to the special value none,the “P3P” header will not be sent in a response.",
    "doc": "<p>\nSets a value for the &#x201C;P3P&#x201D; header field that will be\nsent along with the cookie.\nIf the directive is set to the special value `none`,\nthe &#x201C;P3P&#x201D; header will not be sent in a response.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_userid_module.html#userid_p3p",
    "module": "ngx_http_userid_module"
  },
  {
    "name": "userid_path",
    "syntax": "userid_path path;",
    "def": "userid_path /;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a path for which the cookie is set.",
    "doc": "<p>\nDefines a path for which the cookie is set.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_userid_module.html#userid_path",
    "module": "ngx_http_userid_module"
  },
  {
    "name": "userid_service",
    "syntax": "userid_service number;",
    "def": "userid_service IP address of the server;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If identifiers are issued by multiple servers (services),each service should be assigned its own numberto ensure that client identifiers are unique.For version 1 cookies, the default value is zero.For version 2 cookies, the default value is the number composed from the lastfour octets of the server’s IP address.",
    "doc": "<p>\nIf identifiers are issued by multiple servers (services),\neach service should be assigned its own *`number`*\nto ensure that client identifiers are unique.\nFor version 1 cookies, the default value is zero.\nFor version 2 cookies, the default value is the number composed from the last\nfour octets of the server&#x2019;s IP address.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_userid_module.html#userid_service",
    "module": "ngx_http_userid_module"
  },
  {
    "name": "health_check",
    "syntax": "health_check [parameters];",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Enables periodic health checks of the servers in agroupreferenced in the surrounding location.",
    "doc": "<p>\nEnables periodic health checks of the servers in a\n<a href=\"ngx_http_upstream_module.html#upstream\">group</a>\nreferenced in the surrounding location.\n</p><p>\nThe following optional parameters are supported:\n</p><dl class=\"compact\">\n\n<dt id=\"health_check_interval\">\n<code>interval</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the interval between two consecutive health checks,\nby default, 5 seconds.\n</dd>\n\n<dt id=\"health_check_jitter\">\n<code>jitter</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the time within which\neach health check will be randomly delayed,\nby default, there is no delay.\n</dd>\n\n<dt id=\"health_check_fails\">\n<code>fails</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of consecutive failed health checks of a particular server\nafter which this server will be considered unhealthy,\nby default, 1.\n</dd>\n\n<dt id=\"health_check_passes\">\n<code>passes</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of consecutive passed health checks of a particular server\nafter which the server will be considered healthy,\nby default, 1.\n</dd>\n\n<dt id=\"health_check_uri\">\n<code>uri</code>=<code><i>uri</i></code>\n</dt>\n<dd>\ndefines the URI used in health check requests,\nby default, &#x201C;<code>/</code>&#x201D;.\n</dd>\n\n<dt id=\"health_check_mandatory\">\n<code>mandatory</code>\n</dt>\n<dd>\nsets the initial &#x201C;checking&#x201D; state for a server\nuntil the first health check is completed (1.11.7).\nClient requests are not passed to servers in the &#x201C;checking&#x201D; state.\nIf the parameter is not specified,\nthe server will be initially considered healthy.\n</dd>\n\n<dt id=\"health_check_match\">\n<code>match</code>=<code><i>name</i></code>\n</dt>\n<dd>\nspecifies the <code>match</code> block configuring the tests that a\nresponse should pass in order for a health check to pass.\nBy default, the response should have status code 2xx or 3xx.\n</dd>\n\n<dt id=\"health_check_port\">\n<code>port</code>=<code><i>number</i></code>\n</dt>\n<dd>\ndefines the port used when connecting to a server\nto perform a health check (1.9.7).\nBy default, equals the\n<a href=\"ngx_http_upstream_module.html#server\">server</a> port.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_upstream_hc_module.html#health_check",
    "module": "ngx_http_upstream_hc_module"
  },
  {
    "name": "match",
    "syntax": "match name { ... }",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Defines the named test set used to verify responses to health check requests.",
    "doc": "<p>\nDefines the named test set used to verify responses to health check requests.\n</p><p>\nThe following items can be tested in a response:\n</p><dl class=\"compact\">\n\n<dt><code>status 200;</code></dt>\n<dd>status is 200</dd>\n\n<dt><code>status ! 500;</code></dt>\n<dd>status is not 500</dd>\n\n<dt><code>status 200 204;</code></dt>\n<dd>status is 200 or 204</dd>\n\n<dt><code>status ! 301 302;</code></dt>\n<dd>status is neither 301 nor 302</dd>\n\n<dt><code>status 200-399;</code></dt>\n<dd>status is in the range from 200 to 399</dd>\n\n<dt><code>status ! 400-599;</code></dt>\n<dd>status is not in the range from 400 to 599</dd>\n\n<dt><code>status 301-303 307;</code></dt>\n<dd>status is either 301, 302, 303, or 307</dd>\n\n</dl><dl class=\"compact\">\n\n<dt><code>header Content-Type = text/html;</code></dt>\n<dd>\nheader contains &#x201C;Content-Type&#x201D;\nwith value <code>text/html</code>\n</dd>\n\n<dt><code>header Content-Type != text/html;</code></dt>\n<dd>\nheader contains &#x201C;Content-Type&#x201D;\nwith value other than <code>text/html</code>\n</dd>\n\n<dt><code>header Connection ~ close;</code></dt>\n<dd>\nheader contains &#x201C;Connection&#x201D;\nwith value matching regular expression <code>close</code>\n</dd>\n\n<dt><code>header Connection !~ close;</code></dt>\n<dd>\nheader contains &#x201C;Connection&#x201D;\nwith value not matching regular expression <code>close</code>\n</dd>\n\n<dt><code>header Host;</code></dt>\n<dd>header contains &#x201C;Host&#x201D;</dd>\n\n<dt><code>header ! X-Accel-Redirect;</code></dt>\n<dd>header lacks &#x201C;X-Accel-Redirect&#x201D;</dd>\n\n</dl><dl class=\"compact\">\n\n<dt><code>body ~ &quot;Welcome to nginx!&quot;;</code></dt>\n<dd>\nbody matches regular expression &#x201C;<code>Welcome to nginx!</code>&#x201D;\n</dd>\n\n<dt><code>body !~ &quot;Welcome to nginx!&quot;;</code></dt>\n<dd>\nbody does not match regular expression &#x201C;<code>Welcome to nginx!</code>&#x201D;\n</dd>\n\n</dl><p>\nIf several tests are specified,\nthe response matches only if it matches all tests.\n</p><blockquote class=\"note\">\nOnly the first 256k of the response body are examined.\n</blockquote><p>\nExamples:\n</p><blockquote class=\"example\"><pre>\n# status is 200, content type is &quot;text/html&quot;,\n# and body contains &quot;Welcome to nginx!&quot;\nmatch welcome {\n    status 200;\n    header Content-Type = text/html;\n    body ~ &quot;Welcome to nginx!&quot;;\n}\n</pre></blockquote><blockquote class=\"example\"><pre>\n# status is not one of 301, 302, 303, or 307, and header does not have &quot;Refresh:&quot;\nmatch not_redirect {\n    status ! 301-303 307;\n    header ! Refresh;\n}\n</pre></blockquote><blockquote class=\"example\"><pre>\n# status ok and not in maintenance mode\nmatch server_ok {\n    status 200-399;\n    body !~ &quot;maintenance mode&quot;;\n}\n</pre></blockquote>",
    "notes": [
      "\nOnly the first 256k of the response body are examined.\n"
    ],
    "since": null,
    "link": "http/ngx_http_upstream_hc_module.html#match",
    "module": "ngx_http_upstream_hc_module"
  },
  {
    "name": "upstream_conf",
    "syntax": "upstream_conf;",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Turns on the HTTP interface of upstream configuration in the surroundinglocation.Access to this location should belimited.",
    "doc": "<p>\nTurns on the HTTP interface of upstream configuration in the surrounding\nlocation.\nAccess to this location should be\n<a href=\"ngx_http_core_module.html#satisfy\">limited</a>.\n</p><p>\nConfiguration commands can be used to:\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_upstream_conf_module.html#upstream_conf",
    "module": "ngx_http_upstream_conf_module"
  },
  {
    "name": "upstream",
    "syntax": "upstream name { ... }",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Defines a group of servers.Servers can listen on different ports.In addition, servers listening on TCP and UNIX-domain socketscan be mixed.",
    "doc": "<p>\nDefines a group of servers.\nServers can listen on different ports.\nIn addition, servers listening on TCP and UNIX-domain sockets\ncan be mixed.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nupstream backend {\n    server backend1.example.com weight=5;\n    server 127.0.0.1:8080       max_fails=3 fail_timeout=30s;\n    server unix:/tmp/backend3;\n\n    server backup1.example.com  backup;\n}\n</pre></blockquote><p>\nBy default, requests are distributed between the servers using a\nweighted round-robin balancing method.\nIn the above example, each 7 requests will be distributed as follows:\n5 requests go to `backend1.example.com`\nand one request to each of the second and third servers.\nIf an error occurs during communication with a server, the request will\nbe passed to the next server, and so on until all of the functioning\nservers will be tried.\nIf a successful response could not be obtained from any of the servers,\nthe client will receive the result of the communication with the last server.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_upstream_module.html#upstream",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "server",
    "syntax": "server address [parameters];",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Defines the address and other parametersof a server.The address can be specified as a domain name or IP address,with an optional port, or as a UNIX-domain socket pathspecified after the “unix:” prefix.If a port is not specified, the port 80 is used.A domain name that resolves to several IP addresses definesmultiple servers at once.",
    "doc": "<p>\nDefines the *`address`* and other *`parameters`*\nof a server.\nThe address can be specified as a domain name or IP address,\nwith an optional port, or as a UNIX-domain socket path\nspecified after the &#x201C;`unix:`&#x201D; prefix.\nIf a port is not specified, the port 80 is used.\nA domain name that resolves to several IP addresses defines\nmultiple servers at once.\n</p><p>\nThe following parameters can be defined:\n</p><dl class=\"compact\">\n\n<dt id=\"weight\">\n<code>weight</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the weight of the server, by default, 1.\n</dd>\n\n<dt id=\"max_conns\">\n<code>max_conns</code>=<code><i>number</i></code>\n</dt>\n<dd>\nlimits the maximum <code><i>number</i></code> of simultaneous active\nconnections to the proxied server (1.11.5).\nDefault value is zero, meaning there is no limit.\nIf the server group does not reside in the <a href=\"#zone\">shared memory</a>,\nthe limitation works per each worker process.\n<blockquote class=\"note\">\nIf <a href=\"#keepalive\">idle keepalive</a> connections,\nmultiple <a href=\"../ngx_core_module.html#worker_processes\">workers</a>,\nand the <a href=\"#zone\">shared memory</a> are enabled,\nthe total number of active and idle connections to the proxied server\nmay exceed the <code>max_conns</code> value.\n</blockquote>\n<blockquote class=\"note\">\nSince version 1.5.9 and prior to version 1.11.5,\nthis parameter was available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>\n</dd>\n\n<dt id=\"max_fails\">\n<code>max_fails</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of unsuccessful attempts to communicate with the server\nthat should happen in the duration set by the <code>fail_timeout</code>\nparameter to consider the server unavailable for a duration also set by the\n<code>fail_timeout</code> parameter.\nBy default, the number of unsuccessful attempts is set to 1.\nThe zero value disables the accounting of attempts.\nWhat is considered an unsuccessful attempt is defined by the\n<a href=\"ngx_http_proxy_module.html#proxy_next_upstream\">proxy_next_upstream</a>,\n<a href=\"ngx_http_fastcgi_module.html#fastcgi_next_upstream\">fastcgi_next_upstream</a>,\n<a href=\"ngx_http_uwsgi_module.html#uwsgi_next_upstream\">uwsgi_next_upstream</a>,\n<a href=\"ngx_http_scgi_module.html#scgi_next_upstream\">scgi_next_upstream</a>, and\n<a href=\"ngx_http_memcached_module.html#memcached_next_upstream\">memcached_next_upstream</a>\ndirectives.\n</dd>\n\n<dt id=\"fail_timeout\">\n<code>fail_timeout</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets\n<ul class=\"compact\">\n\n<li>\nthe time during which the specified number of unsuccessful attempts to\ncommunicate with the server should happen to consider the server unavailable;\n</li>\n\n<li>\nand the period of time the server will be considered unavailable.\n</li>\n\n</ul>\nBy default, the parameter is set to 10 seconds.\n</dd>\n\n<dt id=\"backup\">\n<code>backup</code>\n</dt>\n<dd>\nmarks the server as a backup server.\nIt will be passed requests when the primary servers are unavailable.\n</dd>\n\n<dt id=\"down\">\n<code>down</code>\n</dt>\n<dd>\nmarks the server as permanently unavailable.\n</dd>\n\n</dl><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p><dl class=\"compact\">\n\n<dt id=\"resolve\">\n<code>resolve</code>\n</dt>\n<dd>\nmonitors changes of the IP addresses\nthat correspond to a domain name of the server,\nand automatically modifies the upstream configuration\nwithout the need of restarting nginx (1.5.12).\nThe server group must reside in the <a href=\"#zone\">shared memory</a>.\n<p>\nIn order for this parameter to work,\nthe <a href=\"ngx_http_core_module.html#resolver\">resolver</a> directive\nmust be specified in the\n<a href=\"ngx_http_core_module.html#http\">http</a> block.\nExample:\n</p> <blockquote class=\"example\"><pre>\nhttp {\n    resolver 10.0.0.1;\n\n    upstream u {\n        zone ...;\n        ...\n        server example.com resolve;\n    }\n}\n</pre></blockquote><p> \n</p>\n</dd>\n\n<dt id=\"route\">\n<code>route</code>=<code><i>string</i></code>\n</dt>\n<dd>\nsets the server route name.\n</dd>\n\n<dt id=\"service\">\n<code>service</code>=<code><i>name</i></code>\n</dt>\n<dd>\nenables resolving of DNS\n<a href=\"https://tools.ietf.org/html/rfc2782\">SRV</a>\nrecords and sets the service <code><i>name</i></code> (1.9.13).\nIn order for this parameter to work, it is necessary to specify\nthe <a href=\"#resolve\">resolve</a> parameter for the server\nand specify a hostname without a port number.\n<p>\nIf the service name does not contain a dot (&#x201C;<code>.</code>&#x201D;), then\nthe <a href=\"https://tools.ietf.org/html/rfc2782\">RFC</a>-compliant name\nis constructed\nand the TCP protocol is added to the service prefix.\nFor example, to look up the\n<code>_http._tcp.backend.example.com</code> SRV record,\nit is necessary to specify the directive:\n</p> <blockquote class=\"example\"><pre>\nserver backend.example.com service=http resolve;\n</pre></blockquote><p> \nIf the service name contains one or more dots, then the name is constructed\nby joining the service prefix and the server name.\nFor example, to look up the <code>_http._tcp.backend.example.com</code>\nand <code>server1.backend.example.com</code> SRV records,\nit is necessary to specify the directives:\n</p> <blockquote class=\"example\"><pre>\nserver backend.example.com service=_http._tcp resolve;\nserver example.com service=server1.backend resolve;\n</pre></blockquote><p> \n</p>\n\n<p>\nHighest-priority SRV records\n(records with the same lowest-number priority value)\nare resolved as primary servers,\nthe rest of SRV records are resolved as backup servers.\nIf the <a href=\"#backup\">backup</a> parameter is specified for the server,\nhigh-priority SRV records are resolved as backup servers,\nthe rest of SRV records are ignored.\n</p>\n</dd>\n\n<dt id=\"slow_start\">\n<code>slow_start</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the <code><i>time</i></code> during which the server will recover its weight\nfrom zero to a nominal value, when unhealthy server becomes\n<a href=\"ngx_http_upstream_hc_module.html#health_check\">healthy</a>,\nor when the server becomes available after a period of time\nit was considered <a href=\"#fail_timeout\">unavailable</a>.\nDefault value is zero, i.e. slow start is disabled.\n<blockquote class=\"note\">\nThe parameter cannot be used along with the\n<a href=\"#hash\">hash</a> and <a href=\"#ip_hash\">ip_hash</a> load balancing methods.\n</blockquote>\n</dd>\n\n</dl><blockquote class=\"note\">\nIf there is only a single server in a group, <code>max_fails</code>,\n<code>fail_timeout</code> and <code>slow_start</code> parameters\nare ignored, and such a server will never be considered unavailable.\n</blockquote>",
    "notes": [
      "\nIf there is only a single server in a group, max_fails,\nfail_timeout and slow_start parameters\nare ignored, and such a server will never be considered unavailable.\n"
    ],
    "since": null,
    "link": "http/ngx_http_upstream_module.html#server",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "zone",
    "syntax": "zone name [size];",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Defines the name and size of the sharedmemory zone that keeps the group’s configuration and run-time state that areshared between worker processes.Several groups may share the same zone.In this case, it is enough to specify the size only once.",
    "doc": "<p>\nDefines the *`name`* and *`size`* of the shared\nmemory zone that keeps the group&#x2019;s configuration and run-time state that are\nshared between worker processes.\nSeveral groups may share the same zone.\nIn this case, it is enough to specify the *`size`* only once.\n</p><p>\nAdditionally,\nas part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>,\nsuch groups allow changing the group membership\nor modifying the settings of a particular server\nwithout the need of restarting nginx.\nThe configuration is accessible via a special location\nhandled by\n<a href=\"ngx_http_upstream_conf_module.html#upstream_conf\">upstream_conf</a>.\n</p>",
    "notes": [],
    "since": "1.9.0",
    "link": "http/ngx_http_upstream_module.html#zone",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "state",
    "syntax": "state file;",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Specifies a file that keeps the stateof the dynamically configurable group.",
    "doc": "<p>\nSpecifies a *`file`* that keeps the state\nof the dynamically configurable group.\n</p><p>\nExamples:\n</p><blockquote class=\"example\"><pre>\nstate /var/lib/nginx/state/servers.conf; # path for Linux\nstate /var/db/nginx/state/servers.conf;  # path for FreeBSD\n</pre></blockquote><p>\nThe state is currently limited to the list of servers with their parameters.\nThe file is read when parsing the configuration and is updated each time\nthe upstream configuration is\n<a href=\"ngx_http_upstream_conf_module.html#upstream_conf\">changed</a>.\nChanging the file content directly should be avoided.\nThe directive cannot be used\nalong with the <a href=\"#server\">server</a> directive.\n</p><blockquote class=\"note\">\nChanges made during\n<a href=\"../control.html#reconfiguration\">configuration reload</a>\nor <a href=\"../control.html#upgrade\">binary upgrade</a>\ncan be lost.\n</blockquote><blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nChanges made during\nconfiguration reload\nor binary upgrade\ncan be lost.\n",
      "\nThis directive is available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.9.7",
    "link": "http/ngx_http_upstream_module.html#state",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "hash",
    "syntax": "hash key [consistent];",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Specifies a load balancing method for a server groupwhere the client-server mapping is based on the hashed key value.The key can contain text, variables, and their combinations.Note that adding or removing a server from the groupmay result in remapping most of the keys to different servers.The method is compatible with theCache::MemcachedPerl library.",
    "doc": "<p>\nSpecifies a load balancing method for a server group\nwhere the client-server mapping is based on the hashed *`key`* value.\nThe *`key`* can contain text, variables, and their combinations.\nNote that adding or removing a server from the group\nmay result in remapping most of the keys to different servers.\nThe method is compatible with the\n<a href=\"http://search.cpan.org/perldoc?Cache%3A%3AMemcached\">Cache::Memcached</a>\nPerl library.\n</p><p>\nIf the `consistent` parameter is specified\nthe <a href=\"http://www.last.fm/user/RJ/journal/2007/04/10/392555/\">ketama</a>\nconsistent hashing method will be used instead.\nThe method ensures that only a few keys\nwill be remapped to different servers\nwhen a server is added to or removed from the group.\nThis helps to achieve a higher cache hit ratio for caching servers.\nThe method is compatible with the\n<a href=\"http://search.cpan.org/perldoc?Cache%3A%3AMemcached%3A%3AFast\">Cache::Memcached::Fast</a>\nPerl library with the *`ketama_points`* parameter set to 160.\n</p>",
    "notes": [],
    "since": "1.7.2",
    "link": "http/ngx_http_upstream_module.html#hash",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "ip_hash",
    "syntax": "ip_hash;",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Specifies that a group should use a load balancing method where requestsare distributed between servers based on client IP addresses.The first three octets of the client IPv4 address, or the entire IPv6 address,are used as a hashing key.The method ensures that requests from the same client will always bepassed to the same server except when this server is unavailable.In the latter case client requests will be passed to another server.Most probably, it will always be the same server as well.",
    "doc": "<p>\nSpecifies that a group should use a load balancing method where requests\nare distributed between servers based on client IP addresses.\nThe first three octets of the client IPv4 address, or the entire IPv6 address,\nare used as a hashing key.\nThe method ensures that requests from the same client will always be\npassed to the same server except when this server is unavailable.\nIn the latter case client requests will be passed to another server.\nMost probably, it will always be the same server as well.\n</p><blockquote class=\"note\">\nIPv6 addresses are supported starting from versions 1.3.2 and 1.2.2.\n</blockquote><p>\nIf one of the servers needs to be temporarily removed, it should\nbe marked with the `down` parameter in\norder to preserve the current hashing of client IP addresses.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nupstream backend {\n    ip_hash;\n\n    server backend1.example.com;\n    server backend2.example.com;\n    server backend3.example.com <strong>down</strong>;\n    server backend4.example.com;\n}\n</pre></blockquote><blockquote class=\"note\">\nUntil versions 1.3.1 and 1.2.2, it was not possible to specify a weight for\nservers using the <code>ip_hash</code> load balancing method.\n</blockquote>",
    "notes": [
      "\nIPv6 addresses are supported starting from versions 1.3.2 and 1.2.2.\n",
      "\nUntil versions 1.3.1 and 1.2.2, it was not possible to specify a weight for\nservers using the ip_hash load balancing method.\n"
    ],
    "since": null,
    "link": "http/ngx_http_upstream_module.html#ip_hash",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "keepalive",
    "syntax": "keepalive connections;",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Activates the cache for connections to upstream servers.",
    "doc": "<p>\nActivates the cache for connections to upstream servers.\n</p><p>\nThe *`connections`* parameter sets the maximum number of\nidle keepalive connections to upstream servers that are preserved in\nthe cache of each worker process.\nWhen this number is exceeded, the least recently used connections\nare closed.\n</p><blockquote class=\"note\">\nIt should be particularly noted that the <code>keepalive</code> directive\ndoes not limit the total number of connections to upstream servers\nthat an nginx worker process can open.\nThe <code><i>connections</i></code> parameter should be set to a number small enough\nto let upstream servers process new incoming connections as well.\n</blockquote><p>\nExample configuration of memcached upstream with keepalive connections:\n</p><blockquote class=\"example\"><pre>\nupstream memcached_backend {\n    server 127.0.0.1:11211;\n    server 10.0.0.2:11211;\n\n    keepalive 32;\n}\n\nserver {\n    ...\n\n    location /memcached/ {\n        set $memcached_key $uri;\n        memcached_pass memcached_backend;\n    }\n\n}\n</pre></blockquote><p>\nFor HTTP, the <a href=\"ngx_http_proxy_module.html#proxy_http_version\">proxy_http_version</a>\ndirective should be set to &#x201C;`1.1`&#x201D;\nand the &#x201C;Connection&#x201D; header field should be cleared:\n</p><blockquote class=\"example\"><pre>\nupstream http_backend {\n    server 127.0.0.1:8080;\n\n    keepalive 16;\n}\n\nserver {\n    ...\n\n    location /http/ {\n        proxy_pass http://http_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Connection &quot;&quot;;\n        ...\n    }\n}\n</pre></blockquote><blockquote class=\"note\">\nAlternatively, HTTP/1.0 persistent connections can be used by passing the\n&#x201C;Connection: Keep-Alive&#x201D; header field to an upstream server,\nthough this method is not recommended.\n</blockquote><p>\nFor FastCGI servers, it is required to set\n<a href=\"ngx_http_fastcgi_module.html#fastcgi_keep_conn\">fastcgi_keep_conn</a>\nfor keepalive connections to work:\n</p><blockquote class=\"example\"><pre>\nupstream fastcgi_backend {\n    server 127.0.0.1:9000;\n\n    keepalive 8;\n}\n\nserver {\n    ...\n\n    location /fastcgi/ {\n        fastcgi_pass fastcgi_backend;\n        fastcgi_keep_conn on;\n        ...\n    }\n}\n</pre></blockquote><blockquote class=\"note\">\nWhen using load balancer methods other than the default\nround-robin method, it is necessary to activate them before\nthe <code>keepalive</code> directive.\n</blockquote><blockquote class=\"note\">\nSCGI and uwsgi protocols do not have a notion of keepalive connections.\n</blockquote>",
    "notes": [
      "\nIt should be particularly noted that the keepalive directive\ndoes not limit the total number of connections to upstream servers\nthat an nginx worker process can open.\nThe connections parameter should be set to a number small enough\nto let upstream servers process new incoming connections as well.\n",
      "\nAlternatively, HTTP/1.0 persistent connections can be used by passing the\n“Connection: Keep-Alive” header field to an upstream server,\nthough this method is not recommended.\n",
      "\nWhen using load balancer methods other than the default\nround-robin method, it is necessary to activate them before\nthe keepalive directive.\n",
      "\nSCGI and uwsgi protocols do not have a notion of keepalive connections.\n"
    ],
    "since": "1.1.4",
    "link": "http/ngx_http_upstream_module.html#keepalive",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "ntlm",
    "syntax": "ntlm;",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Allows proxying requests withNTLMAuthentication.The upstream connection is bound to the client connectiononce the client sends a request with the “Authorization”header field valuestarting with “Negotiate” or “NTLM”.Further client requests will be proxied through the same upstream connection,keeping the authentication context.",
    "doc": "<p>\nAllows proxying requests with\n<a href=\"https://en.wikipedia.org/wiki/Integrated_Windows_Authentication\">NTLM\nAuthentication</a>.\nThe upstream connection is bound to the client connection\nonce the client sends a request with the &#x201C;Authorization&#x201D;\nheader field value\nstarting with &#x201C;`Negotiate`&#x201D; or &#x201C;`NTLM`&#x201D;.\nFurther client requests will be proxied through the same upstream connection,\nkeeping the authentication context.\n</p><p>\nIn order for NTLM authentication to work,\nit is necessary to enable keepalive connections to upstream servers.\nThe <a href=\"ngx_http_proxy_module.html#proxy_http_version\">proxy_http_version</a>\ndirective should be set to &#x201C;`1.1`&#x201D;\nand the &#x201C;Connection&#x201D; header field should be cleared:\n</p><blockquote class=\"example\"><pre>\nupstream http_backend {\n    server 127.0.0.1:8080;\n\n    ntlm;\n}\n\nserver {\n    ...\n\n    location /http/ {\n        proxy_pass http://http_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Connection &quot;&quot;;\n        ...\n    }\n}\n</pre></blockquote><blockquote class=\"note\">\nWhen using load balancer methods other than the default\nround-robin method, it is necessary to activate them before\nthe <code>ntlm</code> directive.\n</blockquote><blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nWhen using load balancer methods other than the default\nround-robin method, it is necessary to activate them before\nthe ntlm directive.\n",
      "\nThis directive is available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.9.2",
    "link": "http/ngx_http_upstream_module.html#ntlm",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "least_conn",
    "syntax": "least_conn;",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Specifies that a group should use a load balancing method where a requestis passed to the server with the least number of active connections,taking into account weights of servers.If there are several such servers, they are tried in turn using aweighted round-robin balancing method.",
    "doc": "<p>\nSpecifies that a group should use a load balancing method where a request\nis passed to the server with the least number of active connections,\ntaking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\n</p>",
    "notes": [],
    "since": "1.3.1",
    "link": "http/ngx_http_upstream_module.html#least_conn",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "least_time",
    "syntax": "least_time \n    header |\n    last_byte\n    [inflight];",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Specifies that a group should use a load balancing method where a requestis passed to the server with the least average response time andleast number of active connections, taking into account weights of servers.If there are several such servers, they are tried in turn using aweighted round-robin balancing method.",
    "doc": "<p>\nSpecifies that a group should use a load balancing method where a request\nis passed to the server with the least average response time and\nleast number of active connections, taking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\n</p><p>\nIf the `header` parameter is specified,\ntime to receive the\n<a href=\"#var_upstream_header_time\">response header</a> is used.\nIf the `last_byte` parameter is specified,\ntime to receive the <a href=\"#var_upstream_response_time\">full response</a>\nis used.\nIf the `inflight` parameter is specified (1.11.6),\nincomplete requests are also taken into account.\n</p><blockquote class=\"note\">\nPrior to version 1.11.6, incomplete requests were taken into account by default.\n</blockquote><blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nPrior to version 1.11.6, incomplete requests were taken into account by default.\n",
      "\nThis directive is available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.7.10",
    "link": "http/ngx_http_upstream_module.html#least_time",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "queue",
    "syntax": "queue \nnumber\n[timeout=time];",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "If an upstream server cannot be selected immediatelywhile processing a request,the request will be placed into the queue.The directive specifies the maximum number of requests that can be in the queueat the same time.If the queue is filled up,or the server to pass the request to cannot be selected withinthe time period specified in the timeout parameter,the 502 (Bad Gateway)error will be returned to the client.",
    "doc": "<p>\nIf an upstream server cannot be selected immediately\nwhile processing a request,\nthe request will be placed into the queue.\nThe directive specifies the maximum number of requests that can be in the queue\nat the same time.\nIf the queue is filled up,\nor the server to pass the request to cannot be selected within\nthe time period specified in the `timeout` parameter,\nthe 502 (Bad Gateway)\nerror will be returned to the client.\n</p><p>\nThe default value of the `timeout` parameter is 60 seconds.\n</p><blockquote class=\"note\">\nWhen using load balancer methods other than the default\nround-robin method, it is necessary to activate them before\nthe <code>queue</code> directive.\n</blockquote><blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nWhen using load balancer methods other than the default\nround-robin method, it is necessary to activate them before\nthe queue directive.\n",
      "\nThis directive is available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.5.12",
    "link": "http/ngx_http_upstream_module.html#queue",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "sticky",
    "syntax": "sticky \n    cookie name\n    [expires=time]\n    [domain=domain]\n    [httponly]\n    [secure]\n    [path=path];sticky \n    route $variable ...;sticky \n    learn\n    create=$variable\n    lookup=$variable\n    zone=name:size\n    [timeout=time];",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "Enables session affinity, which causes requests from the same client to bepassed to the same server in a group of servers.Three methods are available:",
    "doc": "<p>\nEnables session affinity, which causes requests from the same client to be\npassed to the same server in a group of servers.\nThree methods are available:\n</p><dl class=\"compact\">\n<dt id=\"sticky_cookie\"><code>cookie</code></dt>\n<dd>\n\n<p>\nWhen the <code>cookie</code> method is used, information about the\ndesignated server is passed in an HTTP cookie generated by nginx:\n</p> <blockquote class=\"example\"><pre>\nupstream backend {\n    server backend1.example.com;\n    server backend2.example.com;\n\n    sticky cookie srv_id expires=1h domain=.example.com path=/;\n}\n</pre></blockquote><p> \n</p>\n\n<p>\nA request that comes from a client not yet bound to a particular server\nis passed to the server selected by the configured balancing method.\nFurther requests with this cookie will be passed to the designated server.\nIf the designated server cannot process a request, the new server is\nselected as if the client has not been bound yet.\n</p>\n\n<p>\nThe first parameter sets the name of the cookie to be set or inspected.\nAdditional parameters may be as follows:\n</p> <dl class=\"compact\">\n\n<dt><code>expires=</code><code><i>time</i></code></dt>\n<dd>\nSets the <code><i>time</i></code> for which a browser should keep the cookie.\nThe special value <code>max</code> will cause the cookie to expire on\n&#x201C;<code>31 Dec 2037 23:55:55 GMT</code>&#x201D;.\nIf the parameter is not specified, it will cause the cookie to expire at\nthe end of a browser session.\n</dd>\n\n<dt><code>domain=</code><code><i>domain</i></code></dt>\n<dd>\nDefines the <code><i>domain</i></code> for which the cookie is set.\nParameter value can contain variables (1.11.5).\n</dd>\n\n<dt><code>httponly</code></dt>\n<dd>\nAdds the <code>HttpOnly</code> attribute to the cookie (1.7.11).\n</dd>\n\n<dt><code>secure</code></dt>\n<dd>\nAdds the <code>Secure</code> attribute to the cookie (1.7.11).\n\n</dd>\n\n<dt><code>path=</code><code><i>path</i></code></dt>\n<dd>\nDefines the <code><i>path</i></code> for which the cookie is set.\n</dd>\n\n</dl><p> \nIf any parameters are omitted, the corresponding cookie fields are not set.\n</p>\n</dd>\n\n<dt id=\"sticky_route\"><code>route</code></dt>\n<dd>\n\n<p>\nWhen the <code>route</code> method is used, proxied server assigns\nclient a route on receipt of the first request.\nAll subsequent requests from this client will carry routing information\nin a cookie or URI.\nThis information is compared with the &#x201C;<code>route</code>&#x201D; parameter\nof the <a href=\"#server\">server</a> directive to identify the server to which the\nrequest should be proxied.\nIf the &#x201C;<code>route</code>&#x201D; parameter is not specified, the route name\nwill be a hexadecimal representation of the MD5 hash of the IP address and port,\nor of the UNIX-domain socket path.\nIf the designated server cannot process a request, the new server is\nselected by the configured balancing method as if there is no routing\ninformation in the request.\n</p>\n\n<p>\nThe parameters of the <code>route</code> method specify variables that\nmay contain routing information.\nThe first non-empty variable is used to find the matching server.\n</p>\n\n<p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nmap $cookie_jsessionid $route_cookie {\n    ~.+\\.(?P&lt;route&gt;\\w+)$ $route;\n}\n\nmap $request_uri $route_uri {\n    ~jsessionid=.+\\.(?P&lt;route&gt;\\w+)$ $route;\n}\n\nupstream backend {\n    server backend1.example.com route=a;\n    server backend2.example.com route=b;\n\n    sticky route $route_cookie $route_uri;\n}\n</pre></blockquote><p> \nHere, the route is taken from the &#x201C;<code>JSESSIONID</code>&#x201D; cookie\nif present in a request.\nOtherwise, the route from the URI is used.\n</p>\n\n</dd>\n\n<dt id=\"sticky_learn\"><code>learn</code></dt>\n<dd>\n<p>\nWhen the <code>learn</code> method (1.7.1) is used, nginx\nanalyzes upstream server responses and learns server-initiated sessions\nusually passed in an HTTP cookie.\n</p> <blockquote class=\"example\"><pre>\nupstream backend {\n   server backend1.example.com:8080;\n   server backend2.example.com:8081;\n\n   sticky learn\n          create=$upstream_cookie_examplecookie\n          lookup=$cookie_examplecookie\n          zone=client_sessions:1m;\n}\n</pre></blockquote><p> \n\nIn the example, the upstream server creates a session by setting the\ncookie &#x201C;<code>EXAMPLECOOKIE</code>&#x201D; in the response.\nFurther requests with this cookie will be passed to the same server.\nIf the server cannot process the request, the new server is\nselected as if the client has not been bound yet.\n</p>\n\n<p>\nThe parameters <code>create</code> and <code>lookup</code>\nspecify variables that indicate how new sessions are created and existing\nsessions are searched, respectively.\nBoth parameters may be specified more than once, in which case the first\nnon-empty variable is used.\n</p>\n\n<p>\nSessions are stored in a shared memory zone, whose <code><i>name</i></code> and\n<code><i>size</i></code> are configured by the <code>zone</code> parameter.\nOne megabyte zone can store about 8000 sessions on the 64-bit platform.\nThe sessions that are not accessed during the time specified by the\n<code>timeout</code> parameter get removed from the zone.\nBy default, <code>timeout</code> is set to 10 minutes.\n</p>\n\n</dd>\n</dl><blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nThis directive is available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.5.7",
    "link": "http/ngx_http_upstream_module.html#sticky",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "sticky_cookie_insert",
    "syntax": "sticky_cookie_insert name\n[expires=time]\n[domain=domain]\n[path=path];",
    "def": null,
    "contexts": [
      "upstream"
    ],
    "desc": "This directive is obsolete since version 1.5.7.An equivalentsticky directive with a new syntax should be used instead:",
    "doc": "<p>\nThis directive is obsolete since version 1.5.7.\nAn equivalent\n<a href=\"#sticky\">sticky</a> directive with a new syntax should be used instead:\n</p><blockquote class=\"note\">\n<code>sticky cookie</code> <code><i>name</i></code>\n[<code>expires=</code><code><i>time</i></code>]\n[<code>domain=</code><code><i>domain</i></code>]\n[<code>path=</code><code><i>path</i></code>];\n</blockquote>",
    "notes": [
      "\nsticky cookie name\n[expires=time]\n[domain=domain]\n[path=path];\n"
    ],
    "since": null,
    "link": "http/ngx_http_upstream_module.html#sticky_cookie_insert",
    "module": "ngx_http_upstream_module"
  },
  {
    "name": "sub_filter",
    "syntax": "sub_filter string replacement;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a string to replace and a replacement string.The string to replace is matched ignoring the case.The string to replace (1.9.4) and replacement string can contain variables.Several sub_filter directivescan be specified on one configuration level (1.9.4).These directives are inherited from the previous level if and only if there areno sub_filter directives defined on the current level.",
    "doc": "<p>\nSets a string to replace and a replacement string.\nThe string to replace is matched ignoring the case.\nThe string to replace (1.9.4) and replacement string can contain variables.\nSeveral `sub_filter` directives\ncan be specified on one configuration level (1.9.4).\nThese directives are inherited from the previous level if and only if there are\nno `sub_filter` directives defined on the current level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_sub_module.html#sub_filter",
    "module": "ngx_http_sub_module"
  },
  {
    "name": "sub_filter_last_modified",
    "syntax": "sub_filter_last_modified on | off;",
    "def": "sub_filter_last_modified off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows preserving the “Last-Modified” header fieldfrom the original response during replacementto facilitate response caching.",
    "doc": "<p>\nAllows preserving the &#x201C;Last-Modified&#x201D; header field\nfrom the original response during replacement\nto facilitate response caching.\n</p><p>\nBy default, the header field is removed as contents of the response\nare modified during processing.\n</p>",
    "notes": [],
    "since": "1.5.1",
    "link": "http/ngx_http_sub_module.html#sub_filter_last_modified",
    "module": "ngx_http_sub_module"
  },
  {
    "name": "sub_filter_once",
    "syntax": "sub_filter_once on | off;",
    "def": "sub_filter_once on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Indicates whether to look for each string to replaceonce or repeatedly.",
    "doc": "<p>\nIndicates whether to look for each string to replace\nonce or repeatedly.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_sub_module.html#sub_filter_once",
    "module": "ngx_http_sub_module"
  },
  {
    "name": "sub_filter_types",
    "syntax": "sub_filter_types mime-type ...;",
    "def": "sub_filter_types text/html;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables string replacement in responses with the specified MIME typesin addition to “text/html”.The special value “*” matches any MIME type (0.8.29).",
    "doc": "<p>\nEnables string replacement in responses with the specified MIME types\nin addition to &#x201C;`text/html`&#x201D;.\nThe special value &#x201C;`*`&#x201D; matches any MIME type (0.8.29).\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_sub_module.html#sub_filter_types",
    "module": "ngx_http_sub_module"
  },
  {
    "name": "stub_status",
    "syntax": "stub_status;",
    "def": null,
    "contexts": [
      "server",
      "location"
    ],
    "desc": "The basic status information will be accessible from the surrounding location.",
    "doc": "<p>\nThe basic status information will be accessible from the surrounding location.\n</p><blockquote class=\"note\">\nIn versions prior to 1.7.5,\nthe directive syntax required an arbitrary argument, for example,\n&#x201C;<code>stub_status on</code>&#x201D;.\n</blockquote>",
    "notes": [
      "\nIn versions prior to 1.7.5,\nthe directive syntax required an arbitrary argument, for example,\n“stub_status on”.\n"
    ],
    "since": null,
    "link": "http/ngx_http_stub_status_module.html#stub_status",
    "module": "ngx_http_stub_status_module"
  },
  {
    "name": "status",
    "syntax": "status;",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "The status information will be accessible from the surrounding location.Access to this location should belimited.",
    "doc": "<p>\nThe status information will be accessible from the surrounding location.\nAccess to this location should be\n<a href=\"ngx_http_core_module.html#satisfy\">limited</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_status_module.html#status",
    "module": "ngx_http_status_module"
  },
  {
    "name": "status_format",
    "syntax": "status_format json;status_format jsonp [callback];",
    "def": "status_format json;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "By default, status information is output in the JSON format.",
    "doc": "<p>\nBy default, status information is output in the JSON format.\n</p><p>\nAlternatively, data may be output as JSONP.\nThe *`callback`* parameter specifies the name of a callback function.\nThe value can contain variables.\nIf parameter is omitted, or the computed value is an empty string,\nthen &#x201C;`ngx_status_jsonp_callback`&#x201D; is used.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_status_module.html#status_format",
    "module": "ngx_http_status_module"
  },
  {
    "name": "status_zone",
    "syntax": "status_zone zone;",
    "def": null,
    "contexts": [
      "server"
    ],
    "desc": "Enables collection of virtualhttporstream(1.7.11) server status information in the specified zone.Several servers may share the same zone.",
    "doc": "<p>\nEnables collection of virtual\n<a href=\"ngx_http_core_module.html#server\">http</a>\nor\n<a href=\"../stream/ngx_stream_core_module.html#server\">stream</a>\n(1.7.11) server status information in the specified *`zone`*.\nSeveral servers may share the same zone.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_status_module.html#status_zone",
    "module": "ngx_http_status_module"
  },
  {
    "name": "ssl",
    "syntax": "ssl on | off;",
    "def": "ssl off;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Enables the HTTPS protocol for the given virtual server.",
    "doc": "<p>\nEnables the HTTPS protocol for the given virtual server.\n</p><blockquote class=\"note\">\nIt is recommended to use the <code>ssl</code> parameter of the\n<a href=\"ngx_http_core_module.html#listen\">listen</a> directive instead\nof this directive.\n</blockquote>",
    "notes": [
      "\nIt is recommended to use the ssl parameter of the\nlisten directive instead\nof this directive.\n"
    ],
    "since": null,
    "link": "http/ngx_http_ssl_module.html#ssl",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_buffer_size",
    "syntax": "ssl_buffer_size size;",
    "def": "ssl_buffer_size 16k;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Sets the size of the buffer used for sending data.",
    "doc": "<p>\nSets the size of the buffer used for sending data.\n</p><p>\nBy default, the buffer size is 16k, which corresponds to minimal\noverhead when sending big responses.\nTo minimize Time To First Byte it may be beneficial to use smaller values,\nfor example:\n</p><blockquote class=\"example\"><pre>\nssl_buffer_size 4k;\n</pre></blockquote>",
    "notes": [],
    "since": "1.5.9",
    "link": "http/ngx_http_ssl_module.html#ssl_buffer_size",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_certificate",
    "syntax": "ssl_certificate file;",
    "def": null,
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Specifies a file with the certificate in the PEM formatfor the given virtual server.If intermediate certificates should be specified in addition to a primarycertificate, they should be specified in the same file in the followingorder: the primary certificate comes first, then the intermediate certificates.A secret key in the PEM format may be placed in the same file.",
    "doc": "<p>\nSpecifies a *`file`* with the certificate in the PEM format\nfor the given virtual server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\n</p><p>\nSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\n</p><blockquote class=\"example\"><pre>\nserver {\n    listen              443 ssl;\n    server_name         example.com;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n</pre></blockquote><blockquote class=\"note\">\nOnly OpenSSL 1.0.2 or higher supports separate\n<a href=\"configuring_https_servers.html#chains\">certificate chains</a>\nfor different certificates.\nWith older versions, only one certificate chain can be used.\n</blockquote><p>\nIt should be kept in mind that due to the HTTPS protocol limitations\nvirtual servers should listen on different IP addresses:\n</p><blockquote class=\"example\"><pre>\nserver {\n    listen          192.168.1.1:443;\n    server_name     one.example.com;\n    ssl_certificate one.example.com.crt;\n    ...\n}\n\nserver {\n    listen          192.168.1.2:443;\n    server_name     two.example.com;\n    ssl_certificate two.example.com.crt;\n    ...\n}\n</pre></blockquote><p> \notherwise\n<a href=\"configuring_https_servers.html#name_based_https_servers\">the first server&#x2019;s certificate</a>\nwill be issued for the second site.\n</p>",
    "notes": [
      "\nOnly OpenSSL 1.0.2 or higher supports separate\ncertificate chains\nfor different certificates.\nWith older versions, only one certificate chain can be used.\n"
    ],
    "since": null,
    "link": "http/ngx_http_ssl_module.html#ssl_certificate",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_certificate_key",
    "syntax": "ssl_certificate_key file;",
    "def": null,
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Specifies a file with the secret key in the PEM formatfor the given virtual server.",
    "doc": "<p>\nSpecifies a *`file`* with the secret key in the PEM format\nfor the given virtual server.\n</p><p>\nThe value\n`engine`:*`name`*:*`id`*\ncan be specified instead of the *`file`* (1.7.9),\nwhich loads a secret key with a specified *`id`*\nfrom the OpenSSL engine *`name`*.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssl_module.html#ssl_certificate_key",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_ciphers",
    "syntax": "ssl_ciphers ciphers;",
    "def": "ssl_ciphers HIGH:!aNULL:!MD5;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Specifies the enabled ciphers.The ciphers are specified in the format understood by theOpenSSL library, for example:",
    "doc": "<p>\nSpecifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\n</p><blockquote class=\"example\"><pre>\nssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n</pre></blockquote><p>\nThe full list can be viewed using the\n&#x201C;`openssl ciphers`&#x201D; command.\n</p><blockquote class=\"note\">\nThe previous versions of nginx used\n<a href=\"configuring_https_servers.html#compatibility\">different</a>\nciphers by default.\n</blockquote>",
    "notes": [
      "\nThe previous versions of nginx used\ndifferent\nciphers by default.\n"
    ],
    "since": null,
    "link": "http/ngx_http_ssl_module.html#ssl_ciphers",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_client_certificate",
    "syntax": "ssl_client_certificate file;",
    "def": null,
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Specifies a file with trusted CA certificates in the PEM formatused to verify client certificates andOCSP responses if ssl_stapling is enabled.",
    "doc": "<p>\nSpecifies a *`file`* with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates and\nOCSP responses if <a href=\"#ssl_stapling\">ssl_stapling</a> is enabled.\n</p><p>\nThe list of certificates will be sent to clients.\nIf this is not desired, the <a href=\"#ssl_trusted_certificate\">ssl_trusted_certificate</a>\ndirective can be used.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssl_module.html#ssl_client_certificate",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_crl",
    "syntax": "ssl_crl file;",
    "def": null,
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Specifies a file with revoked certificates (CRL)in the PEM format used to verifyclient certificates.",
    "doc": "<p>\nSpecifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to <a href=\"#ssl_verify_client\">verify</a>\nclient certificates.\n</p>",
    "notes": [],
    "since": "0.8.7",
    "link": "http/ngx_http_ssl_module.html#ssl_crl",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_dhparam",
    "syntax": "ssl_dhparam file;",
    "def": null,
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Specifies a file with DH parameters for DHE ciphers.",
    "doc": "<p>\nSpecifies a *`file`* with DH parameters for DHE ciphers.\n</p>",
    "notes": [],
    "since": "0.7.2",
    "link": "http/ngx_http_ssl_module.html#ssl_dhparam",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_ecdh_curve",
    "syntax": "ssl_ecdh_curve curve;",
    "def": "ssl_ecdh_curve auto;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Specifies a curve for ECDHE ciphers.",
    "doc": "<p>\nSpecifies a *`curve`* for ECDHE ciphers.\n</p><p>\nWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\n</p><blockquote class=\"example\"><pre>\nssl_ecdh_curve prime256v1:secp384r1;\n</pre></blockquote><p>\nThe special value `auto` (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor `prime256v1` with older versions.\n</p><blockquote class=\"note\">\nPrior to version 1.11.0,\nthe <code>prime256v1</code> curve was used by default.\n</blockquote>",
    "notes": [
      "\nPrior to version 1.11.0,\nthe prime256v1 curve was used by default.\n"
    ],
    "since": "1.1.0",
    "link": "http/ngx_http_ssl_module.html#ssl_ecdh_curve",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_password_file",
    "syntax": "ssl_password_file file;",
    "def": null,
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Specifies a file with passphrases forsecret keyswhere each passphrase is specified on a separate line.Passphrases are tried in turn when loading the key.",
    "doc": "<p>\nSpecifies a *`file`* with passphrases for\n<a href=\"#ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nhttp {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        server_name www1.example.com;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        server_name www2.example.com;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n</pre></blockquote>",
    "notes": [],
    "since": "1.7.3",
    "link": "http/ngx_http_ssl_module.html#ssl_password_file",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_prefer_server_ciphers",
    "syntax": "ssl_prefer_server_ciphers on | off;",
    "def": "ssl_prefer_server_ciphers off;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Specifies that server ciphers should be preferred over clientciphers when using the SSLv3 and TLS protocols.",
    "doc": "<p>\nSpecifies that server ciphers should be preferred over client\nciphers when using the SSLv3 and TLS protocols.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssl_module.html#ssl_prefer_server_ciphers",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_protocols",
    "syntax": "ssl_protocols \n    [SSLv2]\n    [SSLv3]\n    [TLSv1]\n    [TLSv1.1]\n    [TLSv1.2];",
    "def": "ssl_protocols TLSv1 TLSv1.1 TLSv1.2;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Enables the specified protocols.The TLSv1.1 and TLSv1.2 parameters workonly when the OpenSSL library of version 1.0.1 or higher is used.",
    "doc": "<p>\nEnables the specified protocols.\nThe `TLSv1.1` and `TLSv1.2` parameters work\nonly when the OpenSSL library of version 1.0.1 or higher is used.\n</p><blockquote class=\"note\">\nThe <code>TLSv1.1</code> and <code>TLSv1.2</code> parameters are\nsupported starting from versions 1.1.13 and 1.0.12,\nso when the OpenSSL version 1.0.1 or higher\nis used on older nginx versions, these protocols work, but cannot\nbe disabled.\n</blockquote>",
    "notes": [
      "\nThe TLSv1.1 and TLSv1.2 parameters are\nsupported starting from versions 1.1.13 and 1.0.12,\nso when the OpenSSL version 1.0.1 or higher\nis used on older nginx versions, these protocols work, but cannot\nbe disabled.\n"
    ],
    "since": null,
    "link": "http/ngx_http_ssl_module.html#ssl_protocols",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_session_cache",
    "syntax": "ssl_session_cache \n    off |\n    none |\n    [builtin[:size]]\n    [shared:name:size];",
    "def": "ssl_session_cache none;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Sets the types and sizes of caches that store session parameters.A cache can be of any of the following types:",
    "doc": "<p>\nSets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\n</p><dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nthe use of a session cache is strictly prohibited:\nnginx explicitly tells a client that sessions may not be reused.\n</dd>\n\n<dt><code>none</code></dt>\n<dd>\nthe use of a session cache is gently disallowed:\nnginx tells a client that sessions may be reused, but does not\nactually store session parameters in the cache.\n</dd>\n\n<dt><code>builtin</code></dt>\n<dd>\na cache built in OpenSSL; used by one worker process only.\nThe cache size is specified in sessions.\nIf size is not given, it is equal to 20480 sessions.\nUse of the built-in cache can cause memory fragmentation.\n</dd>\n\n<dt><code>shared</code></dt>\n<dd>\na cache shared between all worker processes.\nThe cache size is specified in bytes; one megabyte can store\nabout 4000 sessions.\nEach shared cache should have an arbitrary name.\nA cache with the same name can be used in several virtual servers.\n</dd>\n\n</dl><p>\nBoth cache types can be used simultaneously, for example:\n</p><blockquote class=\"example\"><pre>\nssl_session_cache builtin:1000 shared:SSL:10m;\n</pre></blockquote><p> \nbut using only shared cache without the built-in cache should\nbe more efficient.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssl_module.html#ssl_session_cache",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_session_ticket_key",
    "syntax": "ssl_session_ticket_key file;",
    "def": null,
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Sets a file with the secret key used to encryptand decrypt TLS session tickets.The directive is necessary if the same key has to be shared betweenmultiple servers.By default, a randomly generated key is used.",
    "doc": "<p>\nSets a *`file`* with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\n</p><p>\nIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\n</p><blockquote class=\"example\"><pre>\nssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n</pre></blockquote><p>\nThe *`file`* must contain 80 or 48 bytes\nof random data and can be created using the following command:\n</p><blockquote class=\"example\"><pre>\nopenssl rand 80 &gt; ticket.key\n</pre></blockquote><p> \nDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.\n</p>",
    "notes": [],
    "since": "1.5.7",
    "link": "http/ngx_http_ssl_module.html#ssl_session_ticket_key",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_session_tickets",
    "syntax": "ssl_session_tickets on | off;",
    "def": "ssl_session_tickets on;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Enables or disables session resumption throughTLS session tickets.",
    "doc": "<p>\nEnables or disables session resumption through\n<a href=\"https://tools.ietf.org/html/rfc5077\">TLS session tickets</a>.\n</p>",
    "notes": [],
    "since": "1.5.9",
    "link": "http/ngx_http_ssl_module.html#ssl_session_tickets",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_session_timeout",
    "syntax": "ssl_session_timeout time;",
    "def": "ssl_session_timeout 5m;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Specifies a time during which a client may reuse thesession parameters.",
    "doc": "<p>\nSpecifies a time during which a client may reuse the\nsession parameters.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssl_module.html#ssl_session_timeout",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_stapling",
    "syntax": "ssl_stapling on | off;",
    "def": "ssl_stapling off;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Enables or disablesstaplingof OCSP responses by the server.Example:",
    "doc": "<p>\nEnables or disables\n<a href=\"https://tools.ietf.org/html/rfc4366#section-3.6\">stapling\nof OCSP responses</a> by the server.\nExample:\n</p><blockquote class=\"example\"><pre>\nssl_stapling on;\nresolver 192.0.2.1;\n</pre></blockquote><p>\nFor the OCSP stapling to work, the certificate of the server certificate\nissuer should be known.\nIf the <a href=\"#ssl_certificate\">ssl_certificate</a> file does\nnot contain intermediate certificates,\nthe certificate of the server certificate issuer should be\npresent in the\n<a href=\"#ssl_trusted_certificate\">ssl_trusted_certificate</a> file.\n</p><p>\nFor a resolution of the OCSP responder hostname,\nthe <a href=\"ngx_http_core_module.html#resolver\">resolver</a> directive\nshould also be specified.\n</p>",
    "notes": [],
    "since": "1.3.7",
    "link": "http/ngx_http_ssl_module.html#ssl_stapling",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_stapling_file",
    "syntax": "ssl_stapling_file file;",
    "def": null,
    "contexts": [
      "http",
      "server"
    ],
    "desc": "When set, the stapled OCSP response will be taken from thespecified file instead of queryingthe OCSP responder specified in the server certificate.",
    "doc": "<p>\nWhen set, the stapled OCSP response will be taken from the\nspecified *`file`* instead of querying\nthe OCSP responder specified in the server certificate.\n</p><p>\nThe file should be in the DER format as produced by the\n&#x201C;`openssl ocsp`&#x201D; command.\n</p>",
    "notes": [],
    "since": "1.3.7",
    "link": "http/ngx_http_ssl_module.html#ssl_stapling_file",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_stapling_responder",
    "syntax": "ssl_stapling_responder url;",
    "def": null,
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Overrides the URL of the OCSP responder specified in the“AuthorityInformation Access” certificate extension.",
    "doc": "<p>\nOverrides the URL of the OCSP responder specified in the\n&#x201C;<a href=\"https://tools.ietf.org/html/rfc5280#section-4.2.2.1\">Authority\nInformation Access</a>&#x201D; certificate extension.\n</p><p>\nOnly &#x201C;`http://`&#x201D; OCSP responders are supported:\n</p><blockquote class=\"example\"><pre>\nssl_stapling_responder http://ocsp.example.com/;\n</pre></blockquote>",
    "notes": [],
    "since": "1.3.7",
    "link": "http/ngx_http_ssl_module.html#ssl_stapling_responder",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_stapling_verify",
    "syntax": "ssl_stapling_verify on | off;",
    "def": "ssl_stapling_verify off;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Enables or disables verification of OCSP responses by the server.",
    "doc": "<p>\nEnables or disables verification of OCSP responses by the server.\n</p><p>\nFor verification to work, the certificate of the server certificate\nissuer, the root certificate, and all intermediate certificates\nshould be configured as trusted using the\n<a href=\"#ssl_trusted_certificate\">ssl_trusted_certificate</a> directive.\n</p>",
    "notes": [],
    "since": "1.3.7",
    "link": "http/ngx_http_ssl_module.html#ssl_stapling_verify",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_trusted_certificate",
    "syntax": "ssl_trusted_certificate file;",
    "def": null,
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Specifies a file with trusted CA certificates in the PEM formatused to verify client certificates andOCSP responses if ssl_stapling is enabled.",
    "doc": "<p>\nSpecifies a *`file`* with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates and\nOCSP responses if <a href=\"#ssl_stapling\">ssl_stapling</a> is enabled.\n</p><p>\nIn contrast to the certificate set by <a href=\"#ssl_client_certificate\">ssl_client_certificate</a>,\nthe list of these certificates will not be sent to clients.\n</p>",
    "notes": [],
    "since": "1.3.7",
    "link": "http/ngx_http_ssl_module.html#ssl_trusted_certificate",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_verify_client",
    "syntax": "ssl_verify_client \n    on | off |\n    optional | optional_no_ca;",
    "def": "ssl_verify_client off;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Enables verification of client certificates.The verification result is stored in the$ssl_client_verify variable.",
    "doc": "<p>\nEnables verification of client certificates.\nThe verification result is stored in the\n<a href=\"#var_ssl_client_verify\">$ssl_client_verify</a> variable.\n</p><p>\nThe `optional` parameter (0.8.7+) requests the client\ncertificate and verifies it if the certificate is present.\n</p><p>\nThe `optional_no_ca` parameter (1.3.8, 1.2.5)\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through the\n<a href=\"#var_ssl_client_cert\">$ssl_client_cert</a> variable.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssl_module.html#ssl_verify_client",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssl_verify_depth",
    "syntax": "ssl_verify_depth number;",
    "def": "ssl_verify_depth 1;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Sets the verification depth in the client certificates chain.",
    "doc": "<p>\nSets the verification depth in the client certificates chain.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssl_module.html#ssl_verify_depth",
    "module": "ngx_http_ssl_module"
  },
  {
    "name": "ssi",
    "syntax": "ssi on | off;",
    "def": "ssi off;",
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Enables or disables processing of SSI commands in responses.",
    "doc": "<p>\nEnables or disables processing of SSI commands in responses.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssi_module.html#ssi",
    "module": "ngx_http_ssi_module"
  },
  {
    "name": "ssi_last_modified",
    "syntax": "ssi_last_modified on | off;",
    "def": "ssi_last_modified off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows preserving the “Last-Modified” header fieldfrom the original response during SSI processingto facilitate response caching.",
    "doc": "<p>\nAllows preserving the &#x201C;Last-Modified&#x201D; header field\nfrom the original response during SSI processing\nto facilitate response caching.\n</p><p>\nBy default, the header field is removed as contents of the response\nare modified during processing and may contain dynamically generated elements\nor parts that are changed independently of the original response.\n</p>",
    "notes": [],
    "since": "1.5.1",
    "link": "http/ngx_http_ssi_module.html#ssi_last_modified",
    "module": "ngx_http_ssi_module"
  },
  {
    "name": "ssi_min_file_chunk",
    "syntax": "ssi_min_file_chunk size;",
    "def": "ssi_min_file_chunk 1k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the minimum size for parts of a response stored on disk,starting from which it makes sense to send them usingsendfile.",
    "doc": "<p>\nSets the minimum *`size`* for parts of a response stored on disk,\nstarting from which it makes sense to send them using\n<a href=\"ngx_http_core_module.html#sendfile\">sendfile</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssi_module.html#ssi_min_file_chunk",
    "module": "ngx_http_ssi_module"
  },
  {
    "name": "ssi_silent_errors",
    "syntax": "ssi_silent_errors on | off;",
    "def": "ssi_silent_errors off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If enabled, suppresses the output of the“[an error occurred while processing the directive]”string if an error occurred during SSI processing.",
    "doc": "<p>\nIf enabled, suppresses the output of the\n&#x201C;`[an error occurred while processing the directive]`&#x201D;\nstring if an error occurred during SSI processing.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssi_module.html#ssi_silent_errors",
    "module": "ngx_http_ssi_module"
  },
  {
    "name": "ssi_types",
    "syntax": "ssi_types mime-type ...;",
    "def": "ssi_types text/html;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables processing of SSI commands in responses with the specified MIME typesin addition to “text/html”.The special value “*” matches any MIME type (0.8.29).",
    "doc": "<p>\nEnables processing of SSI commands in responses with the specified MIME types\nin addition to &#x201C;`text/html`&#x201D;.\nThe special value &#x201C;`*`&#x201D; matches any MIME type (0.8.29).\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssi_module.html#ssi_types",
    "module": "ngx_http_ssi_module"
  },
  {
    "name": "ssi_value_length",
    "syntax": "ssi_value_length length;",
    "def": "ssi_value_length 256;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the maximum length of parameter values in SSI commands.",
    "doc": "<p>\nSets the maximum length of parameter values in SSI commands.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_ssi_module.html#ssi_value_length",
    "module": "ngx_http_ssi_module"
  },
  {
    "name": "split_clients",
    "syntax": "split_clients \n    string\n    $variable { ... }",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Creates a variable for A/B testing, for example:",
    "doc": "<p>\nCreates a variable for A/B testing, for example:\n</p><blockquote class=\"example\"><pre>\nsplit_clients &quot;${remote_addr}AAA&quot; $variant {\n               0.5%               .one;\n               2.0%               .two;\n               *                  &quot;&quot;;\n}\n</pre></blockquote><p> \nThe value of the original string is hashed using MurmurHash2.\nIn the example given, hash values from 0 to 21474835 (0.5%)\ncorrespond to the\nvalue `&quot;.one&quot;` of the `$variant` variable,\nhash values from 21474836 to 107374180 (2%) correspond to\nthe value `&quot;.two&quot;`,\nand hash values from 107374181 to 4294967295 correspond to\nthe value `&quot;&quot;` (an empty string).\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_split_clients_module.html#split_clients",
    "module": "ngx_http_split_clients_module"
  },
  {
    "name": "spdy_chunk_size",
    "syntax": "spdy_chunk_size size;",
    "def": "spdy_chunk_size 8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the maximum size of chunksinto which the response body issliced.A too low value results in higher overhead.A too high value impairs prioritization due toHOL blocking.",
    "doc": "<p>\nSets the maximum size of chunks\ninto which the response body is\n<a href=\"http://www.chromium.org/spdy/spdy-protocol/spdy-protocol-draft2#TOC-Data-frames\">\nsliced</a>.\nA too low value results in higher overhead.\nA too high value impairs prioritization due to\n<a href=\"http://en.wikipedia.org/wiki/Head-of-line_blocking\">\nHOL blocking</a>.\n</p>",
    "notes": [],
    "since": "1.5.9",
    "link": "http/ngx_http_spdy_module.html#spdy_chunk_size",
    "module": "ngx_http_spdy_module"
  },
  {
    "name": "spdy_headers_comp",
    "syntax": "spdy_headers_comp level;",
    "def": "spdy_headers_comp 0;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Sets the header compression level of a response in a range from1 (fastest, less compression) to 9 (slowest, best compression).The special value 0 turns off the header compression.",
    "doc": "<p>\nSets the header compression *`level`* of a response in a range from\n1 (fastest, less compression) to 9 (slowest, best compression).\nThe special value 0 turns off the header compression.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_spdy_module.html#spdy_headers_comp",
    "module": "ngx_http_spdy_module"
  },
  {
    "name": "slice",
    "syntax": "slice size;",
    "def": "slice 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the size of the slice.The zero value disables splitting responses into slices.Note that a too low value may result in excessive memory usageand opening a large number of files.",
    "doc": "<p>\nSets the *`size`* of the slice.\nThe zero value disables splitting responses into slices.\nNote that a too low value may result in excessive memory usage\nand opening a large number of files.\n</p><p>\nIn order for a subrequest to return the required range,\nthe `$slice_range` variable should be\n<a href=\"ngx_http_proxy_module.html#proxy_set_header\">passed</a> to\nthe proxied server as the `Range` request header field.\nIf\n<a href=\"ngx_http_proxy_module.html#proxy_cache\">caching</a>\nis enabled, `$slice_range` should be added to the\n<a href=\"ngx_http_proxy_module.html#proxy_cache_key\">cache key</a>\nand caching of responses with 206 status code should be\n<a href=\"ngx_http_proxy_module.html#proxy_cache_valid\">enabled</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_slice_module.html#slice",
    "module": "ngx_http_slice_module"
  },
  {
    "name": "session_log_format",
    "syntax": "session_log_format \n    name\n    string ...;",
    "def": "session_log_format combined \"...\";",
    "contexts": [
      "http"
    ],
    "desc": "Specifies the output format of a log.The value of the $body_bytes_sent variable is aggregated acrossall requests in a session.The values of all other variables available for logging correspond to thefirst request in a session.",
    "doc": "<p>\nSpecifies the output format of a log.\nThe value of the `$body_bytes_sent` variable is aggregated across\nall requests in a session.\nThe values of all other variables available for logging correspond to the\nfirst request in a session.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_session_log_module.html#session_log_format",
    "module": "ngx_http_session_log_module"
  },
  {
    "name": "session_log_zone",
    "syntax": "session_log_zone \n    path\n    zone=name:size\n    [format=format]\n    [timeout=time]\n    [id=id]\n    [md5=md5]\n;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets the path to a log file and configures the shared memory zone that is usedto store currently active sessions.",
    "doc": "<p>\nSets the path to a log file and configures the shared memory zone that is used\nto store currently active sessions.\n</p><p>\nA session is considered active for as long as the time elapsed since\nthe last request in the session does not exceed the specified\n`timeout` (by default, 30 seconds).\nOnce a session is no longer active, it is written to the log.\n</p><p>\nThe `id` parameter identifies the\nsession to which a request is mapped.\nThe `id` parameter is set to the hexadecimal representation\nof an MD5 hash (for example, obtained from a cookie using variables).\nIf this parameter is not specified or does not represent the valid\nMD5 hash, nginx computes the MD5 hash from the value of\nthe `md5` parameter and creates a new session using this hash.\nBoth the `id` and `md5` parameters\ncan contain variables.\n</p><p>\nThe `format` parameter sets the custom session log\nformat configured by the <a href=\"#session_log_format\">session_log_format</a> directive.\nIf `format` is not specified, the predefined\n&#x201C;`combined`&#x201D; format is used.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_session_log_module.html#session_log_zone",
    "module": "ngx_http_session_log_module"
  },
  {
    "name": "session_log",
    "syntax": "session_log name | off;",
    "def": "session_log off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables the use of the specified session log.The special value off cancels allsession_log directives inherited from the previousconfiguration level.",
    "doc": "<p>\nEnables the use of the specified session log.\nThe special value `off` cancels all\n`session_log` directives inherited from the previous\nconfiguration level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_session_log_module.html#session_log",
    "module": "ngx_http_session_log_module"
  },
  {
    "name": "secure_link",
    "syntax": "secure_link expression;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a string with variables from which thechecksum value and lifetime of a link will be extracted.",
    "doc": "<p>\nDefines a string with variables from which the\nchecksum value and lifetime of a link will be extracted.\n</p><p>\nVariables used in an *`expression`* are usually associated\nwith a request; see <a href=\"#secure_link_md5\">example</a> below.\n</p><p>\nThe checksum value extracted from the string is compared with\nthe MD5 hash value of the expression defined by the\n<a href=\"#secure_link_md5\">secure_link_md5</a> directive.\nIf the checksums are different, the `$secure_link` variable\nis set to an empty string.\nIf the checksums are the same, the link lifetime is checked.\nIf the link has a limited lifetime and the time has expired,\nthe `$secure_link` variable is set to &#x201C;`0`&#x201D;.\nOtherwise, it is set to &#x201C;`1`&#x201D;.\nThe MD5 hash value passed in a request is encoded in\n<a href=\"https://tools.ietf.org/html/rfc4648#section-5\">base64url</a>.\n</p><p>\nIf a link has a limited lifetime, the expiration time\nis set in seconds since Epoch (Thu, 01 Jan 1970 00:00:00 GMT).\nThe value is specified in the expression after the MD5 hash,\nand is separated by a comma.\nThe expiration time passed in a request is available through\nthe `$secure_link_expires` variable for a use in\nthe <a href=\"#secure_link_md5\">secure_link_md5</a> directive.\nIf the expiration time is not specified, a link has the unlimited\nlifetime.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_secure_link_module.html#secure_link",
    "module": "ngx_http_secure_link_module"
  },
  {
    "name": "secure_link_md5",
    "syntax": "secure_link_md5 expression;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines an expression for which the MD5 hash value willbe computed and compared with the value passed in a request.",
    "doc": "<p>\nDefines an expression for which the MD5 hash value will\nbe computed and compared with the value passed in a request.\n</p><p>\nThe expression should contain the secured part of a link (resource)\nand a secret ingredient.\nIf the link has a limited lifetime,\nthe expression should also contain `$secure_link_expires`.\n</p><p>\nTo prevent unauthorized access, the expression may contain some\ninformation about the client, such as its address and browser version.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nlocation /s/ {\n    secure_link $arg_md5,$arg_expires;\n    secure_link_md5 &quot;$secure_link_expires$uri$remote_addr secret&quot;;\n\n    if ($secure_link = &quot;&quot;) {\n        return 403;\n    }\n\n    if ($secure_link = &quot;0&quot;) {\n        return 410;\n    }\n\n    ...\n}\n</pre></blockquote><p> \nThe\n&#x201C;`/s/link?md5=_e4Nc3iduzkWRm01TBBNYw&amp;expires=2147483647`&#x201D;\nlink\nrestricts access to &#x201C;`/s/link`&#x201D; for the client with the\nIP address 127.0.0.1.\nThe link also has the limited lifetime until January 19, 2038 (GMT).\n</p><p>\nOn UNIX, the *`md5`* request argument value can be obtained as:\n</p><blockquote class=\"example\"><pre>\necho -n &apos;2147483647/s/link127.0.0.1 secret&apos; | \\\n    openssl md5 -binary | openssl base64 | tr +/ -_ | tr -d =\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_secure_link_module.html#secure_link_md5",
    "module": "ngx_http_secure_link_module"
  },
  {
    "name": "secure_link_secret",
    "syntax": "secure_link_secret word;",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Defines a secret word used to check authenticityof requested links.",
    "doc": "<p>\nDefines a secret *`word`* used to check authenticity\nof requested links.\n</p><p>\nThe full URI of a requested link looks as follows:\n</p><blockquote class=\"example\"><pre>\n/<code><i>prefix</i></code>/<code><i>hash</i></code>/<code><i>link</i></code>\n</pre></blockquote><p> \nwhere *`hash`* is a hexadecimal representation of the\nMD5 hash computed for the concatenation of the link and secret word,\nand *`prefix`* is an arbitrary string without slashes.\n</p><p>\nIf the requested link passes the authenticity check,\nthe `$secure_link` variable is set to the link\nextracted from the request URI.\nOtherwise, the `$secure_link` variable\nis set to an empty string.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nlocation /p/ {\n    secure_link_secret secret;\n\n    if ($secure_link = &quot;&quot;) {\n        return 403;\n    }\n\n    rewrite ^ /secure/$secure_link;\n}\n\nlocation /secure/ {\n    internal;\n}\n</pre></blockquote><p> \nA request of &#x201C;`/p/5e814704a28d9bc1914ff19fa0c4a00a/link`&#x201D;\nwill be internally redirected to\n&#x201C;`/secure/link`&#x201D;.\n</p><p>\nOn UNIX, the hash value for this example can be obtained as:\n</p><blockquote class=\"example\"><pre>\necho -n &apos;linksecret&apos; | openssl md5 -hex\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_secure_link_module.html#secure_link_secret",
    "module": "ngx_http_secure_link_module"
  },
  {
    "name": "scgi_bind",
    "syntax": "scgi_bind \n    address\n    [transparent] |\n    off;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Makes outgoing connections to an SCGI server originatefrom the specified local IP address with an optional port (1.11.2).Parameter value can contain variables (1.3.12).The special value off (1.3.12) cancels the effectof the scgi_bind directiveinherited from the previous configuration level, which allows thesystem to auto-assign the local IP address and port.",
    "doc": "<p>\nMakes outgoing connections to an SCGI server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value `off` (1.3.12) cancels the effect\nof the `scgi_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_bind",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_buffer_size",
    "syntax": "scgi_buffer_size size;",
    "def": "scgi_buffer_size 4k|8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the size of the buffer used for reading the first partof the response received from the SCGI server.This part usually contains a small response header.By default, the buffer size is equal to one memory page.This is either 4K or 8K, depending on a platform.It can be made smaller, however.",
    "doc": "<p>\nSets the *`size`* of the buffer used for reading the first part\nof the response received from the SCGI server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_buffer_size",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_buffering",
    "syntax": "scgi_buffering on | off;",
    "def": "scgi_buffering on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables buffering of responses from the SCGI server.",
    "doc": "<p>\nEnables or disables buffering of responses from the SCGI server.\n</p><p>\nWhen buffering is enabled, nginx receives a response from the SCGI server\nas soon as possible, saving it into the buffers set by the\n<a href=\"#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"#scgi_buffers\">scgi_buffers</a> directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a <a href=\"#scgi_temp_path\">temporary file</a> on the disk.\nWriting to temporary files is controlled by the\n<a href=\"#scgi_max_temp_file_size\">scgi_max_temp_file_size</a> and\n<a href=\"#scgi_temp_file_write_size\">scgi_temp_file_write_size</a> directives.\n</p><p>\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the SCGI server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the <a href=\"#scgi_buffer_size\">scgi_buffer_size</a> directive.\n</p><p>\nBuffering can also be enabled or disabled by passing\n&#x201C;`yes`&#x201D; or &#x201C;`no`&#x201D; in the\n&#x201C;X-Accel-Buffering&#x201D; response header field.\nThis capability can be disabled using the\n<a href=\"#scgi_ignore_headers\">scgi_ignore_headers</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_buffering",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_buffers",
    "syntax": "scgi_buffers number size;",
    "def": "scgi_buffers 8 4k|8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the number and size of thebuffers used for reading a response from the SCGI server,for a single connection.By default, the buffer size is equal to one memory page.This is either 4K or 8K, depending on a platform.",
    "doc": "<p>\nSets the *`number`* and *`size`* of the\nbuffers used for reading a response from the SCGI server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_buffers",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_busy_buffers_size",
    "syntax": "scgi_busy_buffers_size size;",
    "def": "scgi_busy_buffers_size 8k|16k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When buffering of responses from the SCGIserver is enabled, limits the total size of buffers thatcan be busy sending a response to the client while the response is notyet fully read.In the meantime, the rest of the buffers can be used for reading the responseand, if needed, buffering part of the response to a temporary file.By default, size is limited by the size of two buffers set by thescgi_buffer_size and scgi_buffers directives.",
    "doc": "<p>\nWhen <a href=\"#scgi_buffering\">buffering</a> of responses from the SCGI\nserver is enabled, limits the total *`size`* of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, *`size`* is limited by the size of two buffers set by the\n<a href=\"#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"#scgi_buffers\">scgi_buffers</a> directives.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_busy_buffers_size",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache",
    "syntax": "scgi_cache zone | off;",
    "def": "scgi_cache off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a shared memory zone used for caching.The same zone can be used in several places.Parameter value can contain variables (1.7.9).The off parameter disables caching inheritedfrom the previous configuration level.",
    "doc": "<p>\nDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe `off` parameter disables caching inherited\nfrom the previous configuration level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_cache",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_background_update",
    "syntax": "scgi_cache_background_update on | off;",
    "def": "scgi_cache_background_update off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows starting a background subrequestto update an expired cache item,while a stale cached response is returned to the client.Note that it is necessary toallowthe usage of a stale cached response when it is being updated.",
    "doc": "<p>\nAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n<a href=\"#scgi_cache_use_stale_updating\">allow</a>\nthe usage of a stale cached response when it is being updated.\n</p>",
    "notes": [],
    "since": "1.11.10",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_background_update",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_bypass",
    "syntax": "scgi_cache_bypass string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the response will not be taken from a cache.If at least one value of the string parameters is not empty and is notequal to “0” then the response will not be taken from the cache:",
    "doc": "<p>\nDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to &#x201C;0&#x201D; then the response will not be taken from the cache:\n</p><blockquote class=\"example\"><pre>\nscgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nscgi_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#scgi_no_cache\">scgi_no_cache</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_cache_bypass",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_key",
    "syntax": "scgi_cache_key string;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a key for caching, for example",
    "doc": "<p>\nDefines a key for caching, for example\n</p><blockquote class=\"example\"><pre>\nscgi_cache_key localhost:9000$request_uri;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_cache_key",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_lock",
    "syntax": "scgi_cache_lock on | off;",
    "def": "scgi_cache_lock off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When enabled, only one request at a time will be allowed to populatea new cache element identified according to the scgi_cache_keydirective by passing a request to an SCGI server.Other requests of the same cache element will either waitfor a response to appear in the cache or the cache lock forthis element to be released, up to the time set by thescgi_cache_lock_timeout directive.",
    "doc": "<p>\nWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the <a href=\"#scgi_cache_key\">scgi_cache_key</a>\ndirective by passing a request to an SCGI server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n<a href=\"#scgi_cache_lock_timeout\">scgi_cache_lock_timeout</a> directive.\n</p>",
    "notes": [],
    "since": "1.1.12",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_lock",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_lock_age",
    "syntax": "scgi_cache_lock_age time;",
    "def": "scgi_cache_lock_age 5s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the last request passed to the SCGI serverfor populating a new cache elementhas not completed for the specified time,one more request may be passed to the SCGI server.",
    "doc": "<p>\nIf the last request passed to the SCGI server\nfor populating a new cache element\nhas not completed for the specified *`time`*,\none more request may be passed to the SCGI server.\n</p>",
    "notes": [],
    "since": "1.7.8",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_lock_age",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_lock_timeout",
    "syntax": "scgi_cache_lock_timeout time;",
    "def": "scgi_cache_lock_timeout 5s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a timeout for scgi_cache_lock.When the time expires,the request will be passed to the SCGI server,however, the response will not be cached.",
    "doc": "<p>\nSets a timeout for <a href=\"#scgi_cache_lock\">scgi_cache_lock</a>.\nWhen the *`time`* expires,\nthe request will be passed to the SCGI server,\nhowever, the response will not be cached.\n</p><blockquote class=\"note\">\nBefore 1.7.8, the response could be cached.\n</blockquote>",
    "notes": [
      "\nBefore 1.7.8, the response could be cached.\n"
    ],
    "since": "1.1.12",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_lock_timeout",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_max_range_offset",
    "syntax": "scgi_cache_max_range_offset number;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets an offset in bytes for byte-range requests.If the range is beyond the offset,the range request will be passed to the SCGI serverand the response will not be cached.",
    "doc": "<p>\nSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the SCGI server\nand the response will not be cached.\n</p>",
    "notes": [],
    "since": "1.11.6",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_max_range_offset",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_methods",
    "syntax": "scgi_cache_methods \n    GET |\n    HEAD |\n    POST\n    ...;",
    "def": "scgi_cache_methods GET HEAD;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the client request method is listed in this directive thenthe response will be cached.“GET” and “HEAD” methods are alwaysadded to the list, though it is recommended to specify them explicitly.See also the scgi_no_cache directive.",
    "doc": "<p>\nIf the client request method is listed in this directive then\nthe response will be cached.\n&#x201C;`GET`&#x201D; and &#x201C;`HEAD`&#x201D; methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the <a href=\"#scgi_no_cache\">scgi_no_cache</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_cache_methods",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_min_uses",
    "syntax": "scgi_cache_min_uses number;",
    "def": "scgi_cache_min_uses 1;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the number of requests after which the responsewill be cached.",
    "doc": "<p>\nSets the *`number`* of requests after which the response\nwill be cached.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_cache_min_uses",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_path",
    "syntax": "scgi_cache_path \n    path\n    [levels=levels]\n    [use_temp_path=on|off]\n    keys_zone=name:size\n    [inactive=time]\n    [max_size=size]\n    [manager_files=number]\n    [manager_sleep=time]\n    [manager_threshold=time]\n    [loader_files=number]\n    [loader_sleep=time]\n    [loader_threshold=time]\n    [purger=on|off]\n    [purger_files=number]\n    [purger_sleep=time]\n    [purger_threshold=time];",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets the path and other parameters of a cache.Cache data are stored in files.The file name in a cache is a result ofapplying the MD5 function to thecache key.The levels parameter defines hierarchy levels of a cache:from 1 to 3, each level accepts values 1 or 2.For example, in the following configuration",
    "doc": "<p>\nSets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n<a href=\"#scgi_cache_key\">cache key</a>.\nThe `levels` parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n</p><blockquote class=\"example\"><pre>\nscgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p> \nfile names in a cache will look like this:\n</p><blockquote class=\"example\"><pre>\n/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p>\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe `use_temp_path` parameter (1.7.10).\nIf this parameter is omitted or set to the value `on`,\nthe directory set by the <a href=\"#scgi_temp_path\">scgi_temp_path</a> directive\nfor the given location will be used.\nIf the value is set to `off`,\ntemporary files will be put directly in the cache directory.\n</p><p>\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose *`name`* and *`size`*\nare configured by the `keys_zone` parameter.\nOne megabyte zone can store about 8 thousand keys.\n</p><p>\nCached data that are not accessed during the time specified by the\n`inactive` parameter get removed from the cache\nregardless of their freshness.\nBy default, `inactive` is set to 10 minutes.\n</p><p>\nThe special &#x201C;cache manager&#x201D; process monitors the maximum cache size set\nby the `max_size` parameter.\nWhen this size is exceeded, it removes the least recently used data.\nThe data is removed in iterations configured by\n`manager_files`,\n`manager_threshold`, and\n`manager_sleep` parameters (1.11.5).\nDuring one iteration no more than `manager_files` items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n`manager_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `manager_sleep`\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nA minute after the start the special &#x201C;cache loader&#x201D; process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than `loader_files` items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n`loader_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `loader_sleep`\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p><dl class=\"compact\">\n\n<dt id=\"purger\">\n<code>purger</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nInstructs whether cache entries that match a\n<a href=\"#scgi_cache_purge\">wildcard key</a>\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to <code>on</code>\n(default is <code>off</code>)\nwill activate the &#x201C;cache purger&#x201D; process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\n</dd>\n\n<dt id=\"purger_files\">\n<code>purger_files</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, <code>purger_files</code> is set to 10.\n</dd>\n\n<dt id=\"purger_threshold\">\n<code>purger_threshold</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the duration of one iteration (1.7.12).\nBy default, <code>purger_threshold</code> is set to 50 milliseconds.\n</dd>\n\n<dt id=\"purger_sleep\">\n<code>purger_sleep</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets a pause between iterations (1.7.12).\nBy default, <code>purger_sleep</code> is set to 50 milliseconds.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_cache_path",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_purge",
    "syntax": "scgi_cache_purge string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the request will be considered a cachepurge request.If at least one value of the string parameters is not empty and is not equalto “0” then the cache entry with a correspondingcache key is removed.The result of successful operation is indicated by returningthe 204 (No Content) response.",
    "doc": "<p>\nDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto &#x201C;0&#x201D; then the cache entry with a corresponding\n<a href=\"#scgi_cache_key\">cache key</a> is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n</p><p>\nIf the <a href=\"#scgi_cache_key\">cache key</a> of a purge request ends\nwith an asterisk (&#x201C;`*`&#x201D;), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either <a href=\"#scgi_cache_path\">inactivity</a>,\nor processed by the <a href=\"#purger\">cache purger</a> (1.7.12),\nor a client attempts to access them.\n</p><p>\nExample configuration:\n</p><blockquote class=\"example\"><pre>\nscgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        scgi_pass        backend;\n        scgi_cache       cache_zone;\n        scgi_cache_key   $uri;\n        scgi_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><blockquote class=\"note\">\nThis functionality is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nThis functionality is available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.5.7",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_purge",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_revalidate",
    "syntax": "scgi_cache_revalidate on | off;",
    "def": "scgi_cache_revalidate off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables revalidation of expired cache items using conditional requests withthe “If-Modified-Since” and “If-None-Match”header fields.",
    "doc": "<p>\nEnables revalidation of expired cache items using conditional requests with\nthe &#x201C;If-Modified-Since&#x201D; and &#x201C;If-None-Match&#x201D;\nheader fields.\n</p>",
    "notes": [],
    "since": "1.5.7",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_revalidate",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_use_stale",
    "syntax": "scgi_cache_use_stale \n    error |\n    timeout |\n    invalid_header |\n    updating |\n    http_500 |\n    http_503 |\n    http_403 |\n    http_404 |\n    http_429 |\n    off\n    ...;",
    "def": "scgi_cache_use_stale off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines in which cases a stale cached response can be usedwhen an error occurs during communication with the SCGI server.The directive’s parameters match the parameters of thescgi_next_upstream directive.",
    "doc": "<p>\nDetermines in which cases a stale cached response can be used\nwhen an error occurs during communication with the SCGI server.\nThe directive&#x2019;s parameters match the parameters of the\n<a href=\"#scgi_next_upstream\">scgi_next_upstream</a> directive.\n</p><p>\nThe `error` parameter also permits\nusing a stale cached response if an SCGI server to process a request\ncannot be selected.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_cache_use_stale",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_cache_valid",
    "syntax": "scgi_cache_valid [code ...] time;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets caching time for different response codes.For example, the following directives",
    "doc": "<p>\nSets caching time for different response codes.\nFor example, the following directives\n</p><blockquote class=\"example\"><pre>\nscgi_cache_valid 200 302 10m;\nscgi_cache_valid 404      1m;\n</pre></blockquote><p> \nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n</p><p>\nIf only caching *`time`* is specified\n</p><blockquote class=\"example\"><pre>\nscgi_cache_valid 5m;\n</pre></blockquote><p> \nthen only 200, 301, and 302 responses are cached.\n</p><p>\nIn addition, the `any` parameter can be specified\nto cache any responses:\n</p><blockquote class=\"example\"><pre>\nscgi_cache_valid 200 302 10m;\nscgi_cache_valid 301      1h;\nscgi_cache_valid any      1m;\n</pre></blockquote><p>\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_cache_valid",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_connect_timeout",
    "syntax": "scgi_connect_timeout time;",
    "def": "scgi_connect_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a timeout for establishing a connection with an SCGI server.It should be noted that this timeout cannot usually exceed 75 seconds.",
    "doc": "<p>\nDefines a timeout for establishing a connection with an SCGI server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_connect_timeout",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_force_ranges",
    "syntax": "scgi_force_ranges on | off;",
    "def": "scgi_force_ranges off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables byte-range supportfor both cached and uncached responses from the SCGI serverregardless of the “Accept-Ranges” field in these responses.",
    "doc": "<p>\nEnables byte-range support\nfor both cached and uncached responses from the SCGI server\nregardless of the &#x201C;Accept-Ranges&#x201D; field in these responses.\n</p>",
    "notes": [],
    "since": "1.7.7",
    "link": "http/ngx_http_scgi_module.html#scgi_force_ranges",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_hide_header",
    "syntax": "scgi_hide_header field;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "By default,nginx does not pass the header fields “Status” and“X-Accel-...” from the response of an SCGIserver to a client.The scgi_hide_header directive sets additional fieldsthat will not be passed.If, on the contrary, the passing of fields needs to be permitted,the scgi_pass_header directive can be used.",
    "doc": "<p>\nBy default,\nnginx does not pass the header fields &#x201C;Status&#x201D; and\n&#x201C;X-Accel-...&#x201D; from the response of an SCGI\nserver to a client.\nThe `scgi_hide_header` directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe <a href=\"#scgi_pass_header\">scgi_pass_header</a> directive can be used.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_hide_header",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_ignore_client_abort",
    "syntax": "scgi_ignore_client_abort on | off;",
    "def": "scgi_ignore_client_abort off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether the connection with an SCGI server should beclosed when a client closes the connection without waitingfor a response.",
    "doc": "<p>\nDetermines whether the connection with an SCGI server should be\nclosed when a client closes the connection without waiting\nfor a response.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_ignore_client_abort",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_ignore_headers",
    "syntax": "scgi_ignore_headers field ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Disables processing of certain response header fields from the SCGI server.The following fields can be ignored: “X-Accel-Redirect”,“X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6),“X-Accel-Buffering” (1.1.6),“X-Accel-Charset” (1.1.6), “Expires”,“Cache-Control”, “Set-Cookie” (0.8.44),and “Vary” (1.7.7).",
    "doc": "<p>\nDisables processing of certain response header fields from the SCGI server.\nThe following fields can be ignored: &#x201C;X-Accel-Redirect&#x201D;,\n&#x201C;X-Accel-Expires&#x201D;, &#x201C;X-Accel-Limit-Rate&#x201D; (1.1.6),\n&#x201C;X-Accel-Buffering&#x201D; (1.1.6),\n&#x201C;X-Accel-Charset&#x201D; (1.1.6), &#x201C;Expires&#x201D;,\n&#x201C;Cache-Control&#x201D;, &#x201C;Set-Cookie&#x201D; (0.8.44),\nand &#x201C;Vary&#x201D; (1.7.7).\n</p><p>\nIf not disabled, processing of these header fields has the following\neffect:\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_ignore_headers",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_intercept_errors",
    "syntax": "scgi_intercept_errors on | off;",
    "def": "scgi_intercept_errors off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether an SCGI server responses with codes greater than or equalto 300 should be passed to a clientor be intercepted and redirected to nginx for processingwith the error_page directive.",
    "doc": "<p>\nDetermines whether an SCGI server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the <a href=\"ngx_http_core_module.html#error_page\">error_page</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_intercept_errors",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_limit_rate",
    "syntax": "scgi_limit_rate rate;",
    "def": "scgi_limit_rate 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the speed of reading the response from the SCGI server.The rate is specified in bytes per second.The zero value disables rate limiting.The limit is set per a request, and so if nginx simultaneously openstwo connections to the SCGI server,the overall rate will be twice as much as the specified limit.The limitation works only ifbuffering of responses from the SCGIserver is enabled.",
    "doc": "<p>\nLimits the speed of reading the response from the SCGI server.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the SCGI server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n<a href=\"#scgi_buffering\">buffering</a> of responses from the SCGI\nserver is enabled.\n</p>",
    "notes": [],
    "since": "1.7.7",
    "link": "http/ngx_http_scgi_module.html#scgi_limit_rate",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_max_temp_file_size",
    "syntax": "scgi_max_temp_file_size size;",
    "def": "scgi_max_temp_file_size 1024m;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When buffering of responses from the SCGIserver is enabled, and the whole response does not fit into the buffersset by the scgi_buffer_size and scgi_buffersdirectives, a part of the response can be saved to a temporary file.This directive sets the maximum size of the temporary file.The size of data written to the temporary file at a time is setby the scgi_temp_file_write_size directive.",
    "doc": "<p>\nWhen <a href=\"#scgi_buffering\">buffering</a> of responses from the SCGI\nserver is enabled, and the whole response does not fit into the buffers\nset by the <a href=\"#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"#scgi_buffers\">scgi_buffers</a>\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum *`size`* of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the <a href=\"#scgi_temp_file_write_size\">scgi_temp_file_write_size</a> directive.\n</p><p>\nThe zero value disables buffering of responses to temporary files.\n</p><blockquote class=\"note\">\nThis restriction does not apply to responses\nthat will be <a href=\"#scgi_cache\">cached</a>\nor <a href=\"#scgi_store\">stored</a> on disk.\n</blockquote>",
    "notes": [
      "\nThis restriction does not apply to responses\nthat will be cached\nor stored on disk.\n"
    ],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_max_temp_file_size",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_next_upstream",
    "syntax": "scgi_next_upstream \n    error |\n    timeout |\n    invalid_header |\n    http_500 |\n    http_503 |\n    http_403 |\n    http_404 |\n    http_429 |\n    non_idempotent |\n    off\n    ...;",
    "def": "scgi_next_upstream error timeout;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies in which cases a request should be passed to the next server:",
    "doc": "<p>\nSpecifies in which cases a request should be passed to the next server:\n</p><dl class=\"compact\">\n\n<dt><code>error</code></dt>\n<dd>an error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>timeout</code></dt>\n<dd>a timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>invalid_header</code></dt>\n<dd>a server returned an empty or invalid response;</dd>\n\n<dt><code>http_500</code></dt>\n<dd>a server returned a response with the code 500;</dd>\n\n<dt><code>http_503</code></dt>\n<dd>a server returned a response with the code 503;</dd>\n\n<dt><code>http_403</code></dt>\n<dd>a server returned a response with the code 403;</dd>\n\n<dt><code>http_404</code></dt>\n<dd>a server returned a response with the code 404;</dd>\n\n<dt><code>http_429</code></dt>\n<dd>a server returned a response with the code 429 (1.11.13);</dd>\n\n<dt id=\"non_idempotent\"><code>non_idempotent</code></dt>\n<dd>normally, requests with a\n<a href=\"https://tools.ietf.org/html/rfc7231#section-4.2.2\">non-idempotent</a>\nmethod\n(<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\n</dd>\n\n<dt><code>off</code></dt>\n<dd>disables passing a request to the next server.</dd>\n\n</dl><p>\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n</p><p>\nThe directive also defines what is considered an\n<a href=\"ngx_http_upstream_module.html#max_fails\">unsuccessful\nattempt</a> of communication with a server.\nThe cases of `error`, `timeout` and\n`invalid_header` are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of `http_500`, `http_503`,\nand `http_429` are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of `http_403` and `http_404`\nare never considered unsuccessful attempts.\n</p><p>\nPassing a request to the next server can be limited by\n<a href=\"#scgi_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#scgi_next_upstream_timeout\">time</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_next_upstream",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_next_upstream_timeout",
    "syntax": "scgi_next_upstream_timeout time;",
    "def": "scgi_next_upstream_timeout 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the time during which a request can be passed to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the time during which a request can be passed to the\n<a href=\"#scgi_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": "1.7.5",
    "link": "http/ngx_http_scgi_module.html#scgi_next_upstream_timeout",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_next_upstream_tries",
    "syntax": "scgi_next_upstream_tries number;",
    "def": "scgi_next_upstream_tries 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the number of possible tries for passing a request to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the number of possible tries for passing a request to the\n<a href=\"#scgi_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": "1.7.5",
    "link": "http/ngx_http_scgi_module.html#scgi_next_upstream_tries",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_no_cache",
    "syntax": "scgi_no_cache string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the response will not be saved to a cache.If at least one value of the string parameters is not empty and is notequal to “0” then the response will not be saved:",
    "doc": "<p>\nDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to &#x201C;0&#x201D; then the response will not be saved:\n</p><blockquote class=\"example\"><pre>\nscgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nscgi_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#scgi_cache_bypass\">scgi_cache_bypass</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_no_cache",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_param",
    "syntax": "scgi_param \n    parameter value\n    [if_not_empty];",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a parameter that should be passed to the SCGI server.The value can contain text, variables, and their combination.These directives are inherited from the previous level if andonly if there are noscgi_paramdirectives defined on the current level.",
    "doc": "<p>\nSets a *`parameter`* that should be passed to the SCGI server.\nThe *`value`* can contain text, variables, and their combination.\nThese directives are inherited from the previous level if and\nonly if there are no\n`scgi_param`\ndirectives defined on the current level.\n</p><p>\nStandard\n<a href=\"https://tools.ietf.org/html/rfc3875#section-4.1\">CGI\nenvironment variables</a>\nshould be provided as SCGI headers, see the `scgi_params` file\nprovided in the distribution:\n</p><blockquote class=\"example\"><pre>\nlocation / {\n    include scgi_params;\n    ...\n}\n</pre></blockquote><p>\nIf the directive is specified with `if_not_empty` (1.1.11) then\nsuch a parameter will not be passed to the server until its value is not empty:\n</p><blockquote class=\"example\"><pre>\nscgi_param HTTPS $https if_not_empty;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_param",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_pass",
    "syntax": "scgi_pass address;",
    "def": null,
    "contexts": [
      "location",
      "ifinlocation"
    ],
    "desc": "Sets the address of an SCGI server.The address can be specified as a domain name or IP address,and a port:",
    "doc": "<p>\nSets the address of an SCGI server.\nThe address can be specified as a domain name or IP address,\nand a port:\n</p><blockquote class=\"example\"><pre>\nscgi_pass localhost:9000;\n</pre></blockquote><p> \nor as a UNIX-domain socket path:\n</p><blockquote class=\"example\"><pre>\nscgi_pass unix:/tmp/scgi.socket;\n</pre></blockquote><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_http_upstream_module.html\">server group</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_pass",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_pass_header",
    "syntax": "scgi_pass_header field;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Permits passing otherwise disabled headerfields from an SCGI server to a client.",
    "doc": "<p>\nPermits passing <a href=\"#scgi_hide_header\">otherwise disabled</a> header\nfields from an SCGI server to a client.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_pass_header",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_pass_request_body",
    "syntax": "scgi_pass_request_body on | off;",
    "def": "scgi_pass_request_body on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Indicates whether the original request body is passedto the SCGI server.See also the scgi_pass_request_headers directive.",
    "doc": "<p>\nIndicates whether the original request body is passed\nto the SCGI server.\nSee also the <a href=\"#scgi_pass_request_headers\">scgi_pass_request_headers</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_pass_request_body",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_pass_request_headers",
    "syntax": "scgi_pass_request_headers on | off;",
    "def": "scgi_pass_request_headers on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Indicates whether the header fields of the original request are passedto the SCGI server.See also the scgi_pass_request_body directive.",
    "doc": "<p>\nIndicates whether the header fields of the original request are passed\nto the SCGI server.\nSee also the <a href=\"#scgi_pass_request_body\">scgi_pass_request_body</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_pass_request_headers",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_read_timeout",
    "syntax": "scgi_read_timeout time;",
    "def": "scgi_read_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a timeout for reading a response from the SCGI server.The timeout is set only between two successive read operations,not for the transmission of the whole response.If the SCGI server does not transmit anything within this time,the connection is closed.",
    "doc": "<p>\nDefines a timeout for reading a response from the SCGI server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the SCGI server does not transmit anything within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_read_timeout",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_request_buffering",
    "syntax": "scgi_request_buffering on | off;",
    "def": "scgi_request_buffering on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables buffering of a client request body.",
    "doc": "<p>\nEnables or disables buffering of a client request body.\n</p><p>\nWhen buffering is enabled, the entire request body is\n<a href=\"ngx_http_core_module.html#client_body_buffer_size\">read</a>\nfrom the client before sending the request to an SCGI server.\n</p><p>\nWhen buffering is disabled, the request body is sent to the SCGI server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n<a href=\"#scgi_next_upstream\">next server</a>\nif nginx already started sending the request body.\n</p><p>\nWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value.\n</p>",
    "notes": [],
    "since": "1.7.11",
    "link": "http/ngx_http_scgi_module.html#scgi_request_buffering",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_send_timeout",
    "syntax": "scgi_send_timeout time;",
    "def": "scgi_send_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a timeout for transmitting a request to the SCGI server.The timeout is set only between two successive write operations,not for the transmission of the whole request.If the SCGI server does not receive anything within this time,the connection is closed.",
    "doc": "<p>\nSets a timeout for transmitting a request to the SCGI server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the SCGI server does not receive anything within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_send_timeout",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_store",
    "syntax": "scgi_store \n    on |\n    off |\n    string;",
    "def": "scgi_store off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables saving of files to a disk.The on parameter saves files with pathscorresponding to the directivesalias orroot.The off parameter disables saving of files.In addition, the file name can be set explicitly using thestring with variables:",
    "doc": "<p>\nEnables saving of files to a disk.\nThe `on` parameter saves files with paths\ncorresponding to the directives\n<a href=\"ngx_http_core_module.html#alias\">alias</a> or\n<a href=\"ngx_http_core_module.html#root\">root</a>.\nThe `off` parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n*`string`* with variables:\n</p><blockquote class=\"example\"><pre>\nscgi_store /data/www$original_uri;\n</pre></blockquote><p>\nThe modification time of files is set according to the received\n&#x201C;Last-Modified&#x201D; response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the <a href=\"#scgi_temp_path\">scgi_temp_path</a>\ndirective, are put on the same file system.\n</p><p>\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n</p><blockquote class=\"example\"><pre>\nlocation /images/ {\n    root              /data/www;\n    error_page        404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    scgi_pass         backend:9000;\n    ...\n\n    scgi_store        on;\n    scgi_store_access user:rw group:rw all:r;\n    scgi_temp_path    /data/temp;\n\n    alias             /data/www/;\n}\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_store",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_store_access",
    "syntax": "scgi_store_access users:permissions ...;",
    "def": "scgi_store_access user:rw;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets access permissions for newly created files and directories, e.g.:",
    "doc": "<p>\nSets access permissions for newly created files and directories, e.g.:\n</p><blockquote class=\"example\"><pre>\nscgi_store_access user:rw group:rw all:r;\n</pre></blockquote><p>\nIf any `group` or `all` access permissions\nare specified then `user` permissions may be omitted:\n</p><blockquote class=\"example\"><pre>\nscgi_store_access group:rw all:r;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_store_access",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_temp_file_write_size",
    "syntax": "scgi_temp_file_write_size size;",
    "def": "scgi_temp_file_write_size 8k|16k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the size of data written to a temporary fileat a time, when buffering of responses from the SCGI serverto temporary files is enabled.By default, size is limited by two buffers set by thescgi_buffer_size and scgi_buffers directives.The maximum size of a temporary file is set by thescgi_max_temp_file_size directive.",
    "doc": "<p>\nLimits the *`size`* of data written to a temporary file\nat a time, when buffering of responses from the SCGI server\nto temporary files is enabled.\nBy default, *`size`* is limited by two buffers set by the\n<a href=\"#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"#scgi_buffers\">scgi_buffers</a> directives.\nThe maximum size of a temporary file is set by the\n<a href=\"#scgi_max_temp_file_size\">scgi_max_temp_file_size</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_temp_file_write_size",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "scgi_temp_path",
    "syntax": "scgi_temp_path \n    path\n    [level1\n    [level2\n    [level3]]];",
    "def": "scgi_temp_path scgi_temp;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a directory for storing temporary fileswith data received from SCGI servers.Up to three-level subdirectory hierarchy can be used underneath the specifieddirectory.For example, in the following configuration",
    "doc": "<p>\nDefines a directory for storing temporary files\nwith data received from SCGI servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\n</p><blockquote class=\"example\"><pre>\nscgi_temp_path /spool/nginx/scgi_temp 1 2;\n</pre></blockquote><p> \na temporary file might look like this:\n</p><blockquote class=\"example\"><pre>\n/spool/nginx/scgi_temp/<strong>7</strong>/<strong>45</strong>/00000123<strong>457</strong>\n</pre></blockquote><p>\nSee also the `use_temp_path` parameter of the\n<a href=\"#scgi_cache_path\">scgi_cache_path</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_scgi_module.html#scgi_temp_path",
    "module": "ngx_http_scgi_module"
  },
  {
    "name": "break",
    "syntax": "break;",
    "def": null,
    "contexts": [
      "server",
      "location",
      "if"
    ],
    "desc": "Stops processing the current set ofngx_http_rewrite_module directives.",
    "doc": "<p>\nStops processing the current set of\n`ngx_http_rewrite_module` directives.\n</p><p>\nIf a directive is specified inside the\n<a href=\"ngx_http_core_module.html#location\">location</a>,\nfurther processing of the request continues in this location.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nif ($slow) {\n    limit_rate 10k;\n    break;\n}\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_rewrite_module.html#break",
    "module": "ngx_http_rewrite_module"
  },
  {
    "name": "if",
    "syntax": "if (condition) { ... }",
    "def": null,
    "contexts": [
      "server",
      "location"
    ],
    "desc": "The specified condition is evaluated.If true, this module directives specified inside the braces areexecuted, and the request is assigned the configuration inside theif directive.Configurations inside the if directives areinherited from the previous configuration level.",
    "doc": "<p>\nThe specified *`condition`* is evaluated.\nIf true, this module directives specified inside the braces are\nexecuted, and the request is assigned the configuration inside the\n`if` directive.\nConfigurations inside the `if` directives are\ninherited from the previous configuration level.\n</p><p>\nA condition may be any of the following:\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_rewrite_module.html#if",
    "module": "ngx_http_rewrite_module"
  },
  {
    "name": "return",
    "syntax": "return code [text];return code URL;return URL;",
    "def": null,
    "contexts": [
      "server",
      "location",
      "if"
    ],
    "desc": "Stops processing and returns the specified code to a client.The non-standard code 444 closes a connection without sendinga response header.",
    "doc": "<p>\nStops processing and returns the specified *`code`* to a client.\nThe non-standard code 444 closes a connection without sending\na response header.\n</p><p>\nStarting from version 0.8.42, it is possible to specify\neither a redirect URL (for codes 301, 302, 303, and 307),\nor the response body *`text`* (for other codes).\nA response body text and redirect URL can contain variables.\nAs a special case, a redirect URL can be specified as a URI\nlocal to this server, in which case the full redirect URL\nis formed according to the request scheme (`$scheme`) and the\n<a href=\"ngx_http_core_module.html#server_name_in_redirect\">server_name_in_redirect</a> and\n<a href=\"ngx_http_core_module.html#port_in_redirect\">port_in_redirect</a> directives.\n</p><p>\nIn addition, a *`URL`* for temporary redirect with the code 302\ncan be specified as the sole parameter.\nSuch a parameter should start with the &#x201C;`http://`&#x201D;,\n&#x201C;`https://`&#x201D;, or &#x201C;`$scheme`&#x201D; string.\nA *`URL`* can contain variables.\n</p><blockquote class=\"note\">\nOnly the following codes could be returned before version 0.7.51:\n204, 400, 402&#xA0;&#x2014; 406, 408, 410, 411, 413, 416, and 500&#xA0;&#x2014; 504.\n</blockquote><blockquote class=\"note\">\nThe code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.\n</blockquote><p>\nSee also the <a href=\"ngx_http_core_module.html#error_page\">error_page</a> directive.\n</p>",
    "notes": [
      "\nOnly the following codes could be returned before version 0.7.51:\n204, 400, 402 — 406, 408, 410, 411, 413, 416, and 500 — 504.\n",
      "\nThe code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.\n"
    ],
    "since": null,
    "link": "http/ngx_http_rewrite_module.html#return",
    "module": "ngx_http_rewrite_module"
  },
  {
    "name": "rewrite",
    "syntax": "rewrite \n    regex\n    replacement\n    [flag];",
    "def": null,
    "contexts": [
      "server",
      "location",
      "if"
    ],
    "desc": "If the specified regular expression matches a request URI, URI is changedas specified in the replacement string.The rewrite directives are executed sequentiallyin order of their appearance in the configuration file.It is possible to terminate further processing of the directives using flags.If a replacement string starts with “http://”,“https://”, or “$scheme”,the processing stops and the redirect is returned to a client.",
    "doc": "<p>\nIf the specified regular expression matches a request URI, URI is changed\nas specified in the *`replacement`* string.\nThe `rewrite` directives are executed sequentially\nin order of their appearance in the configuration file.\nIt is possible to terminate further processing of the directives using flags.\nIf a replacement string starts with &#x201C;`http://`&#x201D;,\n&#x201C;`https://`&#x201D;, or &#x201C;`$scheme`&#x201D;,\nthe processing stops and the redirect is returned to a client.\n</p><p>\nAn optional *`flag`* parameter can be one of:\n</p><dl class=\"compact\">\n\n<dt><code>last</code></dt>\n<dd>\nstops processing the current set of\n<code>ngx_http_rewrite_module</code> directives and starts\na search for a new location matching the changed URI;\n</dd>\n\n<dt><code>break</code></dt>\n<dd>\nstops processing the current set of\n<code>ngx_http_rewrite_module</code> directives\nas with the <a href=\"#break\">break</a> directive;\n</dd>\n\n<dt><code>redirect</code></dt>\n<dd>\nreturns a temporary redirect with the 302 code;\nused if a replacement string does not start with\n&#x201C;<code>http://</code>&#x201D;, &#x201C;<code>https://</code>&#x201D;,\nor &#x201C;<code>$scheme</code>&#x201D;;\n</dd>\n\n<dt><code>permanent</code></dt>\n<dd>\nreturns a permanent redirect with the 301 code.\n</dd>\n\n</dl><p> \nThe full redirect URL is formed according to the\nrequest scheme (`$scheme`) and the\n<a href=\"ngx_http_core_module.html#server_name_in_redirect\">server_name_in_redirect</a> and\n<a href=\"ngx_http_core_module.html#port_in_redirect\">port_in_redirect</a> directives.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nserver {\n    ...\n    rewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 last;\n    rewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  last;\n    return  403;\n    ...\n}\n</pre></blockquote><p>\nBut if these directives are put inside the &#x201C;`/download/`&#x201D;\nlocation, the `last` flag should be replaced by\n`break`, or otherwise nginx will make 10 cycles and\nreturn the 500 error:\n</p><blockquote class=\"example\"><pre>\nlocation /download/ {\n    rewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 break;\n    rewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  break;\n    return  403;\n}\n</pre></blockquote><p>\nIf a *`replacement`* string includes the new request arguments,\nthe previous request arguments are appended after them.\nIf this is undesired, putting a question mark at the end of a replacement\nstring avoids having them appended, for example:\n</p><blockquote class=\"example\"><pre>\nrewrite ^/users/(.*)$ /show?user=$1? last;\n</pre></blockquote><p>\nIf a regular expression includes the &#x201C;`}`&#x201D;\nor &#x201C;`;`&#x201D; characters, the whole expressions should be enclosed\nin single or double quotes.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_rewrite_module.html#rewrite",
    "module": "ngx_http_rewrite_module"
  },
  {
    "name": "rewrite_log",
    "syntax": "rewrite_log on | off;",
    "def": "rewrite_log off;",
    "contexts": [
      "http",
      "server",
      "location",
      "if"
    ],
    "desc": "Enables or disables logging of ngx_http_rewrite_modulemodule directives processing resultsinto the error_log atthe notice level.",
    "doc": "<p>\nEnables or disables logging of `ngx_http_rewrite_module`\nmodule directives processing results\ninto the <a href=\"../ngx_core_module.html#error_log\">error_log</a> at\nthe `notice` level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_rewrite_module.html#rewrite_log",
    "module": "ngx_http_rewrite_module"
  },
  {
    "name": "set",
    "syntax": "set $variable value;",
    "def": null,
    "contexts": [
      "server",
      "location",
      "if"
    ],
    "desc": "Sets a value for the specified variable.The value can contain text, variables, and their combination.",
    "doc": "<p>\nSets a *`value`* for the specified *`variable`*.\nThe *`value`* can contain text, variables, and their combination.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_rewrite_module.html#set",
    "module": "ngx_http_rewrite_module"
  },
  {
    "name": "uninitialized_variable_warn",
    "syntax": "uninitialized_variable_warn on | off;",
    "def": "uninitialized_variable_warn on;",
    "contexts": [
      "http",
      "server",
      "location",
      "if"
    ],
    "desc": "Controls whether warnings about uninitialized variables are logged.",
    "doc": "<p>\nControls whether warnings about uninitialized variables are logged.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_rewrite_module.html#uninitialized_variable_warn",
    "module": "ngx_http_rewrite_module"
  },
  {
    "name": "referer_hash_bucket_size",
    "syntax": "referer_hash_bucket_size size;",
    "def": "referer_hash_bucket_size 64;",
    "contexts": [
      "server",
      "location"
    ],
    "desc": "Sets the bucket size for the valid referers hash tables.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the bucket size for the valid referers hash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": "1.0.5",
    "link": "http/ngx_http_referer_module.html#referer_hash_bucket_size",
    "module": "ngx_http_referer_module"
  },
  {
    "name": "referer_hash_max_size",
    "syntax": "referer_hash_max_size size;",
    "def": "referer_hash_max_size 2048;",
    "contexts": [
      "server",
      "location"
    ],
    "desc": "Sets the maximum size of the valid referers hash tables.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the maximum *`size`* of the valid referers hash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": "1.0.5",
    "link": "http/ngx_http_referer_module.html#referer_hash_max_size",
    "module": "ngx_http_referer_module"
  },
  {
    "name": "valid_referers",
    "syntax": "valid_referers \n    none |\n    blocked |\n    server_names |\n    string\n    ...;",
    "def": null,
    "contexts": [
      "server",
      "location"
    ],
    "desc": "Specifies the “Referer” request header field valuesthat will cause the embedded $invalid_referer variable tobe set to an empty string.Otherwise, the variable will be set to “1”.Search for a match is case-insensitive.",
    "doc": "<p>\nSpecifies the &#x201C;Referer&#x201D; request header field values\nthat will cause the embedded `$invalid_referer` variable to\nbe set to an empty string.\nOtherwise, the variable will be set to &#x201C;`1`&#x201D;.\nSearch for a match is case-insensitive.\n</p><p>\nParameters can be as follows:\n</p><dl class=\"compact\">\n\n<dt><code>none</code></dt>\n<dd>\nthe &#x201C;Referer&#x201D; field is missing in the request header;\n</dd>\n\n<dt><code>blocked</code></dt>\n<dd>\nthe &#x201C;Referer&#x201D; field is present in the request header,\nbut its value has been deleted by a firewall or proxy server;\nsuch values are strings that do not start with\n&#x201C;<code>http://</code>&#x201D; or &#x201C;<code>https://</code>&#x201D;;\n</dd>\n\n<dt><code>server_names</code></dt>\n<dd>\nthe &#x201C;Referer&#x201D; request header field contains\none of the server names;\n</dd>\n\n<dt>arbitrary string</dt>\n<dd>\ndefines a server name and an optional URI prefix.\nA server name can have an &#x201C;<code>*</code>&#x201D; at the beginning or end.\nDuring the checking, the server&#x2019;s port in the &#x201C;Referer&#x201D; field\nis ignored;\n</dd>\n\n<dt>regular expression</dt>\n<dd>\nthe first symbol should be a &#x201C;<code>~</code>&#x201D;.\nIt should be noted that an expression will be matched against\nthe text starting after the &#x201C;<code>http://</code>&#x201D;\nor &#x201C;<code>https://</code>&#x201D;.\n</dd>\n\n</dl><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nvalid_referers none blocked server_names\n               *.example.com example.* www.example.org/galleries/\n               ~\\.google\\.;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_referer_module.html#valid_referers",
    "module": "ngx_http_referer_module"
  },
  {
    "name": "set_real_ip_from",
    "syntax": "set_real_ip_from \n    address |\n    CIDR |\n    unix:;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines trusted addresses that are known to send correctreplacement addresses.If the special value unix: is specified,all UNIX-domain sockets will be trusted.",
    "doc": "<p>\nDefines trusted addresses that are known to send correct\nreplacement addresses.\nIf the special value `unix:` is specified,\nall UNIX-domain sockets will be trusted.\n</p><blockquote class=\"note\">\nIPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.\n</blockquote>",
    "notes": [
      "\nIPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.\n"
    ],
    "since": null,
    "link": "http/ngx_http_realip_module.html#set_real_ip_from",
    "module": "ngx_http_realip_module"
  },
  {
    "name": "real_ip_header",
    "syntax": "real_ip_header \n    field |\n    X-Real-IP |\n    X-Forwarded-For |\n    proxy_protocol;",
    "def": "real_ip_header X-Real-IP;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines the request header fieldwhose value will be used to replace the client address.",
    "doc": "<p>\nDefines the request header field\nwhose value will be used to replace the client address.\n</p><p>\nThe request header field value that contains an optional port\nis also used to replace the client port (1.11.0).\nThe address and port should be specified according to\n<a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>.\n</p><p>\nThe `proxy_protocol` parameter (1.5.12) changes\nthe client address to the one from the PROXY protocol header.\nThe PROXY protocol must be previously enabled by setting the\n`proxy_protocol` parameter\nin the <a href=\"ngx_http_core_module.html#listen\">listen</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_realip_module.html#real_ip_header",
    "module": "ngx_http_realip_module"
  },
  {
    "name": "real_ip_recursive",
    "syntax": "real_ip_recursive on | off;",
    "def": "real_ip_recursive off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If recursive search is disabled, the original client address thatmatches one of the trusted addresses is replaced by the lastaddress sent in the request header field defined by thereal_ip_header directive.If recursive search is enabled, the original client address thatmatches one of the trusted addresses is replaced by the lastnon-trusted address sent in the request header field.",
    "doc": "<p>\nIf recursive search is disabled, the original client address that\nmatches one of the trusted addresses is replaced by the last\naddress sent in the request header field defined by the\n<a href=\"#real_ip_header\">real_ip_header</a> directive.\nIf recursive search is enabled, the original client address that\nmatches one of the trusted addresses is replaced by the last\nnon-trusted address sent in the request header field.\n</p>",
    "notes": [],
    "since": "1.3.0",
    "link": "http/ngx_http_realip_module.html#real_ip_recursive",
    "module": "ngx_http_realip_module"
  },
  {
    "name": "random_index",
    "syntax": "random_index on | off;",
    "def": "random_index off;",
    "contexts": [
      "location"
    ],
    "desc": "Enables or disables module processing in a surrounding location.",
    "doc": "<p>\nEnables or disables module processing in a surrounding location.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_random_index_module.html#random_index",
    "module": "ngx_http_random_index_module"
  },
  {
    "name": "proxy_bind",
    "syntax": "proxy_bind \n    address\n    [transparent] |\n    off;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Makes outgoing connections to a proxied server originatefrom the specified local IP address with an optional port (1.11.2).Parameter value can contain variables (1.3.12).The special value off (1.3.12) cancels the effectof the proxy_bind directiveinherited from the previous configuration level, which allows thesystem to auto-assign the local IP address and port.",
    "doc": "<p>\nMakes outgoing connections to a proxied server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value `off` (1.3.12) cancels the effect\nof the `proxy_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n</p>",
    "notes": [],
    "since": "0.8.22",
    "link": "http/ngx_http_proxy_module.html#proxy_bind",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_buffer_size",
    "syntax": "proxy_buffer_size size;",
    "def": "proxy_buffer_size 4k|8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the size of the buffer used for reading the first partof the response received from the proxied server.This part usually contains a small response header.By default, the buffer size is equal to one memory page.This is either 4K or 8K, depending on a platform.It can be made smaller, however.",
    "doc": "<p>\nSets the *`size`* of the buffer used for reading the first part\nof the response received from the proxied server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_buffer_size",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_buffering",
    "syntax": "proxy_buffering on | off;",
    "def": "proxy_buffering on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables buffering of responses from the proxied server.",
    "doc": "<p>\nEnables or disables buffering of responses from the proxied server.\n</p><p>\nWhen buffering is enabled, nginx receives a response from the proxied server\nas soon as possible, saving it into the buffers set by the\n<a href=\"#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"#proxy_buffers\">proxy_buffers</a> directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a <a href=\"#proxy_temp_path\">temporary file</a> on the disk.\nWriting to temporary files is controlled by the\n<a href=\"#proxy_max_temp_file_size\">proxy_max_temp_file_size</a> and\n<a href=\"#proxy_temp_file_write_size\">proxy_temp_file_write_size</a> directives.\n</p><p>\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the proxied server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the <a href=\"#proxy_buffer_size\">proxy_buffer_size</a> directive.\n</p><p>\nBuffering can also be enabled or disabled by passing\n&#x201C;`yes`&#x201D; or &#x201C;`no`&#x201D; in the\n&#x201C;X-Accel-Buffering&#x201D; response header field.\nThis capability can be disabled using the\n<a href=\"#proxy_ignore_headers\">proxy_ignore_headers</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_buffering",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_buffers",
    "syntax": "proxy_buffers number size;",
    "def": "proxy_buffers 8 4k|8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the number and size of thebuffers used for reading a response from the proxied server,for a single connection.By default, the buffer size is equal to one memory page.This is either 4K or 8K, depending on a platform.",
    "doc": "<p>\nSets the *`number`* and *`size`* of the\nbuffers used for reading a response from the proxied server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_buffers",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_busy_buffers_size",
    "syntax": "proxy_busy_buffers_size size;",
    "def": "proxy_busy_buffers_size 8k|16k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When buffering of responses from the proxiedserver is enabled, limits the total size of buffers thatcan be busy sending a response to the client while the response is notyet fully read.In the meantime, the rest of the buffers can be used for reading the responseand, if needed, buffering part of the response to a temporary file.By default, size is limited by the size of two buffers set by theproxy_buffer_size and proxy_buffers directives.",
    "doc": "<p>\nWhen <a href=\"#proxy_buffering\">buffering</a> of responses from the proxied\nserver is enabled, limits the total *`size`* of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, *`size`* is limited by the size of two buffers set by the\n<a href=\"#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"#proxy_buffers\">proxy_buffers</a> directives.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_busy_buffers_size",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache",
    "syntax": "proxy_cache zone | off;",
    "def": "proxy_cache off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a shared memory zone used for caching.The same zone can be used in several places.Parameter value can contain variables (1.7.9).The off parameter disables caching inheritedfrom the previous configuration level.",
    "doc": "<p>\nDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe `off` parameter disables caching inherited\nfrom the previous configuration level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_cache",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_background_update",
    "syntax": "proxy_cache_background_update on | off;",
    "def": "proxy_cache_background_update off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows starting a background subrequestto update an expired cache item,while a stale cached response is returned to the client.Note that it is necessary toallowthe usage of a stale cached response when it is being updated.",
    "doc": "<p>\nAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n<a href=\"#proxy_cache_use_stale_updating\">allow</a>\nthe usage of a stale cached response when it is being updated.\n</p>",
    "notes": [],
    "since": "1.11.10",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_background_update",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_bypass",
    "syntax": "proxy_cache_bypass string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the response will not be taken from a cache.If at least one value of the string parameters is not empty and is notequal to “0” then the response will not be taken from the cache:",
    "doc": "<p>\nDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to &#x201C;0&#x201D; then the response will not be taken from the cache:\n</p><blockquote class=\"example\"><pre>\nproxy_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nproxy_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#proxy_no_cache\">proxy_no_cache</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_cache_bypass",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_convert_head",
    "syntax": "proxy_cache_convert_head on | off;",
    "def": "proxy_cache_convert_head on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables the conversion of the “HEAD” methodto “GET” for caching.When the conversion is disabled, thecache key should be configuredto include the $request_method.",
    "doc": "<p>\nEnables or disables the conversion of the &#x201C;`HEAD`&#x201D; method\nto &#x201C;`GET`&#x201D; for caching.\nWhen the conversion is disabled, the\n<a href=\"#proxy_cache_key\">cache key</a> should be configured\nto include the `$request_method`.\n</p>",
    "notes": [],
    "since": "1.9.7",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_convert_head",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_key",
    "syntax": "proxy_cache_key string;",
    "def": "proxy_cache_key $scheme$proxy_host$request_uri;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a key for caching, for example",
    "doc": "<p>\nDefines a key for caching, for example\n</p><blockquote class=\"example\"><pre>\nproxy_cache_key &quot;$host$request_uri $cookie_user&quot;;\n</pre></blockquote><p> \nBy default, the directive&#x2019;s value is close to the string\n</p><blockquote class=\"example\"><pre>\nproxy_cache_key $scheme$proxy_host$uri$is_args$args;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_cache_key",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_lock",
    "syntax": "proxy_cache_lock on | off;",
    "def": "proxy_cache_lock off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When enabled, only one request at a time will be allowed to populatea new cache element identified according to the proxy_cache_keydirective by passing a request to a proxied server.Other requests of the same cache element will either waitfor a response to appear in the cache or the cache lock forthis element to be released, up to the time set by theproxy_cache_lock_timeout directive.",
    "doc": "<p>\nWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the <a href=\"#proxy_cache_key\">proxy_cache_key</a>\ndirective by passing a request to a proxied server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n<a href=\"#proxy_cache_lock_timeout\">proxy_cache_lock_timeout</a> directive.\n</p>",
    "notes": [],
    "since": "1.1.12",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_lock",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_lock_age",
    "syntax": "proxy_cache_lock_age time;",
    "def": "proxy_cache_lock_age 5s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the last request passed to the proxied serverfor populating a new cache elementhas not completed for the specified time,one more request may be passed to the proxied server.",
    "doc": "<p>\nIf the last request passed to the proxied server\nfor populating a new cache element\nhas not completed for the specified *`time`*,\none more request may be passed to the proxied server.\n</p>",
    "notes": [],
    "since": "1.7.8",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_lock_age",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_lock_timeout",
    "syntax": "proxy_cache_lock_timeout time;",
    "def": "proxy_cache_lock_timeout 5s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a timeout for proxy_cache_lock.When the time expires,the request will be passed to the proxied server,however, the response will not be cached.",
    "doc": "<p>\nSets a timeout for <a href=\"#proxy_cache_lock\">proxy_cache_lock</a>.\nWhen the *`time`* expires,\nthe request will be passed to the proxied server,\nhowever, the response will not be cached.\n</p><blockquote class=\"note\">\nBefore 1.7.8, the response could be cached.\n</blockquote>",
    "notes": [
      "\nBefore 1.7.8, the response could be cached.\n"
    ],
    "since": "1.1.12",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_lock_timeout",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_max_range_offset",
    "syntax": "proxy_cache_max_range_offset number;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets an offset in bytes for byte-range requests.If the range is beyond the offset,the range request will be passed to the proxied serverand the response will not be cached.",
    "doc": "<p>\nSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the proxied server\nand the response will not be cached.\n</p>",
    "notes": [],
    "since": "1.11.6",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_max_range_offset",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_methods",
    "syntax": "proxy_cache_methods \n    GET |\n    HEAD |\n    POST\n    ...;",
    "def": "proxy_cache_methods GET HEAD;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the client request method is listed in this directive thenthe response will be cached.“GET” and “HEAD” methods are alwaysadded to the list, though it is recommended to specify them explicitly.See also the proxy_no_cache directive.",
    "doc": "<p>\nIf the client request method is listed in this directive then\nthe response will be cached.\n&#x201C;`GET`&#x201D; and &#x201C;`HEAD`&#x201D; methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the <a href=\"#proxy_no_cache\">proxy_no_cache</a> directive.\n</p>",
    "notes": [],
    "since": "0.7.59",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_methods",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_min_uses",
    "syntax": "proxy_cache_min_uses number;",
    "def": "proxy_cache_min_uses 1;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the number of requests after which the responsewill be cached.",
    "doc": "<p>\nSets the *`number`* of requests after which the response\nwill be cached.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_cache_min_uses",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_path",
    "syntax": "proxy_cache_path \n    path\n    [levels=levels]\n    [use_temp_path=on|off]\n    keys_zone=name:size\n    [inactive=time]\n    [max_size=size]\n    [manager_files=number]\n    [manager_sleep=time]\n    [manager_threshold=time]\n    [loader_files=number]\n    [loader_sleep=time]\n    [loader_threshold=time]\n    [purger=on|off]\n    [purger_files=number]\n    [purger_sleep=time]\n    [purger_threshold=time];",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets the path and other parameters of a cache.Cache data are stored in files.The file name in a cache is a result ofapplying the MD5 function to thecache key.The levels parameter defines hierarchy levels of a cache:from 1 to 3, each level accepts values 1 or 2.For example, in the following configuration",
    "doc": "<p>\nSets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n<a href=\"#proxy_cache_key\">cache key</a>.\nThe `levels` parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n</p><blockquote class=\"example\"><pre>\nproxy_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p> \nfile names in a cache will look like this:\n</p><blockquote class=\"example\"><pre>\n/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p>\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nThe directory for temporary files is set based on\nthe `use_temp_path` parameter (1.7.10).\nIf this parameter is omitted or set to the value `on`,\nthe directory set by the <a href=\"#proxy_temp_path\">proxy_temp_path</a> directive\nfor the given location will be used.\nIf the value is set to `off`,\ntemporary files will be put directly in the cache directory.\n</p><p>\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose *`name`* and *`size`*\nare configured by the `keys_zone` parameter.\nOne megabyte zone can store about 8 thousand keys.\n</p><p>\nCached data that are not accessed during the time specified by the\n`inactive` parameter get removed from the cache\nregardless of their freshness.\nBy default, `inactive` is set to 10 minutes.\n</p><p>\nThe special &#x201C;cache manager&#x201D; process monitors the maximum cache size set\nby the `max_size` parameter.\nWhen this size is exceeded, it removes the least recently used data.\nThe data is removed in iterations configured by\n`manager_files`,\n`manager_threshold`, and\n`manager_sleep` parameters (1.11.5).\nDuring one iteration no more than `manager_files` items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n`manager_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `manager_sleep`\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nA minute after the start the special &#x201C;cache loader&#x201D; process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than `loader_files` items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n`loader_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `loader_sleep`\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p><dl class=\"compact\">\n\n<dt id=\"purger\">\n<code>purger</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nInstructs whether cache entries that match a\n<a href=\"#proxy_cache_purge\">wildcard key</a>\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to <code>on</code>\n(default is <code>off</code>)\nwill activate the &#x201C;cache purger&#x201D; process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\n</dd>\n\n<dt id=\"purger_files\">\n<code>purger_files</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, <code>purger_files</code> is set to 10.\n</dd>\n\n<dt id=\"purger_threshold\">\n<code>purger_threshold</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the duration of one iteration (1.7.12).\nBy default, <code>purger_threshold</code> is set to 50 milliseconds.\n</dd>\n\n<dt id=\"purger_sleep\">\n<code>purger_sleep</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets a pause between iterations (1.7.12).\nBy default, <code>purger_sleep</code> is set to 50 milliseconds.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_cache_path",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_purge",
    "syntax": "proxy_cache_purge string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the request will be considered a cachepurge request.If at least one value of the string parameters is not empty and is not equalto “0” then the cache entry with a correspondingcache key is removed.The result of successful operation is indicated by returningthe 204 (No Content) response.",
    "doc": "<p>\nDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto &#x201C;0&#x201D; then the cache entry with a corresponding\n<a href=\"#proxy_cache_key\">cache key</a> is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n</p><p>\nIf the <a href=\"#proxy_cache_key\">cache key</a> of a purge request ends\nwith an asterisk (&#x201C;`*`&#x201D;), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either <a href=\"#proxy_cache_path\">inactivity</a>,\nor processed by the <a href=\"#purger\">cache purger</a> (1.7.12),\nor a client attempts to access them.\n</p><p>\nExample configuration:\n</p><blockquote class=\"example\"><pre>\nproxy_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        proxy_pass http://backend;\n        proxy_cache cache_zone;\n        proxy_cache_key $uri;\n        proxy_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><blockquote class=\"note\">\nThis functionality is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nThis functionality is available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.5.7",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_purge",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_revalidate",
    "syntax": "proxy_cache_revalidate on | off;",
    "def": "proxy_cache_revalidate off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables revalidation of expired cache items using conditional requests withthe “If-Modified-Since” and “If-None-Match”header fields.",
    "doc": "<p>\nEnables revalidation of expired cache items using conditional requests with\nthe &#x201C;If-Modified-Since&#x201D; and &#x201C;If-None-Match&#x201D;\nheader fields.\n</p>",
    "notes": [],
    "since": "1.5.7",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_revalidate",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_use_stale",
    "syntax": "proxy_cache_use_stale \n    error |\n    timeout |\n    invalid_header |\n    updating |\n    http_500 |\n    http_502 |\n    http_503 |\n    http_504 |\n    http_403 |\n    http_404 |\n    http_429 |\n    off\n    ...;",
    "def": "proxy_cache_use_stale off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines in which cases a stale cached response can be usedduring communication with the proxied server.The directive’s parameters match the parameters of theproxy_next_upstream directive.",
    "doc": "<p>\nDetermines in which cases a stale cached response can be used\nduring communication with the proxied server.\nThe directive&#x2019;s parameters match the parameters of the\n<a href=\"#proxy_next_upstream\">proxy_next_upstream</a> directive.\n</p><p>\nThe `error` parameter also permits\nusing a stale cached response if a proxied server to process a request\ncannot be selected.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_cache_use_stale",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cache_valid",
    "syntax": "proxy_cache_valid [code ...] time;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets caching time for different response codes.For example, the following directives",
    "doc": "<p>\nSets caching time for different response codes.\nFor example, the following directives\n</p><blockquote class=\"example\"><pre>\nproxy_cache_valid 200 302 10m;\nproxy_cache_valid 404      1m;\n</pre></blockquote><p> \nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n</p><p>\nIf only caching *`time`* is specified\n</p><blockquote class=\"example\"><pre>\nproxy_cache_valid 5m;\n</pre></blockquote><p> \nthen only 200, 301, and 302 responses are cached.\n</p><p>\nIn addition, the `any` parameter can be specified\nto cache any responses:\n</p><blockquote class=\"example\"><pre>\nproxy_cache_valid 200 302 10m;\nproxy_cache_valid 301      1h;\nproxy_cache_valid any      1m;\n</pre></blockquote><p>\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_cache_valid",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_connect_timeout",
    "syntax": "proxy_connect_timeout time;",
    "def": "proxy_connect_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a timeout for establishing a connection with a proxied server.It should be noted that this timeout cannot usually exceed 75 seconds.",
    "doc": "<p>\nDefines a timeout for establishing a connection with a proxied server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_connect_timeout",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cookie_domain",
    "syntax": "proxy_cookie_domain off;proxy_cookie_domain domain replacement;",
    "def": "proxy_cookie_domain off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a text that should be changed in the domainattribute of the “Set-Cookie” header fields of aproxied server response.Suppose a proxied server returned the “Set-Cookie”header field with the attribute“domain=localhost”.The directive",
    "doc": "<p>\nSets a text that should be changed in the `domain`\nattribute of the &#x201C;Set-Cookie&#x201D; header fields of a\nproxied server response.\nSuppose a proxied server returned the &#x201C;Set-Cookie&#x201D;\nheader field with the attribute\n&#x201C;`domain=localhost`&#x201D;.\nThe directive\n</p><blockquote class=\"example\"><pre>\nproxy_cookie_domain localhost example.org;\n</pre></blockquote><p> \nwill rewrite this attribute to\n&#x201C;`domain=example.org`&#x201D;.\n</p><p>\nA dot at the beginning of the *`domain`* and\n*`replacement`* strings and the `domain`\nattribute is ignored.\nMatching is case-insensitive.\n</p><p>\nThe *`domain`* and *`replacement`* strings\ncan contain variables:\n</p><blockquote class=\"example\"><pre>\nproxy_cookie_domain www.$host $host;\n</pre></blockquote><p>\nThe directive can also be specified using regular expressions.\nIn this case, *`domain`* should start from\nthe &#x201C;`~`&#x201D; symbol.\nA regular expression can contain named and positional captures,\nand *`replacement`* can reference them:\n</p><blockquote class=\"example\"><pre>\nproxy_cookie_domain ~\\.(?P&lt;sl_domain&gt;[-0-9a-z]+\\.[a-z]+)$ $sl_domain;\n</pre></blockquote><p>\nThere could be several `proxy_cookie_domain` directives:\n</p><blockquote class=\"example\"><pre>\nproxy_cookie_domain localhost example.org;\nproxy_cookie_domain ~\\.([a-z]+\\.[a-z]+)$ $1;\n</pre></blockquote><p>\nThe `off` parameter cancels the effect of all\n`proxy_cookie_domain` directives on the current level:\n</p><blockquote class=\"example\"><pre>\nproxy_cookie_domain off;\nproxy_cookie_domain localhost example.org;\nproxy_cookie_domain www.example.org example.org;\n</pre></blockquote>",
    "notes": [],
    "since": "1.1.15",
    "link": "http/ngx_http_proxy_module.html#proxy_cookie_domain",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_cookie_path",
    "syntax": "proxy_cookie_path off;proxy_cookie_path path replacement;",
    "def": "proxy_cookie_path off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a text that should be changed in the pathattribute of the “Set-Cookie” header fields of aproxied server response.Suppose a proxied server returned the “Set-Cookie”header field with the attribute“path=/two/some/uri/”.The directive",
    "doc": "<p>\nSets a text that should be changed in the `path`\nattribute of the &#x201C;Set-Cookie&#x201D; header fields of a\nproxied server response.\nSuppose a proxied server returned the &#x201C;Set-Cookie&#x201D;\nheader field with the attribute\n&#x201C;`path=/two/some/uri/`&#x201D;.\nThe directive\n</p><blockquote class=\"example\"><pre>\nproxy_cookie_path /two/ /;\n</pre></blockquote><p> \nwill rewrite this attribute to\n&#x201C;`path=/some/uri/`&#x201D;.\n</p><p>\nThe *`path`* and *`replacement`* strings\ncan contain variables:\n</p><blockquote class=\"example\"><pre>\nproxy_cookie_path $uri /some$uri;\n</pre></blockquote><p>\nThe directive can also be specified using regular expressions.\nIn this case, *`path`* should either start from\nthe &#x201C;`~`&#x201D; symbol for a case-sensitive matching,\nor from the &#x201C;`~*`&#x201D; symbols for case-insensitive\nmatching.\nThe regular expression can contain named and positional captures,\nand *`replacement`* can reference them:\n</p><blockquote class=\"example\"><pre>\nproxy_cookie_path ~*^/user/([^/]+) /u/$1;\n</pre></blockquote><p>\nThere could be several `proxy_cookie_path` directives:\n</p><blockquote class=\"example\"><pre>\nproxy_cookie_path /one/ /;\nproxy_cookie_path / /two/;\n</pre></blockquote><p>\nThe `off` parameter cancels the effect of all\n`proxy_cookie_path` directives on the current level:\n</p><blockquote class=\"example\"><pre>\nproxy_cookie_path off;\nproxy_cookie_path /two/ /;\nproxy_cookie_path ~*^/user/([^/]+) /u/$1;\n</pre></blockquote>",
    "notes": [],
    "since": "1.1.15",
    "link": "http/ngx_http_proxy_module.html#proxy_cookie_path",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_force_ranges",
    "syntax": "proxy_force_ranges on | off;",
    "def": "proxy_force_ranges off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables byte-range supportfor both cached and uncached responses from the proxied serverregardless of the “Accept-Ranges” field in these responses.",
    "doc": "<p>\nEnables byte-range support\nfor both cached and uncached responses from the proxied server\nregardless of the &#x201C;Accept-Ranges&#x201D; field in these responses.\n</p>",
    "notes": [],
    "since": "1.7.7",
    "link": "http/ngx_http_proxy_module.html#proxy_force_ranges",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_headers_hash_bucket_size",
    "syntax": "proxy_headers_hash_bucket_size size;",
    "def": "proxy_headers_hash_bucket_size 64;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the bucket size for hash tablesused by the proxy_hide_header and proxy_set_headerdirectives.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the bucket *`size`* for hash tables\nused by the <a href=\"#proxy_hide_header\">proxy_hide_header</a> and <a href=\"#proxy_set_header\">proxy_set_header</a>\ndirectives.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_headers_hash_bucket_size",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_headers_hash_max_size",
    "syntax": "proxy_headers_hash_max_size size;",
    "def": "proxy_headers_hash_max_size 512;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the maximum size of hash tablesused by the proxy_hide_header and proxy_set_headerdirectives.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the maximum *`size`* of hash tables\nused by the <a href=\"#proxy_hide_header\">proxy_hide_header</a> and <a href=\"#proxy_set_header\">proxy_set_header</a>\ndirectives.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_headers_hash_max_size",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_hide_header",
    "syntax": "proxy_hide_header field;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "By default,nginx does not pass the header fields “Date”,“Server”, “X-Pad”, and“X-Accel-...” from the response of a proxiedserver to a client.The proxy_hide_header directive sets additional fieldsthat will not be passed.If, on the contrary, the passing of fields needs to be permitted,the proxy_pass_header directive can be used.",
    "doc": "<p>\nBy default,\nnginx does not pass the header fields &#x201C;Date&#x201D;,\n&#x201C;Server&#x201D;, &#x201C;X-Pad&#x201D;, and\n&#x201C;X-Accel-...&#x201D; from the response of a proxied\nserver to a client.\nThe `proxy_hide_header` directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe <a href=\"#proxy_pass_header\">proxy_pass_header</a> directive can be used.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_hide_header",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_http_version",
    "syntax": "proxy_http_version 1.0 | 1.1;",
    "def": "proxy_http_version 1.0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the HTTP protocol version for proxying.By default, version 1.0 is used.Version 1.1 is recommended for use withkeepaliveconnections andNTLM authentication.",
    "doc": "<p>\nSets the HTTP protocol version for proxying.\nBy default, version 1.0 is used.\nVersion 1.1 is recommended for use with\n<a href=\"ngx_http_upstream_module.html#keepalive\">keepalive</a>\nconnections and\n<a href=\"ngx_http_upstream_module.html#ntlm\">NTLM authentication</a>.\n</p>",
    "notes": [],
    "since": "1.1.4",
    "link": "http/ngx_http_proxy_module.html#proxy_http_version",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ignore_client_abort",
    "syntax": "proxy_ignore_client_abort on | off;",
    "def": "proxy_ignore_client_abort off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether the connection with a proxied server should beclosed when a client closes the connection without waitingfor a response.",
    "doc": "<p>\nDetermines whether the connection with a proxied server should be\nclosed when a client closes the connection without waiting\nfor a response.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_ignore_client_abort",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ignore_headers",
    "syntax": "proxy_ignore_headers field ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Disables processing of certain response header fields from the proxied server.The following fields can be ignored: “X-Accel-Redirect”,“X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6),“X-Accel-Buffering” (1.1.6),“X-Accel-Charset” (1.1.6), “Expires”,“Cache-Control”, “Set-Cookie” (0.8.44),and “Vary” (1.7.7).",
    "doc": "<p>\nDisables processing of certain response header fields from the proxied server.\nThe following fields can be ignored: &#x201C;X-Accel-Redirect&#x201D;,\n&#x201C;X-Accel-Expires&#x201D;, &#x201C;X-Accel-Limit-Rate&#x201D; (1.1.6),\n&#x201C;X-Accel-Buffering&#x201D; (1.1.6),\n&#x201C;X-Accel-Charset&#x201D; (1.1.6), &#x201C;Expires&#x201D;,\n&#x201C;Cache-Control&#x201D;, &#x201C;Set-Cookie&#x201D; (0.8.44),\nand &#x201C;Vary&#x201D; (1.7.7).\n</p><p>\nIf not disabled, processing of these header fields has the following\neffect:\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_ignore_headers",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_intercept_errors",
    "syntax": "proxy_intercept_errors on | off;",
    "def": "proxy_intercept_errors off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether proxied responses with codes greater than or equalto 300 should be passed to a clientor be intercepted and redirected to nginx for processingwith the error_page directive.",
    "doc": "<p>\nDetermines whether proxied responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the <a href=\"ngx_http_core_module.html#error_page\">error_page</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_intercept_errors",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_limit_rate",
    "syntax": "proxy_limit_rate rate;",
    "def": "proxy_limit_rate 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the speed of reading the response from the proxied server.The rate is specified in bytes per second.The zero value disables rate limiting.The limit is set per a request, and so if nginx simultaneously openstwo connections to the proxied server,the overall rate will be twice as much as the specified limit.The limitation works only ifbuffering of responses from the proxiedserver is enabled.",
    "doc": "<p>\nLimits the speed of reading the response from the proxied server.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the proxied server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n<a href=\"#proxy_buffering\">buffering</a> of responses from the proxied\nserver is enabled.\n</p>",
    "notes": [],
    "since": "1.7.7",
    "link": "http/ngx_http_proxy_module.html#proxy_limit_rate",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_max_temp_file_size",
    "syntax": "proxy_max_temp_file_size size;",
    "def": "proxy_max_temp_file_size 1024m;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When buffering of responses from the proxiedserver is enabled, and the whole response does not fit into the buffersset by the proxy_buffer_size and proxy_buffersdirectives, a part of the response can be saved to a temporary file.This directive sets the maximum size of the temporary file.The size of data written to the temporary file at a time is setby the proxy_temp_file_write_size directive.",
    "doc": "<p>\nWhen <a href=\"#proxy_buffering\">buffering</a> of responses from the proxied\nserver is enabled, and the whole response does not fit into the buffers\nset by the <a href=\"#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"#proxy_buffers\">proxy_buffers</a>\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum *`size`* of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the <a href=\"#proxy_temp_file_write_size\">proxy_temp_file_write_size</a> directive.\n</p><p>\nThe zero value disables buffering of responses to temporary files.\n</p><blockquote class=\"note\">\nThis restriction does not apply to responses\nthat will be <a href=\"#proxy_cache\">cached</a>\nor <a href=\"#proxy_store\">stored</a> on disk.\n</blockquote>",
    "notes": [
      "\nThis restriction does not apply to responses\nthat will be cached\nor stored on disk.\n"
    ],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_max_temp_file_size",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_method",
    "syntax": "proxy_method method;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies the HTTP method to use in requests forwardedto the proxied server instead of the method from the client request.Parameter value can contain variables (1.11.6).",
    "doc": "<p>\nSpecifies the HTTP *`method`* to use in requests forwarded\nto the proxied server instead of the method from the client request.\nParameter value can contain variables (1.11.6).\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_method",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_next_upstream",
    "syntax": "proxy_next_upstream \n    error |\n    timeout |\n    invalid_header |\n    http_500 |\n    http_502 |\n    http_503 |\n    http_504 |\n    http_403 |\n    http_404 |\n    http_429 |\n    non_idempotent |\n    off\n    ...;",
    "def": "proxy_next_upstream error timeout;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies in which cases a request should be passed to the next server:",
    "doc": "<p>\nSpecifies in which cases a request should be passed to the next server:\n</p><dl class=\"compact\">\n\n<dt><code>error</code></dt>\n<dd>an error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>timeout</code></dt>\n<dd>a timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>invalid_header</code></dt>\n<dd>a server returned an empty or invalid response;</dd>\n\n<dt><code>http_500</code></dt>\n<dd>a server returned a response with the code 500;</dd>\n\n<dt><code>http_502</code></dt>\n<dd>a server returned a response with the code 502;</dd>\n\n<dt><code>http_503</code></dt>\n<dd>a server returned a response with the code 503;</dd>\n\n<dt><code>http_504</code></dt>\n<dd>a server returned a response with the code 504;</dd>\n\n<dt><code>http_403</code></dt>\n<dd>a server returned a response with the code 403;</dd>\n\n<dt><code>http_404</code></dt>\n<dd>a server returned a response with the code 404;</dd>\n\n<dt><code>http_429</code></dt>\n<dd>a server returned a response with the code 429 (1.11.13);</dd>\n\n<dt id=\"non_idempotent\"><code>non_idempotent</code></dt>\n<dd>normally, requests with a\n<a href=\"https://tools.ietf.org/html/rfc7231#section-4.2.2\">non-idempotent</a>\nmethod\n(<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\n</dd>\n\n<dt><code>off</code></dt>\n<dd>disables passing a request to the next server.</dd>\n\n</dl><p>\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n</p><p>\nThe directive also defines what is considered an\n<a href=\"ngx_http_upstream_module.html#max_fails\">unsuccessful\nattempt</a> of communication with a server.\nThe cases of `error`, `timeout` and\n`invalid_header` are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of `http_500`, `http_502`,\n`http_503`, `http_504`,\nand `http_429` are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of `http_403` and `http_404`\nare never considered unsuccessful attempts.\n</p><p>\nPassing a request to the next server can be limited by\n<a href=\"#proxy_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#proxy_next_upstream_timeout\">time</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_next_upstream",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_next_upstream_timeout",
    "syntax": "proxy_next_upstream_timeout time;",
    "def": "proxy_next_upstream_timeout 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the time during which a request can be passed to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the time during which a request can be passed to the\n<a href=\"#proxy_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": "1.7.5",
    "link": "http/ngx_http_proxy_module.html#proxy_next_upstream_timeout",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_next_upstream_tries",
    "syntax": "proxy_next_upstream_tries number;",
    "def": "proxy_next_upstream_tries 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the number of possible tries for passing a request to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the number of possible tries for passing a request to the\n<a href=\"#proxy_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": "1.7.5",
    "link": "http/ngx_http_proxy_module.html#proxy_next_upstream_tries",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_no_cache",
    "syntax": "proxy_no_cache string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the response will not be saved to a cache.If at least one value of the string parameters is not empty and is notequal to “0” then the response will not be saved:",
    "doc": "<p>\nDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to &#x201C;0&#x201D; then the response will not be saved:\n</p><blockquote class=\"example\"><pre>\nproxy_no_cache $cookie_nocache $arg_nocache$arg_comment;\nproxy_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#proxy_cache_bypass\">proxy_cache_bypass</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_no_cache",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_pass",
    "syntax": "proxy_pass URL;",
    "def": null,
    "contexts": [
      "location",
      "ifinlocation",
      "limit_except"
    ],
    "desc": "Sets the protocol and address of a proxied server and an optional URIto which a location should be mapped.As a protocol, “http” or “https”can be specified.The address can be specified as a domain name or IP address,and an optional port:",
    "doc": "<p>\nSets the protocol and address of a proxied server and an optional URI\nto which a location should be mapped.\nAs a protocol, &#x201C;`http`&#x201D; or &#x201C;`https`&#x201D;\ncan be specified.\nThe address can be specified as a domain name or IP address,\nand an optional port:\n</p><blockquote class=\"example\"><pre>\nproxy_pass http://localhost:8000/uri/;\n</pre></blockquote><p> \nor as a UNIX-domain socket path specified after the word\n&#x201C;`unix`&#x201D; and enclosed in colons:\n</p><blockquote class=\"example\"><pre>\nproxy_pass http://unix:/tmp/backend.socket:/uri/;\n</pre></blockquote><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_http_upstream_module.html\">server group</a>.\n</p><p>\nA request URI is passed to the server as follows:\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_pass",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_pass_header",
    "syntax": "proxy_pass_header field;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Permits passing otherwise disabled headerfields from a proxied server to a client.",
    "doc": "<p>\nPermits passing <a href=\"#proxy_hide_header\">otherwise disabled</a> header\nfields from a proxied server to a client.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_pass_header",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_pass_request_body",
    "syntax": "proxy_pass_request_body on | off;",
    "def": "proxy_pass_request_body on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Indicates whether the original request body is passedto the proxied server.",
    "doc": "<p>\nIndicates whether the original request body is passed\nto the proxied server.\n</p><blockquote class=\"example\"><pre>\nlocation /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_body off;\n    proxy_set_header Content-Length &quot;&quot;;\n\n    proxy_pass ...\n}\n</pre></blockquote><p> \nSee also the <a href=\"#proxy_set_header\">proxy_set_header</a> and\n<a href=\"#proxy_pass_request_headers\">proxy_pass_request_headers</a> directives.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_pass_request_body",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_pass_request_headers",
    "syntax": "proxy_pass_request_headers on | off;",
    "def": "proxy_pass_request_headers on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Indicates whether the header fields of the original request are passedto the proxied server.",
    "doc": "<p>\nIndicates whether the header fields of the original request are passed\nto the proxied server.\n</p><blockquote class=\"example\"><pre>\nlocation /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_headers off;\n    proxy_pass_request_body off;\n\n    proxy_pass ...\n}\n</pre></blockquote><p> \nSee also the <a href=\"#proxy_set_header\">proxy_set_header</a> and\n<a href=\"#proxy_pass_request_body\">proxy_pass_request_body</a> directives.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_pass_request_headers",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_read_timeout",
    "syntax": "proxy_read_timeout time;",
    "def": "proxy_read_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a timeout for reading a response from the proxied server.The timeout is set only between two successive read operations,not for the transmission of the whole response.If the proxied server does not transmit anything within this time,the connection is closed.",
    "doc": "<p>\nDefines a timeout for reading a response from the proxied server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the proxied server does not transmit anything within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_read_timeout",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_redirect",
    "syntax": "proxy_redirect default;proxy_redirect off;proxy_redirect redirect replacement;",
    "def": "proxy_redirect default;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the text that should be changed in the “Location”and “Refresh” header fields of a proxied server response.Suppose a proxied server returned the header field“Location: http://localhost:8000/two/some/uri/”.The directive",
    "doc": "<p>\nSets the text that should be changed in the &#x201C;Location&#x201D;\nand &#x201C;Refresh&#x201D; header fields of a proxied server response.\nSuppose a proxied server returned the header field\n&#x201C;`Location: http://localhost:8000/two/some/uri/`&#x201D;.\nThe directive\n</p><blockquote class=\"example\"><pre>\nproxy_redirect http://localhost:8000/two/ http://frontend/one/;\n</pre></blockquote><p> \nwill rewrite this string to\n&#x201C;`Location: http://frontend/one/some/uri/`&#x201D;.\n</p><p>\nA server name may be omitted in the *`replacement`* string:\n</p><blockquote class=\"example\"><pre>\nproxy_redirect http://localhost:8000/two/ /;\n</pre></blockquote><p> \nthen the primary server&#x2019;s name and port, if different from 80,\nwill be inserted.\n</p><p>\nThe default replacement specified by the `default` parameter\nuses the parameters of the\n<a href=\"ngx_http_core_module.html#location\">location</a> and\n<a href=\"#proxy_pass\">proxy_pass</a> directives.\nHence, the two configurations below are equivalent:\n</p><blockquote class=\"example\"><pre>\nlocation /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect default;\n</pre></blockquote><blockquote class=\"example\"><pre>\nlocation /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect http://upstream:port/two/ /one/;\n</pre></blockquote><p> \nThe `default` parameter is not permitted if\n<a href=\"#proxy_pass\">proxy_pass</a> is specified using variables.\n</p><p>\nA *`replacement`* string can contain variables:\n</p><blockquote class=\"example\"><pre>\nproxy_redirect http://localhost:8000/ http://$host:$server_port/;\n</pre></blockquote><p>\nA *`redirect`* can also contain (1.1.11) variables:\n</p><blockquote class=\"example\"><pre>\nproxy_redirect http://$proxy_host:8000/ /;\n</pre></blockquote><p>\nThe directive can be specified (1.1.11) using regular expressions.\nIn this case, *`redirect`* should either start with\nthe &#x201C;`~`&#x201D; symbol for a case-sensitive matching,\nor with the &#x201C;`~*`&#x201D; symbols for case-insensitive\nmatching.\nThe regular expression can contain named and positional captures,\nand *`replacement`* can reference them:\n</p><blockquote class=\"example\"><pre>\nproxy_redirect ~^(http://[^:]+):\\d+(/.+)$ $1$2;\nproxy_redirect ~*/user/([^/]+)/(.+)$      http://$1.example.com/$2;\n</pre></blockquote><p>\nThere could be several `proxy_redirect` directives:\n</p><blockquote class=\"example\"><pre>\nproxy_redirect default;\nproxy_redirect http://localhost:8000/  /;\nproxy_redirect http://www.example.com/ /;\n</pre></blockquote><p>\nThe `off` parameter cancels the effect of all\n`proxy_redirect` directives on the current level:\n</p><blockquote class=\"example\"><pre>\nproxy_redirect off;\nproxy_redirect default;\nproxy_redirect http://localhost:8000/  /;\nproxy_redirect http://www.example.com/ /;\n</pre></blockquote><p>\nUsing this directive, it is also possible to add host names to relative\nredirects issued by a proxied server:\n</p><blockquote class=\"example\"><pre>\nproxy_redirect / /;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_redirect",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_request_buffering",
    "syntax": "proxy_request_buffering on | off;",
    "def": "proxy_request_buffering on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables buffering of a client request body.",
    "doc": "<p>\nEnables or disables buffering of a client request body.\n</p><p>\nWhen buffering is enabled, the entire request body is\n<a href=\"ngx_http_core_module.html#client_body_buffer_size\">read</a>\nfrom the client before sending the request to a proxied server.\n</p><p>\nWhen buffering is disabled, the request body is sent to the proxied server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n<a href=\"#proxy_next_upstream\">next server</a>\nif nginx already started sending the request body.\n</p><p>\nWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value unless\nHTTP/1.1 is <a href=\"#proxy_http_version\">enabled</a> for proxying.\n</p>",
    "notes": [],
    "since": "1.7.11",
    "link": "http/ngx_http_proxy_module.html#proxy_request_buffering",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_send_lowat",
    "syntax": "proxy_send_lowat size;",
    "def": "proxy_send_lowat 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the directive is set to a non-zero value, nginx will try tominimize the numberof send operations on outgoing connections to a proxied server by using eitherNOTE_LOWAT flag of thekqueue method,or the SO_SNDLOWAT socket option,with the specified size.",
    "doc": "<p>\nIf the directive is set to a non-zero value, nginx will try to\nminimize the number\nof send operations on outgoing connections to a proxied server by using either\n`NOTE_LOWAT` flag of the\n<a href=\"../events.html#kqueue\">kqueue</a> method,\nor the `SO_SNDLOWAT` socket option,\nwith the specified *`size`*.\n</p><p>\nThis directive is ignored on Linux, Solaris, and Windows.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_send_lowat",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_send_timeout",
    "syntax": "proxy_send_timeout time;",
    "def": "proxy_send_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a timeout for transmitting a request to the proxied server.The timeout is set only between two successive write operations,not for the transmission of the whole request.If the proxied server does not receive anything within this time,the connection is closed.",
    "doc": "<p>\nSets a timeout for transmitting a request to the proxied server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the proxied server does not receive anything within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_send_timeout",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_set_body",
    "syntax": "proxy_set_body value;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows redefining the request body passed to the proxied server.The value can contain text, variables, and their combination.",
    "doc": "<p>\nAllows redefining the request body passed to the proxied server.\nThe *`value`* can contain text, variables, and their combination.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_set_body",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_set_header",
    "syntax": "proxy_set_header field value;",
    "def": "proxy_set_header Host $proxy_host;proxy_set_header Connection close;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows redefining or appending fields to the request headerpassed to the proxied server.The value can contain text, variables, and their combinations.These directives are inherited from the previous level if andonly if there are noproxy_set_headerdirectives defined on the current level.By default, only two fields are redefined:",
    "doc": "<p>\nAllows redefining or appending fields to the request header\n<a href=\"#proxy_pass_request_headers\">passed</a> to the proxied server.\nThe *`value`* can contain text, variables, and their combinations.\nThese directives are inherited from the previous level if and\nonly if there are no\n`proxy_set_header`\ndirectives defined on the current level.\nBy default, only two fields are redefined:\n</p><blockquote class=\"example\"><pre>\nproxy_set_header Host       $proxy_host;\nproxy_set_header Connection close;\n</pre></blockquote><p> \nIf caching is enabled, the header fields\n&#x201C;If-Modified-Since&#x201D;,\n&#x201C;If-Unmodified-Since&#x201D;,\n&#x201C;If-None-Match&#x201D;,\n&#x201C;If-Match&#x201D;,\n&#x201C;Range&#x201D;,\nand\n&#x201C;If-Range&#x201D;\nfrom the original request are not passed to the proxied server.\n</p><p>\nAn unchanged &#x201C;Host&#x201D; request header field can be passed like this:\n</p><blockquote class=\"example\"><pre>\nproxy_set_header Host       $http_host;\n</pre></blockquote><p>\nHowever, if this field is not present in a client request header then\nnothing will be passed.\nIn such a case it is better to use the `$host` variable&#xA0;- its\nvalue equals the server name in the &#x201C;Host&#x201D; request header\nfield or the primary server name if this field is not present:\n</p><blockquote class=\"example\"><pre>\nproxy_set_header Host       $host;\n</pre></blockquote><p>\nIn addition, the server name can be passed together with the port of the\nproxied server:\n</p><blockquote class=\"example\"><pre>\nproxy_set_header Host       $host:$proxy_port;\n</pre></blockquote><p>\nIf the value of a header field is an empty string then this\nfield will not be passed to a proxied server:\n</p><blockquote class=\"example\"><pre>\nproxy_set_header Accept-Encoding &quot;&quot;;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_set_header",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_certificate",
    "syntax": "proxy_ssl_certificate file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a file with the certificate in the PEM formatused for authentication to a proxied HTTPS server.",
    "doc": "<p>\nSpecifies a *`file`* with the certificate in the PEM format\nused for authentication to a proxied HTTPS server.\n</p>",
    "notes": [],
    "since": "1.7.8",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_certificate",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_certificate_key",
    "syntax": "proxy_ssl_certificate_key file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a file with the secret key in the PEM formatused for authentication to a proxied HTTPS server.",
    "doc": "<p>\nSpecifies a *`file`* with the secret key in the PEM format\nused for authentication to a proxied HTTPS server.\n</p><p>\nThe value\n`engine`:*`name`*:*`id`*\ncan be specified instead of the *`file`* (1.7.9),\nwhich loads a secret key with a specified *`id`*\nfrom the OpenSSL engine *`name`*.\n</p>",
    "notes": [],
    "since": "1.7.8",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_certificate_key",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_ciphers",
    "syntax": "proxy_ssl_ciphers ciphers;",
    "def": "proxy_ssl_ciphers DEFAULT;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies the enabled ciphers for requests to a proxied HTTPS server.The ciphers are specified in the format understood by the OpenSSL library.",
    "doc": "<p>\nSpecifies the enabled ciphers for requests to a proxied HTTPS server.\nThe ciphers are specified in the format understood by the OpenSSL library.\n</p><p>\nThe full list can be viewed using the\n&#x201C;`openssl ciphers`&#x201D; command.\n</p>",
    "notes": [],
    "since": "1.5.6",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_ciphers",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_crl",
    "syntax": "proxy_ssl_crl file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a file with revoked certificates (CRL)in the PEM format used to verifythe certificate of the proxied HTTPS server.",
    "doc": "<p>\nSpecifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to <a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied HTTPS server.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_crl",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_name",
    "syntax": "proxy_ssl_name name;",
    "def": "proxy_ssl_name $proxy_host;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows overriding the server name used toverifythe certificate of the proxied HTTPS server and to bepassed through SNIwhen establishing a connection with the proxied HTTPS server.",
    "doc": "<p>\nAllows overriding the server name used to\n<a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied HTTPS server and to be\n<a href=\"#proxy_ssl_server_name\">passed through SNI</a>\nwhen establishing a connection with the proxied HTTPS server.\n</p><p>\nBy default, the host part of the <a href=\"#proxy_pass\">proxy_pass</a> URL is used.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_name",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_password_file",
    "syntax": "proxy_ssl_password_file file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a file with passphrases forsecret keyswhere each passphrase is specified on a separate line.Passphrases are tried in turn when loading the key.",
    "doc": "<p>\nSpecifies a *`file`* with passphrases for\n<a href=\"#proxy_ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p>",
    "notes": [],
    "since": "1.7.8",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_password_file",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_server_name",
    "syntax": "proxy_ssl_server_name on | off;",
    "def": "proxy_ssl_server_name off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables passing of the server name throughTLSServer Name Indication extension (SNI, RFC 6066)when establishing a connection with the proxied HTTPS server.",
    "doc": "<p>\nEnables or disables passing of the server name through\n<a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS\nServer Name Indication extension</a> (SNI, RFC 6066)\nwhen establishing a connection with the proxied HTTPS server.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_server_name",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_session_reuse",
    "syntax": "proxy_ssl_session_reuse on | off;",
    "def": "proxy_ssl_session_reuse on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether SSL sessions can be reused when working withthe proxied server.If the errors“SSL3_GET_FINISHED:digest check failed”appear in the logs, try disabling session reuse.",
    "doc": "<p>\nDetermines whether SSL sessions can be reused when working with\nthe proxied server.\nIf the errors\n&#x201C;`SSL3_GET_FINISHED:digest check failed`&#x201D;\nappear in the logs, try disabling session reuse.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_session_reuse",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_protocols",
    "syntax": "proxy_ssl_protocols \n    [SSLv2]\n    [SSLv3]\n    [TLSv1]\n    [TLSv1.1]\n    [TLSv1.2];",
    "def": "proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables the specified protocols for requests to a proxied HTTPS server.",
    "doc": "<p>\nEnables the specified protocols for requests to a proxied HTTPS server.\n</p>",
    "notes": [],
    "since": "1.5.6",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_protocols",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_trusted_certificate",
    "syntax": "proxy_ssl_trusted_certificate file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a file with trusted CA certificates in the PEM formatused to verifythe certificate of the proxied HTTPS server.",
    "doc": "<p>\nSpecifies a *`file`* with trusted CA certificates in the PEM format\nused to <a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied HTTPS server.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_trusted_certificate",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_verify",
    "syntax": "proxy_ssl_verify on | off;",
    "def": "proxy_ssl_verify off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables verification of the proxied HTTPS server certificate.",
    "doc": "<p>\nEnables or disables verification of the proxied HTTPS server certificate.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_verify",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_ssl_verify_depth",
    "syntax": "proxy_ssl_verify_depth number;",
    "def": "proxy_ssl_verify_depth 1;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the verification depth in the proxied HTTPS server certificates chain.",
    "doc": "<p>\nSets the verification depth in the proxied HTTPS server certificates chain.\n</p>",
    "notes": [],
    "since": "1.7.0",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_verify_depth",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_store",
    "syntax": "proxy_store \n    on |\n    off |\n    string;",
    "def": "proxy_store off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables saving of files to a disk.The on parameter saves files with pathscorresponding to the directivesalias orroot.The off parameter disables saving of files.In addition, the file name can be set explicitly using thestring with variables:",
    "doc": "<p>\nEnables saving of files to a disk.\nThe `on` parameter saves files with paths\ncorresponding to the directives\n<a href=\"ngx_http_core_module.html#alias\">alias</a> or\n<a href=\"ngx_http_core_module.html#root\">root</a>.\nThe `off` parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n*`string`* with variables:\n</p><blockquote class=\"example\"><pre>\nproxy_store /data/www$original_uri;\n</pre></blockquote><p>\nThe modification time of files is set according to the received\n&#x201C;Last-Modified&#x201D; response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the <a href=\"#proxy_temp_path\">proxy_temp_path</a>\ndirective, are put on the same file system.\n</p><p>\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n</p><blockquote class=\"example\"><pre>\nlocation /images/ {\n    root               /data/www;\n    error_page         404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    proxy_pass         http://backend/;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    alias              /data/www/;\n}\n</pre></blockquote><p>\nor like this:\n</p><blockquote class=\"example\"><pre>\nlocation /images/ {\n    root               /data/www;\n    error_page         404 = @fetch;\n}\n\nlocation @fetch {\n    internal;\n\n    proxy_pass         http://backend;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    root               /data/www;\n}\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_store",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_store_access",
    "syntax": "proxy_store_access users:permissions ...;",
    "def": "proxy_store_access user:rw;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets access permissions for newly created files and directories, e.g.:",
    "doc": "<p>\nSets access permissions for newly created files and directories, e.g.:\n</p><blockquote class=\"example\"><pre>\nproxy_store_access user:rw group:rw all:r;\n</pre></blockquote><p>\nIf any `group` or `all` access permissions\nare specified then `user` permissions may be omitted:\n</p><blockquote class=\"example\"><pre>\nproxy_store_access group:rw all:r;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_store_access",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_temp_file_write_size",
    "syntax": "proxy_temp_file_write_size size;",
    "def": "proxy_temp_file_write_size 8k|16k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the size of data written to a temporary fileat a time, when buffering of responses from the proxied serverto temporary files is enabled.By default, size is limited by two buffers set by theproxy_buffer_size and proxy_buffers directives.The maximum size of a temporary file is set by theproxy_max_temp_file_size directive.",
    "doc": "<p>\nLimits the *`size`* of data written to a temporary file\nat a time, when buffering of responses from the proxied server\nto temporary files is enabled.\nBy default, *`size`* is limited by two buffers set by the\n<a href=\"#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"#proxy_buffers\">proxy_buffers</a> directives.\nThe maximum size of a temporary file is set by the\n<a href=\"#proxy_max_temp_file_size\">proxy_max_temp_file_size</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_temp_file_write_size",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "proxy_temp_path",
    "syntax": "proxy_temp_path \n    path\n    [level1\n    [level2\n    [level3]]];",
    "def": "proxy_temp_path proxy_temp;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a directory for storing temporary fileswith data received from proxied servers.Up to three-level subdirectory hierarchy can be used underneath the specifieddirectory.For example, in the following configuration",
    "doc": "<p>\nDefines a directory for storing temporary files\nwith data received from proxied servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\n</p><blockquote class=\"example\"><pre>\nproxy_temp_path /spool/nginx/proxy_temp 1 2;\n</pre></blockquote><p> \na temporary file might look like this:\n</p><blockquote class=\"example\"><pre>\n/spool/nginx/proxy_temp/<strong>7</strong>/<strong>45</strong>/00000123<strong>457</strong>\n</pre></blockquote><p>\nSee also the `use_temp_path` parameter of the\n<a href=\"#proxy_cache_path\">proxy_cache_path</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_proxy_module.html#proxy_temp_path",
    "module": "ngx_http_proxy_module"
  },
  {
    "name": "perl",
    "syntax": "perl module::function|'sub { ... }';",
    "def": null,
    "contexts": [
      "location",
      "limit_except"
    ],
    "desc": "Sets a Perl handler for the given location.",
    "doc": "<p>\nSets a Perl handler for the given location.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_perl_module.html#perl",
    "module": "ngx_http_perl_module"
  },
  {
    "name": "perl_modules",
    "syntax": "perl_modules path;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets an additional path for Perl modules.",
    "doc": "<p>\nSets an additional path for Perl modules.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_perl_module.html#perl_modules",
    "module": "ngx_http_perl_module"
  },
  {
    "name": "perl_require",
    "syntax": "perl_require module;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Defines the name of a module that will be loaded during eachreconfiguration.Several perl_require directives can be present.",
    "doc": "<p>\nDefines the name of a module that will be loaded during each\nreconfiguration.\nSeveral `perl_require` directives can be present.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_perl_module.html#perl_require",
    "module": "ngx_http_perl_module"
  },
  {
    "name": "perl_set",
    "syntax": "perl_set \n    $variable\n    module::function|'sub { ... }';",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Installs a Perl handler for the specified variable.",
    "doc": "<p>\nInstalls a Perl handler for the specified variable.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_perl_module.html#perl_set",
    "module": "ngx_http_perl_module"
  },
  {
    "name": "mp4",
    "syntax": "mp4;",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Turns on module processing in a surrounding location.",
    "doc": "<p>\nTurns on module processing in a surrounding location.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_mp4_module.html#mp4",
    "module": "ngx_http_mp4_module"
  },
  {
    "name": "mp4_buffer_size",
    "syntax": "mp4_buffer_size size;",
    "def": "mp4_buffer_size 512K;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the initial size of the buffer used forprocessing MP4 files.",
    "doc": "<p>\nSets the initial *`size`* of the buffer used for\nprocessing MP4 files.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_mp4_module.html#mp4_buffer_size",
    "module": "ngx_http_mp4_module"
  },
  {
    "name": "mp4_max_buffer_size",
    "syntax": "mp4_max_buffer_size size;",
    "def": "mp4_max_buffer_size 10M;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "During metadata processing, a larger buffer may become necessary.Its size cannot exceed the specified size,or else nginx will return the500 (Internal Server Error) server error,and log the following message:",
    "doc": "<p>\nDuring metadata processing, a larger buffer may become necessary.\nIts size cannot exceed the specified *`size`*,\nor else nginx will return the\n500 (Internal Server Error) server error,\nand log the following message:\n</p><blockquote class=\"example\"><pre>\n&quot;/some/movie/file.mp4&quot; mp4 moov atom is too large:\n12583268, you may want to increase mp4_max_buffer_size\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_mp4_module.html#mp4_max_buffer_size",
    "module": "ngx_http_mp4_module"
  },
  {
    "name": "mp4_limit_rate",
    "syntax": "mp4_limit_rate \n    on |\n    off |\n    factor;",
    "def": "mp4_limit_rate off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the rate of response transmission to a client.The rate is limited based on the average bitrate of theMP4 file served.To calculate the rate, the bitrate is multiplied by the specifiedfactor.The special value “on” corresponds to the factor of 1.1.The special value “off” disables rate limiting.The limit is set per a request, and so if a client simultaneously openstwo connections, the overall rate will be twice as muchas the specified limit.",
    "doc": "<p>\nLimits the rate of response transmission to a client.\nThe rate is limited based on the average bitrate of the\nMP4 file served.\nTo calculate the rate, the bitrate is multiplied by the specified\n*`factor`*.\nThe special value &#x201C;`on`&#x201D; corresponds to the factor of 1.1.\nThe special value &#x201C;`off`&#x201D; disables rate limiting.\nThe limit is set per a request, and so if a client simultaneously opens\ntwo connections, the overall rate will be twice as much\nas the specified limit.\n</p><blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nThis directive is available as part of our\ncommercial subscription.\n"
    ],
    "since": null,
    "link": "http/ngx_http_mp4_module.html#mp4_limit_rate",
    "module": "ngx_http_mp4_module"
  },
  {
    "name": "mp4_limit_rate_after",
    "syntax": "mp4_limit_rate_after time;",
    "def": "mp4_limit_rate_after 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the initial amount of media data (measured in playback time)after which the further transmission of the response to a clientwill be rate limited.",
    "doc": "<p>\nSets the initial amount of media data (measured in playback time)\nafter which the further transmission of the response to a client\nwill be rate limited.\n</p><blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nThis directive is available as part of our\ncommercial subscription.\n"
    ],
    "since": null,
    "link": "http/ngx_http_mp4_module.html#mp4_limit_rate_after",
    "module": "ngx_http_mp4_module"
  },
  {
    "name": "memcached_bind",
    "syntax": "memcached_bind \n    address\n    [ transparent ] |\n    off;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Makes outgoing connections to a memcached server originatefrom the specified local IP address with an optional port (1.11.2).Parameter value can contain variables (1.3.12).The special value off (1.3.12) cancels the effectof the memcached_bind directiveinherited from the previous configuration level, which allows thesystem to auto-assign the local IP address and port.",
    "doc": "<p>\nMakes outgoing connections to a memcached server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value `off` (1.3.12) cancels the effect\nof the `memcached_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n</p>",
    "notes": [],
    "since": "0.8.22",
    "link": "http/ngx_http_memcached_module.html#memcached_bind",
    "module": "ngx_http_memcached_module"
  },
  {
    "name": "memcached_buffer_size",
    "syntax": "memcached_buffer_size size;",
    "def": "memcached_buffer_size 4k|8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the size of the buffer used for reading the responsereceived from the memcached server.The response is passed to the client synchronously, as soon as it is received.",
    "doc": "<p>\nSets the *`size`* of the buffer used for reading the response\nreceived from the memcached server.\nThe response is passed to the client synchronously, as soon as it is received.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_memcached_module.html#memcached_buffer_size",
    "module": "ngx_http_memcached_module"
  },
  {
    "name": "memcached_connect_timeout",
    "syntax": "memcached_connect_timeout time;",
    "def": "memcached_connect_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a timeout for establishing a connection with a memcached server.It should be noted that this timeout cannot usually exceed 75 seconds.",
    "doc": "<p>\nDefines a timeout for establishing a connection with a memcached server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_memcached_module.html#memcached_connect_timeout",
    "module": "ngx_http_memcached_module"
  },
  {
    "name": "memcached_force_ranges",
    "syntax": "memcached_force_ranges on | off;",
    "def": "memcached_force_ranges off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables byte-range supportfor both cached and uncached responses from the memcached serverregardless of the “Accept-Ranges” field in these responses.",
    "doc": "<p>\nEnables byte-range support\nfor both cached and uncached responses from the memcached server\nregardless of the &#x201C;Accept-Ranges&#x201D; field in these responses.\n</p>",
    "notes": [],
    "since": "1.7.7",
    "link": "http/ngx_http_memcached_module.html#memcached_force_ranges",
    "module": "ngx_http_memcached_module"
  },
  {
    "name": "memcached_gzip_flag",
    "syntax": "memcached_gzip_flag flag;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables the test for the flag presence in the memcachedserver response and sets the “Content-Encoding”response header field to “gzip”if the flag is set.",
    "doc": "<p>\nEnables the test for the *`flag`* presence in the memcached\nserver response and sets the &#x201C;`Content-Encoding`&#x201D;\nresponse header field to &#x201C;`gzip`&#x201D;\nif the flag is set.\n</p>",
    "notes": [],
    "since": "1.3.6",
    "link": "http/ngx_http_memcached_module.html#memcached_gzip_flag",
    "module": "ngx_http_memcached_module"
  },
  {
    "name": "memcached_next_upstream",
    "syntax": "memcached_next_upstream \n    error |\n    timeout |\n    invalid_response |\n    not_found |\n    off\n    ...;",
    "def": "memcached_next_upstream error timeout;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies in which cases a request should be passed to the next server:",
    "doc": "<p>\nSpecifies in which cases a request should be passed to the next server:\n</p><dl class=\"compact\">\n\n<dt><code>error</code></dt>\n<dd>an error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>timeout</code></dt>\n<dd>a timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>invalid_response</code></dt>\n<dd>a server returned an empty or invalid response;</dd>\n\n<dt><code>not_found</code></dt>\n<dd>a response was not found on the server;</dd>\n\n<dt><code>off</code></dt>\n<dd>disables passing a request to the next server.</dd>\n\n</dl><p>\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n</p><p>\nThe directive also defines what is considered an\n<a href=\"ngx_http_upstream_module.html#max_fails\">unsuccessful\nattempt</a> of communication with a server.\nThe cases of `error`, `timeout` and\n`invalid_header` are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe case of `not_found`\nis never considered an unsuccessful attempt.\n</p><p>\nPassing a request to the next server can be limited by\n<a href=\"#memcached_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#memcached_next_upstream_timeout\">time</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_memcached_module.html#memcached_next_upstream",
    "module": "ngx_http_memcached_module"
  },
  {
    "name": "memcached_next_upstream_timeout",
    "syntax": "memcached_next_upstream_timeout time;",
    "def": "memcached_next_upstream_timeout 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the time during which a request can be passed to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the time during which a request can be passed to the\n<a href=\"#memcached_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": "1.7.5",
    "link": "http/ngx_http_memcached_module.html#memcached_next_upstream_timeout",
    "module": "ngx_http_memcached_module"
  },
  {
    "name": "memcached_next_upstream_tries",
    "syntax": "memcached_next_upstream_tries number;",
    "def": "memcached_next_upstream_tries 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the number of possible tries for passing a request to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the number of possible tries for passing a request to the\n<a href=\"#memcached_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": "1.7.5",
    "link": "http/ngx_http_memcached_module.html#memcached_next_upstream_tries",
    "module": "ngx_http_memcached_module"
  },
  {
    "name": "memcached_pass",
    "syntax": "memcached_pass address;",
    "def": null,
    "contexts": [
      "location",
      "ifinlocation"
    ],
    "desc": "Sets the memcached server address.The address can be specified as a domain name or IP address,and a port:",
    "doc": "<p>\nSets the memcached server address.\nThe address can be specified as a domain name or IP address,\nand a port:\n</p><blockquote class=\"example\"><pre>\nmemcached_pass localhost:11211;\n</pre></blockquote><p> \nor as a UNIX-domain socket path:\n</p><blockquote class=\"example\"><pre>\nmemcached_pass unix:/tmp/memcached.socket;\n</pre></blockquote><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_http_upstream_module.html\">server group</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_memcached_module.html#memcached_pass",
    "module": "ngx_http_memcached_module"
  },
  {
    "name": "memcached_read_timeout",
    "syntax": "memcached_read_timeout time;",
    "def": "memcached_read_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a timeout for reading a response from the memcached server.The timeout is set only between two successive read operations,not for the transmission of the whole response.If the memcached server does not transmit anything within this time,the connection is closed.",
    "doc": "<p>\nDefines a timeout for reading a response from the memcached server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the memcached server does not transmit anything within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_memcached_module.html#memcached_read_timeout",
    "module": "ngx_http_memcached_module"
  },
  {
    "name": "memcached_send_timeout",
    "syntax": "memcached_send_timeout time;",
    "def": "memcached_send_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a timeout for transmitting a request to the memcached server.The timeout is set only between two successive write operations,not for the transmission of the whole request.If the memcached server does not receive anything within this time,the connection is closed.",
    "doc": "<p>\nSets a timeout for transmitting a request to the memcached server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the memcached server does not receive anything within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_memcached_module.html#memcached_send_timeout",
    "module": "ngx_http_memcached_module"
  },
  {
    "name": "map",
    "syntax": "map \n    string\n    $variable { ... }",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Creates a new variable whose valuedepends on values of one or more of the source variablesspecified in the first parameter.",
    "doc": "<p>\nCreates a new variable whose value\ndepends on values of one or more of the source variables\nspecified in the first parameter.\n</p><blockquote class=\"note\">\nBefore version 0.9.0 only a single variable could be\nspecified in the first parameter.\n</blockquote><blockquote class=\"note\">\nSince variables are evaluated only when they are used, the mere declaration\neven of a large number of &#x201C;<code>map</code>&#x201D; variables\ndoes not add any extra costs to request processing.\n</blockquote><p>\nParameters inside the `map` block specify a mapping\nbetween source and resulting values.\n</p><p>\nSource values are specified as strings or regular expressions (0.9.6).\n</p><p>\nStrings are matched ignoring the case.\n</p><p>\nA regular expression should either start from the &#x201C;`~`&#x201D;\nsymbol for a case-sensitive matching, or from the &#x201C;`~*`&#x201D;\nsymbols (1.0.4) for case-insensitive matching.\nA regular expression can contain named and positional captures\nthat can later be used in other directives along with the\nresulting variable.\n</p><p>\nIf a source value matches one of the names of special parameters\ndescribed below, it should be prefixed with the &#x201C;`\\`&#x201D; symbol.\n</p><p>\nThe resulting value can contain text,\nvariable (0.9.0), and their combination (1.11.0).\n</p><p>\nThe following special parameters are also supported:\n</p><dl class=\"compact\">\n<dt><code>default</code> <code><i>value</i></code></dt>\n<dd>\nsets the resulting value if the source value matches none\nof the specified variants.\nWhen <code>default</code> is not specified, the default\nresulting value will be an empty string.\n</dd>\n\n<dt><code>hostnames</code></dt>\n<dd>\nindicates that source values can be hostnames with a prefix or suffix mask:\n<blockquote class=\"example\"><pre>\n*.example.com 1;\nexample.*     1;\n</pre></blockquote>\nThe following two records\n<blockquote class=\"example\"><pre>\nexample.com   1;\n*.example.com 1;\n</pre></blockquote>\ncan be combined:\n<blockquote class=\"example\"><pre>\n.example.com  1;\n</pre></blockquote>\nThis parameter should be specified before the list of values.\n</dd>\n\n<dt><code>include</code> <code><i>file</i></code></dt>\n<dd>\nincludes a file with values.\nThere can be several inclusions.\n</dd>\n\n<dt id=\"volatile\"><code>volatile</code></dt>\n<dd>\nindicates that the variable is not cacheable (1.11.7).\n</dd>\n\n</dl><p>\nIf the source value matches more than one of the specified variants,\ne.g. both a mask and a regular expression match, the first matching\nvariant will be chosen, in the following order of priority:\n</p>",
    "notes": [
      "\nBefore version 0.9.0 only a single variable could be\nspecified in the first parameter.\n",
      "\nSince variables are evaluated only when they are used, the mere declaration\neven of a large number of “map” variables\ndoes not add any extra costs to request processing.\n"
    ],
    "since": null,
    "link": "http/ngx_http_map_module.html#map",
    "module": "ngx_http_map_module"
  },
  {
    "name": "map_hash_bucket_size",
    "syntax": "map_hash_bucket_size size;",
    "def": "map_hash_bucket_size 32|64|128;",
    "contexts": [
      "http"
    ],
    "desc": "Sets the bucket size for the map variables hash tables.Default value depends on the processor’s cache line size.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the bucket size for the <a href=\"#map\">map</a> variables hash tables.\nDefault value depends on the processor&#x2019;s cache line size.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_map_module.html#map_hash_bucket_size",
    "module": "ngx_http_map_module"
  },
  {
    "name": "map_hash_max_size",
    "syntax": "map_hash_max_size size;",
    "def": "map_hash_max_size 2048;",
    "contexts": [
      "http"
    ],
    "desc": "Sets the maximum size of the map variableshash tables.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the maximum *`size`* of the <a href=\"#map\">map</a> variables\nhash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_map_module.html#map_hash_max_size",
    "module": "ngx_http_map_module"
  },
  {
    "name": "access_log",
    "syntax": "access_log \n    path\n    [format\n    [buffer=size]\n    [gzip[=level]]\n    [flush=time]\n    [if=condition]];access_log off;",
    "def": "access_log logs/access.log combined;",
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation",
      "limit_except"
    ],
    "desc": "Sets the path, format, and configuration for a buffered log write.Several logs can be specified on the same level.Logging to syslogcan be configured by specifyingthe “syslog:” prefix in the first parameter.The special value off cancels allaccess_log directives on the current level.If the format is not specified then the predefined“combined” format is used.",
    "doc": "<p>\nSets the path, format, and configuration for a buffered log write.\nSeveral logs can be specified on the same level.\nLogging to <a href=\"../syslog.html\">syslog</a>\ncan be configured by specifying\nthe &#x201C;`syslog:`&#x201D; prefix in the first parameter.\nThe special value `off` cancels all\n`access_log` directives on the current level.\nIf the format is not specified then the predefined\n&#x201C;`combined`&#x201D; format is used.\n</p><p>\nIf either the `buffer` or `gzip`\n(1.3.10, 1.2.7)\nparameter is used, writes to log will be buffered.\n</p><blockquote class=\"note\">\nThe buffer size must not exceed the size of an atomic write to a disk file.\nFor FreeBSD this size is unlimited.\n</blockquote><p>\nWhen buffering is enabled, the data will be written to the file:\n</p>",
    "notes": [
      "\nThe buffer size must not exceed the size of an atomic write to a disk file.\nFor FreeBSD this size is unlimited.\n"
    ],
    "since": null,
    "link": "http/ngx_http_log_module.html#access_log",
    "module": "ngx_http_log_module"
  },
  {
    "name": "log_format",
    "syntax": "log_format \n    name\n    [escape=default|json]\n    string ...;",
    "def": "log_format combined \"...\";",
    "contexts": [
      "http"
    ],
    "desc": "Specifies log format.",
    "doc": "<p>\nSpecifies log format.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_log_module.html#log_format",
    "module": "ngx_http_log_module"
  },
  {
    "name": "open_log_file_cache",
    "syntax": "open_log_file_cache \nmax=N\n[inactive=time]\n[min_uses=N]\n[valid=time];open_log_file_cache off;",
    "def": "open_log_file_cache off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a cache that stores the file descriptors of frequently used logswhose names contain variables.The directive has the following parameters:",
    "doc": "<p>\nDefines a cache that stores the file descriptors of frequently used logs\nwhose names contain variables.\nThe directive has the following parameters:\n</p><dl class=\"compact\">\n\n<dt><code>max</code></dt>\n<dd>\nsets the maximum number of descriptors in a cache;\nif the cache becomes full the least recently used (LRU)\ndescriptors are closed\n</dd>\n\n<dt><code>inactive</code></dt>\n<dd>\nsets the time after which the cached descriptor is closed\nif there were no access during this time;\nby default, 10 seconds\n</dd>\n\n<dt><code>min_uses</code></dt>\n<dd>\nsets the minimum number of file uses during the time\ndefined by the <code>inactive</code> parameter\nto let the descriptor stay open in a cache;\nby default, 1\n</dd>\n\n<dt><code>valid</code></dt>\n<dd>\nsets the time after which it should be checked that the file\nstill exists with the same name; by default, 60 seconds\n</dd>\n\n<dt><code>off</code></dt>\n<dd>\ndisables caching\n</dd>\n\n</dl><p>\nUsage example:\n</p><blockquote class=\"example\"><pre>\nopen_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_log_module.html#open_log_file_cache",
    "module": "ngx_http_log_module"
  },
  {
    "name": "limit_req",
    "syntax": "limit_req \n    zone=name\n    [burst=number]\n    [nodelay];",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the shared memory zoneand the maximum burst size of requests.If the requests rate exceeds the rate configured for a zone,their processing is delayed such that requests are processedat a defined rate.Excessive requests are delayed until their number exceeds themaximum burst sizein which case the request is terminated with an error503 (Service Temporarily Unavailable).By default, the maximum burst size is equal to zero.For example, the directives",
    "doc": "<p>\nSets the shared memory zone\nand the maximum burst size of requests.\nIf the requests rate exceeds the rate configured for a zone,\ntheir processing is delayed such that requests are processed\nat a defined rate.\nExcessive requests are delayed until their number exceeds the\nmaximum burst size\nin which case the request is terminated with an error\n503 (Service Temporarily Unavailable).\nBy default, the maximum burst size is equal to zero.\nFor example, the directives\n</p><blockquote class=\"example\"><pre>\nlimit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\n\nserver {\n    location /search/ {\n        limit_req zone=one burst=5;\n    }\n</pre></blockquote><p> \nallow not more than 1 request per second at an average,\nwith bursts not exceeding 5 requests.\n</p><p>\nIf delaying of excessive requests while requests are being limited is not\ndesired, the parameter `nodelay` should be used:\n</p><blockquote class=\"example\"><pre>\nlimit_req zone=one burst=5 nodelay;\n</pre></blockquote><p>\nThere could be several `limit_req` directives.\nFor example, the following configuration will limit the processing rate\nof requests coming from a single IP address and, at the same time,\nthe request processing rate by the virtual server:\n</p><blockquote class=\"example\"><pre>\nlimit_req_zone $binary_remote_addr zone=perip:10m rate=1r/s;\nlimit_req_zone $server_name zone=perserver:10m rate=10r/s;\n\nserver {\n    ...\n    limit_req zone=perip burst=5 nodelay;\n    limit_req zone=perserver burst=10;\n}\n</pre></blockquote><p>\nThese directives are inherited from the previous level if and\nonly if there are no\n`limit_req`\ndirectives on the current level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_limit_req_module.html#limit_req",
    "module": "ngx_http_limit_req_module"
  },
  {
    "name": "limit_req_log_level",
    "syntax": "limit_req_log_level \ninfo |\nnotice |\nwarn |\nerror;",
    "def": "limit_req_log_level error;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the desired logging levelfor cases when the server refuses to process requestsdue to rate exceeding,or delays request processing.Logging level for delays is one point less than for refusals; for example,if “limit_req_log_level notice” is specified,delays are logged with the info level.",
    "doc": "<p>\nSets the desired logging level\nfor cases when the server refuses to process requests\ndue to rate exceeding,\nor delays request processing.\nLogging level for delays is one point less than for refusals; for example,\nif &#x201C;`limit_req_log_level notice`&#x201D; is specified,\ndelays are logged with the `info` level.\n</p>",
    "notes": [],
    "since": "0.8.18",
    "link": "http/ngx_http_limit_req_module.html#limit_req_log_level",
    "module": "ngx_http_limit_req_module"
  },
  {
    "name": "limit_req_status",
    "syntax": "limit_req_status code;",
    "def": "limit_req_status 503;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the status code to return in response to rejected requests.",
    "doc": "<p>\nSets the status code to return in response to rejected requests.\n</p>",
    "notes": [],
    "since": "1.3.15",
    "link": "http/ngx_http_limit_req_module.html#limit_req_status",
    "module": "ngx_http_limit_req_module"
  },
  {
    "name": "limit_req_zone",
    "syntax": "limit_req_zone \n    key\n    zone=name:size\n    rate=rate;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets parameters for a shared memory zonethat will keep states for various keys.In particular, the state stores the current number of excessive requests.The key can contain text, variables, and their combination.Requests with an empty key value are not accounted.",
    "doc": "<p>\nSets parameters for a shared memory zone\nthat will keep states for various keys.\nIn particular, the state stores the current number of excessive requests.\nThe *`key`* can contain text, variables, and their combination.\nRequests with an empty key value are not accounted.\n</p><blockquote class=\"note\">\nPrior to version 1.7.6, a <code><i>key</i></code> could contain exactly one variable.\n</blockquote><p> \nUsage example:\n</p><blockquote class=\"example\"><pre>\nlimit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\n</pre></blockquote><p>\nHere, the states are kept in a 10 megabyte zone &#x201C;one&#x201D;, and an\naverage request processing rate for this zone cannot exceed\n1 request per second.\n</p><p>\nA client IP address serves as a key.\nNote that instead of `$remote_addr`, the\n`$binary_remote_addr` variable is used here.\nThe `$binary_remote_addr` variable&#x2019;s size\nis always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses.\nThe stored state always occupies\n64 bytes on 32-bit platforms and 128 bytes on 64-bit platforms.\nOne megabyte zone can keep about 16 thousand 64-byte states\nor about 8 thousand 128-byte states.\nIf the zone storage is exhausted, the server will return the\n503 (Service Temporarily Unavailable)\nerror to all further requests.\n</p><p>\nThe rate is specified in requests per second (r/s).\nIf a rate of less than one request per second is desired,\nit is specified in request per minute (r/m).\nFor example, half-request per second is 30r/m.\n</p>",
    "notes": [
      "\nPrior to version 1.7.6, a key could contain exactly one variable.\n"
    ],
    "since": null,
    "link": "http/ngx_http_limit_req_module.html#limit_req_zone",
    "module": "ngx_http_limit_req_module"
  },
  {
    "name": "limit_conn",
    "syntax": "limit_conn zone number;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the shared memory zoneand the maximum allowed number of connections for a given key value.When this limit is exceeded, the server will return the503 (Service Temporarily Unavailable)error in reply to a request.For example, the directives",
    "doc": "<p>\nSets the shared memory zone\nand the maximum allowed number of connections for a given key value.\nWhen this limit is exceeded, the server will return the\n503 (Service Temporarily Unavailable)\nerror in reply to a request.\nFor example, the directives\n</p><blockquote class=\"example\"><pre>\nlimit_conn_zone $binary_remote_addr zone=addr:10m;\n\nserver {\n    location /download/ {\n        limit_conn addr 1;\n    }\n</pre></blockquote><p> \nallow only one connection per an IP address at a time.\n</p><blockquote class=\"note\">\nIn HTTP/2 and SPDY, each concurrent request is considered a separate connection.\n</blockquote><p>\nThere could be several `limit_conn` directives.\nFor example, the following configuration will limit the number\nof connections to the server per a client IP and, at the same time,\nthe total number of connections to the virtual server:\n</p><blockquote class=\"example\"><pre>\nlimit_conn_zone $binary_remote_addr zone=perip:10m;\nlimit_conn_zone $server_name zone=perserver:10m;\n\nserver {\n    ...\n    limit_conn perip 10;\n    limit_conn perserver 100;\n}\n</pre></blockquote><p>\nThese directives are inherited from the previous level if and\nonly if there are no\n`limit_conn`\ndirectives on the current level.\n</p>",
    "notes": [
      "\nIn HTTP/2 and SPDY, each concurrent request is considered a separate connection.\n"
    ],
    "since": null,
    "link": "http/ngx_http_limit_conn_module.html#limit_conn",
    "module": "ngx_http_limit_conn_module"
  },
  {
    "name": "limit_conn_log_level",
    "syntax": "limit_conn_log_level \ninfo |\nnotice |\nwarn |\nerror;",
    "def": "limit_conn_log_level error;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the desired logging level for cases when the serverlimits the number of connections.",
    "doc": "<p>\nSets the desired logging level for cases when the server\nlimits the number of connections.\n</p>",
    "notes": [],
    "since": "0.8.18",
    "link": "http/ngx_http_limit_conn_module.html#limit_conn_log_level",
    "module": "ngx_http_limit_conn_module"
  },
  {
    "name": "limit_conn_status",
    "syntax": "limit_conn_status code;",
    "def": "limit_conn_status 503;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the status code to return in response to rejected requests.",
    "doc": "<p>\nSets the status code to return in response to rejected requests.\n</p>",
    "notes": [],
    "since": "1.3.15",
    "link": "http/ngx_http_limit_conn_module.html#limit_conn_status",
    "module": "ngx_http_limit_conn_module"
  },
  {
    "name": "limit_conn_zone",
    "syntax": "limit_conn_zone \n    key\n    zone=name:size;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets parameters for a shared memory zonethat will keep states for various keys.In particular, the state includes the current number of connections.The key can contain text, variables, and their combination.Requests with an empty key value are not accounted.",
    "doc": "<p>\nSets parameters for a shared memory zone\nthat will keep states for various keys.\nIn particular, the state includes the current number of connections.\nThe *`key`* can contain text, variables, and their combination.\nRequests with an empty key value are not accounted.\n</p><blockquote class=\"note\">\nPrior to version 1.7.6, a <code><i>key</i></code> could contain exactly one variable.\n</blockquote><p> \nUsage example:\n</p><blockquote class=\"example\"><pre>\nlimit_conn_zone $binary_remote_addr zone=addr:10m;\n</pre></blockquote><p> \nHere, a client IP address serves as a key.\nNote that instead of `$remote_addr`, the\n`$binary_remote_addr` variable is used here.\nThe `$remote_addr` variable&#x2019;s size can\nvary from 7 to 15 bytes.\nThe stored state occupies either\n32 or 64 bytes of memory on 32-bit platforms and always 64\nbytes on 64-bit platforms.\nThe `$binary_remote_addr` variable&#x2019;s size\nis always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses.\nThe stored state always occupies 32 or 64 bytes\non 32-bit platforms and 64 bytes on 64-bit platforms.\nOne megabyte zone can keep about 32 thousand 32-byte states\nor about 16 thousand 64-byte states.\nIf the zone storage is exhausted, the server will return the\n503 (Service Temporarily Unavailable)\nerror to all further requests.\n</p>",
    "notes": [
      "\nPrior to version 1.7.6, a key could contain exactly one variable.\n"
    ],
    "since": null,
    "link": "http/ngx_http_limit_conn_module.html#limit_conn_zone",
    "module": "ngx_http_limit_conn_module"
  },
  {
    "name": "limit_zone",
    "syntax": "limit_zone \n    name\n    $variable\n    size;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "This directive was made obsolete in version 1.1.8and was removed in version 1.7.6.An equivalent limit_conn_zone directivewith a changed syntax should be used instead:",
    "doc": "<p>\nThis directive was made obsolete in version 1.1.8\nand was removed in version 1.7.6.\nAn equivalent <a href=\"#limit_conn_zone\">limit_conn_zone</a> directive\nwith a changed syntax should be used instead:\n</p><blockquote class=\"note\">\n<code>limit_conn_zone</code>\n<code><i>$variable</i></code>\n<code>zone</code>=<code><i>name</i></code>:<code><i>size</i></code>;\n</blockquote>",
    "notes": [
      "\nlimit_conn_zone\n$variable\nzone=name:size;\n"
    ],
    "since": null,
    "link": "http/ngx_http_limit_conn_module.html#limit_zone",
    "module": "ngx_http_limit_conn_module"
  },
  {
    "name": "js_include",
    "syntax": "js_include file;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Specifies a file that implements location and variable handlers in nginScript.",
    "doc": "<p>\nSpecifies a file that implements location and variable handlers in nginScript.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_js_module.html#js_include",
    "module": "ngx_http_js_module"
  },
  {
    "name": "js_content",
    "syntax": "js_content function;",
    "def": null,
    "contexts": [
      "location",
      "limit_except"
    ],
    "desc": "Sets an nginScript function as a location content handler.",
    "doc": "<p>\nSets an nginScript function as a location content handler.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_js_module.html#js_content",
    "module": "ngx_http_js_module"
  },
  {
    "name": "js_set",
    "syntax": "js_set \n$variable function;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets an nginScript function for the specified variable.",
    "doc": "<p>\nSets an nginScript function for the specified variable.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_js_module.html#js_set",
    "module": "ngx_http_js_module"
  },
  {
    "name": "index",
    "syntax": "index file ...;",
    "def": "index index.html;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines files that will be used as an index.The file name can contain variables.Files are checked in the specified order.The last element of the list can be a file with an absolute path.Example:",
    "doc": "<p>\nDefines files that will be used as an index.\nThe *`file`* name can contain variables.\nFiles are checked in the specified order.\nThe last element of the list can be a file with an absolute path.\nExample:\n</p><blockquote class=\"example\"><pre>\nindex index.$geo.html index.0.html /index.html;\n</pre></blockquote><p>\nIt should be noted that using an index file causes an internal redirect,\nand the request can be processed in a different location.\nFor example, with the following configuration:\n</p><blockquote class=\"example\"><pre>\nlocation = / {\n    index index.html;\n}\n\nlocation / {\n    ...\n}\n</pre></blockquote><p> \na &#x201C;`/`&#x201D; request will actually be processed in the\nsecond location as &#x201C;`/index.html`&#x201D;.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_index_module.html#index",
    "module": "ngx_http_index_module"
  },
  {
    "name": "image_filter",
    "syntax": "image_filter off;image_filter test;image_filter size;image_filter \n    rotate\n    90 | 180 |\n    270;image_filter \n    resize\n    width\n    height;image_filter \n    crop\n    width\n    height;",
    "def": "image_filter off;",
    "contexts": [
      "location"
    ],
    "desc": "Sets the type of transformation to perform on images:",
    "doc": "<p>\nSets the type of transformation to perform on images:\n</p><dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nturns off module processing in a surrounding location.\n</dd>\n\n<dt><code>test</code></dt>\n<dd>\nensures that responses are images in either JPEG, GIF, PNG, or WebP format.\nOtherwise, the\n415 (Unsupported Media Type)\nerror is returned.\n</dd>\n\n<dt><code>size</code></dt>\n<dd>\noutputs information about images in a JSON format, e.g.:\n<blockquote class=\"example\"><pre>\n{ &quot;img&quot; : { &quot;width&quot;: 100, &quot;height&quot;: 100, &quot;type&quot;: &quot;gif&quot; } }\n</pre></blockquote>\nIn case of an error, the output is as follows:\n<blockquote class=\"example\"><pre>\n{}\n</pre></blockquote>\n</dd>\n\n<dt><code>rotate</code>\n<code>90</code>|<code>180</code>|<code>270</code>\n</dt>\n<dd>\nrotates images counter-clockwise by the specified number of degrees.\nParameter value can contain variables.\nThis mode can be used either alone or along with the\n<code>resize</code> and <code>crop</code> transformations.\n</dd>\n\n<dt><code>resize</code>\n<code><i>width</i></code>\n<code><i>height</i></code>\n</dt>\n<dd>\nproportionally reduces an image to the specified sizes.\nTo reduce by only one dimension, another dimension can be specified as\n&#x201C;<code>-</code>&#x201D;.\nIn case of an error, the server will return code\n415 (Unsupported Media Type).\nParameter values can contain variables.\nWhen used along with the <code>rotate</code> parameter,\nthe rotation happens <strong>after</strong> reduction.\n</dd>\n\n<dt><code>crop</code>\n<code><i>width</i></code>\n<code><i>height</i></code>\n</dt>\n<dd>\nproportionally reduces an image to the larger side size\nand crops extraneous edges by another side.\nTo reduce by only one dimension, another dimension can be specified as\n&#x201C;<code>-</code>&#x201D;.\nIn case of an error, the server will return code\n415 (Unsupported Media Type).\nParameter values can contain variables.\nWhen used along with the <code>rotate</code> parameter,\nthe rotation happens <strong>before</strong> reduction.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_image_filter_module.html#image_filter",
    "module": "ngx_http_image_filter_module"
  },
  {
    "name": "image_filter_buffer",
    "syntax": "image_filter_buffer size;",
    "def": "image_filter_buffer 1M;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the maximum size of the buffer used for reading images.When the size is exceeded the server returns error415 (Unsupported Media Type).",
    "doc": "<p>\nSets the maximum size of the buffer used for reading images.\nWhen the size is exceeded the server returns error\n415 (Unsupported Media Type).\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_image_filter_module.html#image_filter_buffer",
    "module": "ngx_http_image_filter_module"
  },
  {
    "name": "image_filter_interlace",
    "syntax": "image_filter_interlace on | off;",
    "def": "image_filter_interlace off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If enabled, final images will be interlaced.For JPEG, final images will be in “progressive JPEG” format.",
    "doc": "<p>\nIf enabled, final images will be interlaced.\nFor JPEG, final images will be in &#x201C;progressive JPEG&#x201D; format.\n</p>",
    "notes": [],
    "since": "1.3.15",
    "link": "http/ngx_http_image_filter_module.html#image_filter_interlace",
    "module": "ngx_http_image_filter_module"
  },
  {
    "name": "image_filter_jpeg_quality",
    "syntax": "image_filter_jpeg_quality quality;",
    "def": "image_filter_jpeg_quality 75;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the desired quality of the transformed JPEG images.Acceptable values are in the range from 1 to 100.Lesser values usually imply both lower image quality and less data to transfer.The maximum recommended value is 95.Parameter value can contain variables.",
    "doc": "<p>\nSets the desired *`quality`* of the transformed JPEG images.\nAcceptable values are in the range from 1 to 100.\nLesser values usually imply both lower image quality and less data to transfer.\nThe maximum recommended value is 95.\nParameter value can contain variables.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_image_filter_module.html#image_filter_jpeg_quality",
    "module": "ngx_http_image_filter_module"
  },
  {
    "name": "image_filter_sharpen",
    "syntax": "image_filter_sharpen percent;",
    "def": "image_filter_sharpen 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Increases sharpness of the final image.The sharpness percentage can exceed 100.The zero value disables sharpening.Parameter value can contain variables.",
    "doc": "<p>\nIncreases sharpness of the final image.\nThe sharpness percentage can exceed 100.\nThe zero value disables sharpening.\nParameter value can contain variables.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_image_filter_module.html#image_filter_sharpen",
    "module": "ngx_http_image_filter_module"
  },
  {
    "name": "image_filter_transparency",
    "syntax": "image_filter_transparency on|off;",
    "def": "image_filter_transparency on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines whether transparency should be preserved when transformingGIF images or PNG images with colors specified by a palette.The loss of transparency results in images of a better quality.The alpha channel transparency in PNG is always preserved.",
    "doc": "<p>\nDefines whether transparency should be preserved when transforming\nGIF images or PNG images with colors specified by a palette.\nThe loss of transparency results in images of a better quality.\nThe alpha channel transparency in PNG is always preserved.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_image_filter_module.html#image_filter_transparency",
    "module": "ngx_http_image_filter_module"
  },
  {
    "name": "image_filter_webp_quality",
    "syntax": "image_filter_webp_quality quality;",
    "def": "image_filter_webp_quality 80;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the desired quality of the transformed WebP images.Acceptable values are in the range from 1 to 100.Lesser values usually imply both lower image quality and less data to transfer.Parameter value can contain variables.",
    "doc": "<p>\nSets the desired *`quality`* of the transformed WebP images.\nAcceptable values are in the range from 1 to 100.\nLesser values usually imply both lower image quality and less data to transfer.\nParameter value can contain variables.\n</p>",
    "notes": [],
    "since": "1.11.6",
    "link": "http/ngx_http_image_filter_module.html#image_filter_webp_quality",
    "module": "ngx_http_image_filter_module"
  },
  {
    "name": "hls",
    "syntax": "hls;",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Turns on HLS streaming in the surrounding location.",
    "doc": "<p>\nTurns on HLS streaming in the surrounding location.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_hls_module.html#hls",
    "module": "ngx_http_hls_module"
  },
  {
    "name": "hls_buffers",
    "syntax": "hls_buffers number size;",
    "def": "hls_buffers 8 2m;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the maximum number and size of buffersthat are used for reading and writing data frames.",
    "doc": "<p>\nSets the maximum *`number`* and *`size`* of buffers\nthat are used for reading and writing data frames.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_hls_module.html#hls_buffers",
    "module": "ngx_http_hls_module"
  },
  {
    "name": "hls_forward_args",
    "syntax": "hls_forward_args on | off;",
    "def": "hls_forward_args off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Adds arguments from a playlist request to URIs of fragments.This may be useful for performing client authorization at the moment ofrequesting a fragment, or when protecting an HLS stream with thengx_http_secure_link_modulemodule.",
    "doc": "<p>\nAdds arguments from a playlist request to URIs of fragments.\nThis may be useful for performing client authorization at the moment of\nrequesting a fragment, or when protecting an HLS stream with the\n<a href=\"ngx_http_secure_link_module.html\">ngx_http_secure_link_module</a>\nmodule.\n</p><p>\nFor example, if a client requests a playlist\n`http://example.com/hls/test.mp4.m3u8?a=1&amp;b=2`,\nthe arguments `a=1` and `b=2`\nwill be added to URIs of fragments after the arguments\n`start` and `end`:\n</p><blockquote class=\"example\"><pre>\n#EXTM3U\n#EXT-X-VERSION:3\n#EXT-X-TARGETDURATION:15\n#EXT-X-PLAYLIST-TYPE:VOD\n\n#EXTINF:9.333,\ntest.mp4.ts?start=0.000&amp;end=9.333&amp;a=1&amp;b=2\n#EXTINF:7.167,\ntest.mp4.ts?start=9.333&amp;end=16.500&amp;a=1&amp;b=2\n#EXTINF:5.416,\ntest.mp4.ts?start=16.500&amp;end=21.916&amp;a=1&amp;b=2\n#EXTINF:5.500,\ntest.mp4.ts?start=21.916&amp;end=27.416&amp;a=1&amp;b=2\n#EXTINF:15.167,\ntest.mp4.ts?start=27.416&amp;end=42.583&amp;a=1&amp;b=2\n#EXTINF:9.626,\ntest.mp4.ts?start=42.583&amp;end=52.209&amp;a=1&amp;b=2\n\n#EXT-X-ENDLIST\n</pre></blockquote><p>\nIf an HLS stream is protected with the\n<a href=\"ngx_http_secure_link_module.html\">ngx_http_secure_link_module</a>\nmodule, `$uri` should not be used in the\n<a href=\"ngx_http_secure_link_module.html#secure_link_md5\">secure_link_md5</a>\nexpression because this will cause errors when requesting the fragments.\n<a href=\"ngx_http_map_module.html#map\">Base URI</a> should be used\ninstead of `$uri`\n(`$hls_uri` in the example):\n</p><blockquote class=\"example\"><pre>\nhttp {\n    ...\n\n    map $uri $hls_uri {\n        ~^(?&lt;base_uri&gt;.*).m3u8$ $base_uri;\n        ~^(?&lt;base_uri&gt;.*).ts$   $base_uri;\n        default                 $uri;\n    }\n\n    server {\n        ...\n\n        location /hls {\n            hls;\n            hls_forward_args on;\n\n            alias /var/videos;\n\n            secure_link $arg_md5,$arg_expires;\n            secure_link_md5 &quot;$secure_link_expires$hls_uri$remote_addr secret&quot;;\n\n            if ($secure_link = &quot;&quot;) {\n                return 403;\n            }\n\n            if ($secure_link = &quot;0&quot;) {\n                return 410;\n            }\n        }\n    }\n}\n</pre></blockquote>",
    "notes": [],
    "since": "1.5.12",
    "link": "http/ngx_http_hls_module.html#hls_forward_args",
    "module": "ngx_http_hls_module"
  },
  {
    "name": "hls_fragment",
    "syntax": "hls_fragment time;",
    "def": "hls_fragment 5s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines the default fragment length for playlist URIs requested without the“len” argument.",
    "doc": "<p>\nDefines the default fragment length for playlist URIs requested without the\n&#x201C;`len`&#x201D; argument.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_hls_module.html#hls_fragment",
    "module": "ngx_http_hls_module"
  },
  {
    "name": "hls_mp4_buffer_size",
    "syntax": "hls_mp4_buffer_size size;",
    "def": "hls_mp4_buffer_size 512k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the initial size of the buffer used forprocessing MP4 and MOV files.",
    "doc": "<p>\nSets the initial *`size`* of the buffer used for\nprocessing MP4 and MOV files.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_hls_module.html#hls_mp4_buffer_size",
    "module": "ngx_http_hls_module"
  },
  {
    "name": "hls_mp4_max_buffer_size",
    "syntax": "hls_mp4_max_buffer_size size;",
    "def": "hls_mp4_max_buffer_size 10m;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "During metadata processing, a larger buffer may become necessary.Its size cannot exceed the specified size,or else nginx will return the server error500 (Internal Server Error),and log the following message:",
    "doc": "<p>\nDuring metadata processing, a larger buffer may become necessary.\nIts size cannot exceed the specified *`size`*,\nor else nginx will return the server error\n500 (Internal Server Error),\nand log the following message:\n</p><blockquote class=\"example\"><pre>\n&quot;/some/movie/file.mp4&quot; mp4 moov atom is too large:\n12583268, you may want to increase hls_mp4_max_buffer_size\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_hls_module.html#hls_mp4_max_buffer_size",
    "module": "ngx_http_hls_module"
  },
  {
    "name": "add_header",
    "syntax": "add_header \nname value\n[always];",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Adds the specified field to a response header provided thatthe response code equals 200, 201, 204, 206, 301, 302, 303, 304, or 307.A value can contain variables.",
    "doc": "<p>\nAdds the specified field to a response header provided that\nthe response code equals 200, 201, 204, 206, 301, 302, 303, 304, or 307.\nA value can contain variables.\n</p><p>\nThere could be several `add_header` directives.\nThese directives are inherited from the previous level if and\nonly if there are no\n`add_header`\ndirectives defined on the current level.\n</p><p>\nIf the `always` parameter is specified (1.7.5),\nthe header field will be added regardless of the response code.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_headers_module.html#add_header",
    "module": "ngx_http_headers_module"
  },
  {
    "name": "expires",
    "syntax": "expires [modified] time;expires \n    epoch |\n    max |\n    off;",
    "def": "expires off;",
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Enables or disables adding or modifying the “Expires”and “Cache-Control” response header fields provided thatthe response code equals 200, 201, 204, 206, 301, 302, 303, 304, or 307.The parameter can be a positive or negativetime.",
    "doc": "<p>\nEnables or disables adding or modifying the &#x201C;Expires&#x201D;\nand &#x201C;Cache-Control&#x201D; response header fields provided that\nthe response code equals 200, 201, 204, 206, 301, 302, 303, 304, or 307.\nThe parameter can be a positive or negative\n<a href=\"../syntax.html\">time</a>.\n</p><p>\nThe time in the &#x201C;Expires&#x201D; field is computed as a sum of the\ncurrent time and *`time`* specified in the directive.\nIf the `modified` parameter is used (0.7.0, 0.6.32)\nthen the time is computed as a sum of the file&#x2019;s modification time and\nthe *`time`* specified in the directive.\n</p><p>\nIn addition, it is possible to specify a time of day using\nthe &#x201C;`@`&#x201D; prefix (0.7.9, 0.6.34):\n</p><blockquote class=\"example\"><pre>\nexpires @15h30m;\n</pre></blockquote><p>\nThe `epoch` parameter corresponds to the absolute time\n&#x201C;`Thu, 01 Jan 1970 00:00:01 GMT`&#x201D;.\nThe contents of the &#x201C;Cache-Control&#x201D; field depends\non the sign of the specified time:\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_headers_module.html#expires",
    "module": "ngx_http_headers_module"
  },
  {
    "name": "gzip_static",
    "syntax": "gzip_static \n    on |\n    off |\n    always;",
    "def": "gzip_static off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables (“on”) or disables (“off”)checking the existence of precompressed files.The following directives are also taken into account:gzip_http_version,gzip_proxied,gzip_disable,and gzip_vary.",
    "doc": "<p>\nEnables (&#x201C;`on`&#x201D;) or disables (&#x201C;`off`&#x201D;)\nchecking the existence of precompressed files.\nThe following directives are also taken into account:\n<a href=\"ngx_http_gzip_module.html#gzip_http_version\">gzip_http_version</a>,\n<a href=\"ngx_http_gzip_module.html#gzip_proxied\">gzip_proxied</a>,\n<a href=\"ngx_http_gzip_module.html#gzip_disable\">gzip_disable</a>,\nand <a href=\"ngx_http_gzip_module.html#gzip_vary\">gzip_vary</a>.\n</p><p>\nWith the &#x201C;`always`&#x201D; value (1.3.6), gzipped file is used\nin all cases, without checking if the client supports it.\nIt is useful if there are no uncompressed files on the disk anyway\nor the <a href=\"ngx_http_gunzip_module.html\">ngx_http_gunzip_module</a>\nis used.\n</p><p>\nThe files can be compressed using the `gzip` command,\nor any other compatible one.\nIt is recommended that the modification date and time of original and\ncompressed files be the same.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_gzip_static_module.html#gzip_static",
    "module": "ngx_http_gzip_static_module"
  },
  {
    "name": "gzip",
    "syntax": "gzip on | off;",
    "def": "gzip off;",
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Enables or disables gzipping of responses.",
    "doc": "<p>\nEnables or disables gzipping of responses.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_gzip_module.html#gzip",
    "module": "ngx_http_gzip_module"
  },
  {
    "name": "gzip_buffers",
    "syntax": "gzip_buffers number size;",
    "def": "gzip_buffers 32 4k|16 8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the number and size of buffersused to compress a response.By default, the buffer size is equal to one memory page.This is either 4K or 8K, depending on a platform.",
    "doc": "<p>\nSets the *`number`* and *`size`* of buffers\nused to compress a response.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p><blockquote class=\"note\">\nUntil version 0.7.28, four 4K or 8K buffers were used by default.\n</blockquote>",
    "notes": [
      "\nUntil version 0.7.28, four 4K or 8K buffers were used by default.\n"
    ],
    "since": null,
    "link": "http/ngx_http_gzip_module.html#gzip_buffers",
    "module": "ngx_http_gzip_module"
  },
  {
    "name": "gzip_comp_level",
    "syntax": "gzip_comp_level level;",
    "def": "gzip_comp_level 1;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a gzip compression level of a response.Acceptable values are in the range from 1 to 9.",
    "doc": "<p>\nSets a gzip compression *`level`* of a response.\nAcceptable values are in the range from 1 to 9.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_gzip_module.html#gzip_comp_level",
    "module": "ngx_http_gzip_module"
  },
  {
    "name": "gzip_disable",
    "syntax": "gzip_disable regex ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Disables gzipping of responses for requests with“User-Agent” header fields matchingany of the specified regular expressions.",
    "doc": "<p>\nDisables gzipping of responses for requests with\n&#x201C;User-Agent&#x201D; header fields matching\nany of the specified regular expressions.\n</p><p>\nThe special mask &#x201C;`msie6`&#x201D; (0.7.12) corresponds to\nthe regular expression &#x201C;`MSIE [4-6]\\.`&#x201D;, but works faster.\nStarting from version 0.8.11, &#x201C;`MSIE 6.0; ... SV1`&#x201D;\nis excluded from this mask.\n</p>",
    "notes": [],
    "since": "0.6.23",
    "link": "http/ngx_http_gzip_module.html#gzip_disable",
    "module": "ngx_http_gzip_module"
  },
  {
    "name": "gzip_min_length",
    "syntax": "gzip_min_length length;",
    "def": "gzip_min_length 20;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the minimum length of a response that will be gzipped.The length is determined only from the “Content-Length”response header field.",
    "doc": "<p>\nSets the minimum length of a response that will be gzipped.\nThe length is determined only from the &#x201C;Content-Length&#x201D;\nresponse header field.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_gzip_module.html#gzip_min_length",
    "module": "ngx_http_gzip_module"
  },
  {
    "name": "gzip_http_version",
    "syntax": "gzip_http_version 1.0 | 1.1;",
    "def": "gzip_http_version 1.1;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the minimum HTTP version of a request required to compress a response.",
    "doc": "<p>\nSets the minimum HTTP version of a request required to compress a response.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_gzip_module.html#gzip_http_version",
    "module": "ngx_http_gzip_module"
  },
  {
    "name": "gzip_proxied",
    "syntax": "gzip_proxied \n    off |\n    expired |\n    no-cache |\n    no-store |\n    private |\n    no_last_modified |\n    no_etag |\n    auth |\n    any\n    ...;",
    "def": "gzip_proxied off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables gzipping of responses for proxiedrequests depending on the request and response.The fact that the request is proxied is determined bythe presence of the “Via” request header field.The directive accepts multiple parameters:",
    "doc": "<p>\nEnables or disables gzipping of responses for proxied\nrequests depending on the request and response.\nThe fact that the request is proxied is determined by\nthe presence of the &#x201C;Via&#x201D; request header field.\nThe directive accepts multiple parameters:\n</p><dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\ndisables compression for all proxied requests,\nignoring other parameters;\n</dd>\n\n<dt><code>expired</code></dt>\n<dd>\nenables compression if a response header includes the\n&#x201C;Expires&#x201D; field with a value that disables caching;\n</dd>\n\n<dt><code>no-cache</code></dt>\n<dd>\nenables compression if a response header includes the\n&#x201C;Cache-Control&#x201D; field with the\n&#x201C;<code>no-cache</code>&#x201D; parameter;\n</dd>\n\n<dt><code>no-store</code></dt>\n<dd>\nenables compression if a response header includes the\n&#x201C;Cache-Control&#x201D; field with the\n&#x201C;<code>no-store</code>&#x201D; parameter;\n</dd>\n\n<dt><code>private</code></dt>\n<dd>\nenables compression if a response header includes the\n&#x201C;Cache-Control&#x201D; field with the\n&#x201C;<code>private</code>&#x201D; parameter;\n</dd>\n\n<dt><code>no_last_modified</code></dt>\n<dd>\nenables compression if a response header does not include the\n&#x201C;Last-Modified&#x201D; field;\n</dd>\n\n<dt><code>no_etag</code></dt>\n<dd>\nenables compression if a response header does not include the\n&#x201C;ETag&#x201D; field;\n</dd>\n\n<dt><code>auth</code></dt>\n<dd>\nenables compression if a request header includes the\n&#x201C;Authorization&#x201D; field;\n</dd>\n\n<dt><code>any</code></dt>\n<dd>\nenables compression for all proxied requests.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_gzip_module.html#gzip_proxied",
    "module": "ngx_http_gzip_module"
  },
  {
    "name": "gzip_types",
    "syntax": "gzip_types mime-type ...;",
    "def": "gzip_types text/html;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables gzipping of responses for the specified MIME types in additionto “text/html”.The special value “*” matches any MIME type (0.8.29).Responses with the “text/html” type are always compressed.",
    "doc": "<p>\nEnables gzipping of responses for the specified MIME types in addition\nto &#x201C;`text/html`&#x201D;.\nThe special value &#x201C;`*`&#x201D; matches any MIME type (0.8.29).\nResponses with the &#x201C;`text/html`&#x201D; type are always compressed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_gzip_module.html#gzip_types",
    "module": "ngx_http_gzip_module"
  },
  {
    "name": "gzip_vary",
    "syntax": "gzip_vary on | off;",
    "def": "gzip_vary off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables inserting the “Vary: Accept-Encoding”response header field if the directivesgzip,gzip_static, orgunzipare active.",
    "doc": "<p>\nEnables or disables inserting the &#x201C;Vary: Accept-Encoding&#x201D;\nresponse header field if the directives\n<a href=\"#gzip\">gzip</a>,\n<a href=\"ngx_http_gzip_static_module.html#gzip_static\">gzip_static</a>, or\n<a href=\"ngx_http_gunzip_module.html#gunzip\">gunzip</a>\nare active.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_gzip_module.html#gzip_vary",
    "module": "ngx_http_gzip_module"
  },
  {
    "name": "gunzip",
    "syntax": "gunzip on | off;",
    "def": "gunzip off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables decompression of gzipped responsesfor clients that lack gzip support.If enabled, the following directives are also taken into accountwhen determining if clients support gzip:gzip_http_version,gzip_proxied, andgzip_disable.See also the gzip_vary directive.",
    "doc": "<p>\nEnables or disables decompression of gzipped responses\nfor clients that lack gzip support.\nIf enabled, the following directives are also taken into account\nwhen determining if clients support gzip:\n<a href=\"ngx_http_gzip_module.html#gzip_http_version\">gzip_http_version</a>,\n<a href=\"ngx_http_gzip_module.html#gzip_proxied\">gzip_proxied</a>, and\n<a href=\"ngx_http_gzip_module.html#gzip_disable\">gzip_disable</a>.\nSee also the <a href=\"ngx_http_gzip_module.html#gzip_vary\">gzip_vary</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_gunzip_module.html#gunzip",
    "module": "ngx_http_gunzip_module"
  },
  {
    "name": "gunzip_buffers",
    "syntax": "gunzip_buffers number size;",
    "def": "gunzip_buffers 32 4k|16 8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the number and size of buffersused to decompress a response.By default, the buffer size is equal to one memory page.This is either 4K or 8K, depending on a platform.",
    "doc": "<p>\nSets the *`number`* and *`size`* of buffers\nused to decompress a response.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_gunzip_module.html#gunzip_buffers",
    "module": "ngx_http_gunzip_module"
  },
  {
    "name": "geoip_country",
    "syntax": "geoip_country file;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Specifies a database used to determine the countrydepending on the client IP address.The following variables are available when using this database:",
    "doc": "<p>\nSpecifies a database used to determine the country\ndepending on the client IP address.\nThe following variables are available when using this database:\n</p><dl class=\"compact\">\n\n<dt id=\"var_geoip_country_code\"><code>$geoip_country_code</code></dt>\n<dd>\ntwo-letter country code, for example,\n&#x201C;<code>RU</code>&#x201D;, &#x201C;<code>US</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_country_code3\"><code>$geoip_country_code3</code>\n</dt>\n<dd>\nthree-letter country code, for example,\n&#x201C;<code>RUS</code>&#x201D;, &#x201C;<code>USA</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_country_name\"><code>$geoip_country_name</code></dt>\n<dd>\ncountry name, for example,\n&#x201C;<code>Russian Federation</code>&#x201D;, &#x201C;<code>United States</code>&#x201D;.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_geoip_module.html#geoip_country",
    "module": "ngx_http_geoip_module"
  },
  {
    "name": "geoip_city",
    "syntax": "geoip_city file;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Specifies a database used to determine the country, region, and citydepending on the client IP address.The following variables are available when using this database:",
    "doc": "<p>\nSpecifies a database used to determine the country, region, and city\ndepending on the client IP address.\nThe following variables are available when using this database:\n</p><dl class=\"compact\">\n\n<dt id=\"var_geoip_area_code\"><code>$geoip_area_code</code></dt>\n<dd>telephone area code (US only).\n<blockquote class=\"note\">\nThis variable may contain outdated information since\nthe corresponding database field is deprecated.\n</blockquote>\n</dd>\n\n<dt id=\"var_geoip_city_continent_code\">\n<code>$geoip_city_continent_code</code></dt>\n<dd>two-letter continent code, for example,\n&#x201C;<code>EU</code>&#x201D;, &#x201C;<code>NA</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_city_country_code\"><code>$geoip_city_country_code</code>\n</dt>\n<dd>\ntwo-letter country code, for example,\n&#x201C;<code>RU</code>&#x201D;, &#x201C;<code>US</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_city_country_code3\"><code>$geoip_city_country_code3</code>\n</dt>\n<dd>\nthree-letter country code, for example,\n&#x201C;<code>RUS</code>&#x201D;, &#x201C;<code>USA</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_city_country_name\"><code>$geoip_city_country_name</code>\n</dt>\n<dd>\ncountry name, for example,\n&#x201C;<code>Russian Federation</code>&#x201D;, &#x201C;<code>United States</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_dma_code\"><code>$geoip_dma_code</code></dt>\n<dd>\nDMA region code in US (also known as &#x201C;metro code&#x201D;), according to the\n<a href=\"https://developers.google.com/adwords/api/docs/appendix/cities-DMAregions\">geotargeting</a>\nin Google AdWords API.\n</dd>\n\n<dt id=\"var_geoip_latitude\"><code>$geoip_latitude</code></dt>\n<dd>latitude.</dd>\n\n<dt id=\"var_geoip_longitude\"><code>$geoip_longitude</code></dt>\n<dd>longitude.</dd>\n\n<dt id=\"var_geoip_region\"><code>$geoip_region</code></dt>\n<dd>\ntwo-symbol country region code (region, territory, state, province, federal land\nand the like), for example,\n&#x201C;<code>48</code>&#x201D;, &#x201C;<code>DC</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_region_name\"><code>$geoip_region_name</code></dt>\n<dd>\ncountry region name (region, territory, state, province, federal land\nand the like), for example,\n&#x201C;<code>Moscow City</code>&#x201D;, &#x201C;<code>District of Columbia</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_city\"><code>$geoip_city</code></dt>\n<dd>\ncity name, for example,\n&#x201C;<code>Moscow</code>&#x201D;, &#x201C;<code>Washington</code>&#x201D;.\n</dd>\n\n<dt id=\"var_geoip_postal_code\"><code>$geoip_postal_code</code></dt>\n<dd>\npostal code.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_geoip_module.html#geoip_city",
    "module": "ngx_http_geoip_module"
  },
  {
    "name": "geoip_org",
    "syntax": "geoip_org file;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Specifies a database used to determine the organizationdepending on the client IP address.The following variable is available when using this database:",
    "doc": "<p>\nSpecifies a database used to determine the organization\ndepending on the client IP address.\nThe following variable is available when using this database:\n</p><dl class=\"compact\">\n\n<dt id=\"var_geoip_org\"><code>$geoip_org</code></dt>\n<dd>\norganization name, for example, &#x201C;The University of Melbourne&#x201D;.\n</dd>\n\n</dl>",
    "notes": [],
    "since": "1.0.3",
    "link": "http/ngx_http_geoip_module.html#geoip_org",
    "module": "ngx_http_geoip_module"
  },
  {
    "name": "geoip_proxy",
    "syntax": "geoip_proxy address | CIDR;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Defines trusted addresses.When a request comes from a trusted address,an address from the “X-Forwarded-For” requestheader field will be used instead.",
    "doc": "<p>\nDefines trusted addresses.\nWhen a request comes from a trusted address,\nan address from the &#x201C;X-Forwarded-For&#x201D; request\nheader field will be used instead.\n</p>",
    "notes": [],
    "since": "1.3.0",
    "link": "http/ngx_http_geoip_module.html#geoip_proxy",
    "module": "ngx_http_geoip_module"
  },
  {
    "name": "geoip_proxy_recursive",
    "syntax": "geoip_proxy_recursive on | off;",
    "def": "geoip_proxy_recursive off;",
    "contexts": [
      "http"
    ],
    "desc": "If recursive search is disabled then instead of the original clientaddress that matches one of the trusted addresses, the lastaddress sent in “X-Forwarded-For” will be used.If recursive search is enabled then instead of the original clientaddress that matches one of the trusted addresses, the lastnon-trusted address sent in “X-Forwarded-For” will be used.",
    "doc": "<p>\nIf recursive search is disabled then instead of the original client\naddress that matches one of the trusted addresses, the last\naddress sent in &#x201C;X-Forwarded-For&#x201D; will be used.\nIf recursive search is enabled then instead of the original client\naddress that matches one of the trusted addresses, the last\nnon-trusted address sent in &#x201C;X-Forwarded-For&#x201D; will be used.\n</p>",
    "notes": [],
    "since": "1.3.0",
    "link": "http/ngx_http_geoip_module.html#geoip_proxy_recursive",
    "module": "ngx_http_geoip_module"
  },
  {
    "name": "geo",
    "syntax": "geo [$address] $variable { ... }",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Describes the dependency of values of the specified variableon the client IP address.By default, the address is taken from the $remote_addr variable,but it can also be taken from another variable (0.7.27), for example:",
    "doc": "<p>\nDescribes the dependency of values of the specified variable\non the client IP address.\nBy default, the address is taken from the `$remote_addr` variable,\nbut it can also be taken from another variable (0.7.27), for example:\n</p><blockquote class=\"example\"><pre>\ngeo $arg_remote_addr $geo {\n    ...;\n}\n</pre></blockquote><blockquote class=\"note\">\nSince variables are evaluated only when used, the mere existence\nof even a large number of declared &#x201C;<code>geo</code>&#x201D; variables\ndoes not cause any extra costs for request processing.\n</blockquote><p>\nIf the value of a variable does not represent a valid IP address\nthen the &#x201C;`255.255.255.255`&#x201D; address is used.\n</p><p>\nAddresses are specified either as prefixes in CIDR notation\n(including individual addresses) or as ranges (0.7.23).\n</p><blockquote class=\"note\">\nIPv6 prefixes are supported starting from versions 1.3.10 and 1.2.7.\n</blockquote><p>\nThe following special parameters are also supported:\n</p><dl class=\"compact\">\n\n<dt><code>delete</code></dt>\n<dd>\ndeletes the specified network (0.7.23).\n</dd>\n\n<dt><code>default</code></dt>\n<dd>\na value set to the variable if the client address does not\nmatch any of the specified addresses.\nWhen addresses are specified in CIDR notation,\n&#x201C;<code>0.0.0.0/0</code>&#x201D; and &#x201C;<code>::/0</code>&#x201D;\ncan be used instead of <code>default</code>.\nWhen <code>default</code> is not specified, the default\nvalue will be an empty string.\n</dd>\n\n<dt><code>include</code></dt>\n<dd>\nincludes a file with addresses and values.\nThere can be several inclusions.\n</dd>\n\n<dt><code>proxy</code></dt>\n<dd>\ndefines trusted addresses (0.8.7, 0.7.63).\nWhen a request comes from a trusted address,\nan address from the &#x201C;X-Forwarded-For&#x201D; request\nheader field will be used instead.\nIn contrast to the regular addresses, trusted addresses are\nchecked sequentially.\n<blockquote class=\"note\">\nTrusted IPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.\n</blockquote>\n</dd>\n\n<dt><code>proxy_recursive</code></dt>\n<dd>\nenables recursive address search (1.3.0, 1.2.1).\nIf recursive search is disabled then instead of the original client\naddress that matches one of the trusted addresses, the last\naddress sent in &#x201C;X-Forwarded-For&#x201D; will be used.\nIf recursive search is enabled then instead of the original client\naddress that matches one of the trusted addresses, the last\nnon-trusted address sent in &#x201C;X-Forwarded-For&#x201D; will be used.\n</dd>\n\n<dt><code>ranges</code></dt>\n<dd>\nindicates that addresses are specified as ranges (0.7.23).\nThis parameter should be the first.\nTo speed up loading of a geo base, addresses should be put in ascending order.\n</dd>\n\n</dl><p>\nExample:\n</p><blockquote class=\"example\"><pre>\ngeo $country {\n    default        ZZ;\n    include        conf/geo.conf;\n    delete         127.0.0.0/16;\n    proxy          192.168.100.0/24;\n    proxy          2001:0db8::/32;\n\n    127.0.0.0/24   US;\n    127.0.0.1/32   RU;\n    10.1.0.0/16    RU;\n    192.168.1.0/24 UK;\n}\n</pre></blockquote><p>\nThe `conf/geo.conf` file could contain the following lines:\n</p><blockquote class=\"example\"><pre>\n10.2.0.0/16    RU;\n192.168.2.0/24 RU;\n</pre></blockquote><p>\nA value of the most specific match is used.\nFor example, for the 127.0.0.1 address the value &#x201C;`RU`&#x201D;\nwill be chosen, not &#x201C;`US`&#x201D;.\n</p><p>\nExample with ranges:\n</p><blockquote class=\"example\"><pre>\ngeo $country {\n    ranges;\n    default                   ZZ;\n    127.0.0.0-127.0.0.0       US;\n    127.0.0.1-127.0.0.1       RU;\n    127.0.0.1-127.0.0.255     US;\n    10.1.0.0-10.1.255.255     RU;\n    192.168.1.0-192.168.1.255 UK;\n}\n</pre></blockquote>",
    "notes": [
      "\nSince variables are evaluated only when used, the mere existence\nof even a large number of declared “geo” variables\ndoes not cause any extra costs for request processing.\n",
      "\nIPv6 prefixes are supported starting from versions 1.3.10 and 1.2.7.\n"
    ],
    "since": null,
    "link": "http/ngx_http_geo_module.html#geo",
    "module": "ngx_http_geo_module"
  },
  {
    "name": "flv",
    "syntax": "flv;",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Turns on module processing in a surrounding location.",
    "doc": "<p>\nTurns on module processing in a surrounding location.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_flv_module.html#flv",
    "module": "ngx_http_flv_module"
  },
  {
    "name": "fastcgi_bind",
    "syntax": "fastcgi_bind \n    address\n    [transparent] |\n    off;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Makes outgoing connections to a FastCGI server originatefrom the specified local IP address with an optional port (1.11.2).Parameter value can contain variables (1.3.12).The special value off (1.3.12) cancels the effectof the fastcgi_bind directiveinherited from the previous configuration level, which allows thesystem to auto-assign the local IP address and port.",
    "doc": "<p>\nMakes outgoing connections to a FastCGI server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value `off` (1.3.12) cancels the effect\nof the `fastcgi_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n</p>",
    "notes": [],
    "since": "0.8.22",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_bind",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_buffer_size",
    "syntax": "fastcgi_buffer_size size;",
    "def": "fastcgi_buffer_size 4k|8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the size of the buffer used for reading the first partof the response received from the FastCGI server.This part usually contains a small response header.By default, the buffer size is equal to one memory page.This is either 4K or 8K, depending on a platform.It can be made smaller, however.",
    "doc": "<p>\nSets the *`size`* of the buffer used for reading the first part\nof the response received from the FastCGI server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_buffer_size",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_buffering",
    "syntax": "fastcgi_buffering on | off;",
    "def": "fastcgi_buffering on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables buffering of responses from the FastCGI server.",
    "doc": "<p>\nEnables or disables buffering of responses from the FastCGI server.\n</p><p>\nWhen buffering is enabled, nginx receives a response from the FastCGI server\nas soon as possible, saving it into the buffers set by the\n<a href=\"#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"#fastcgi_buffers\">fastcgi_buffers</a> directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a <a href=\"#fastcgi_temp_path\">temporary file</a> on the disk.\nWriting to temporary files is controlled by the\n<a href=\"#fastcgi_max_temp_file_size\">fastcgi_max_temp_file_size</a> and\n<a href=\"#fastcgi_temp_file_write_size\">fastcgi_temp_file_write_size</a> directives.\n</p><p>\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the FastCGI server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the <a href=\"#fastcgi_buffer_size\">fastcgi_buffer_size</a> directive.\n</p><p>\nBuffering can also be enabled or disabled by passing\n&#x201C;`yes`&#x201D; or &#x201C;`no`&#x201D; in the\n&#x201C;X-Accel-Buffering&#x201D; response header field.\nThis capability can be disabled using the\n<a href=\"#fastcgi_ignore_headers\">fastcgi_ignore_headers</a> directive.\n</p>",
    "notes": [],
    "since": "1.5.6",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_buffering",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_buffers",
    "syntax": "fastcgi_buffers number size;",
    "def": "fastcgi_buffers 8 4k|8k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the number and size of thebuffers used for reading a response from the FastCGI server,for a single connection.By default, the buffer size is equal to one memory page.This is either 4K or 8K, depending on a platform.",
    "doc": "<p>\nSets the *`number`* and *`size`* of the\nbuffers used for reading a response from the FastCGI server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_buffers",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_busy_buffers_size",
    "syntax": "fastcgi_busy_buffers_size size;",
    "def": "fastcgi_busy_buffers_size 8k|16k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When buffering of responses from the FastCGIserver is enabled, limits the total size of buffers thatcan be busy sending a response to the client while the response is notyet fully read.In the meantime, the rest of the buffers can be used for reading the responseand, if needed, buffering part of the response to a temporary file.By default, size is limited by the size of two buffers set by thefastcgi_buffer_size and fastcgi_buffers directives.",
    "doc": "<p>\nWhen <a href=\"#fastcgi_buffering\">buffering</a> of responses from the FastCGI\nserver is enabled, limits the total *`size`* of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, *`size`* is limited by the size of two buffers set by the\n<a href=\"#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"#fastcgi_buffers\">fastcgi_buffers</a> directives.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_busy_buffers_size",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache",
    "syntax": "fastcgi_cache zone | off;",
    "def": "fastcgi_cache off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a shared memory zone used for caching.The same zone can be used in several places.Parameter value can contain variables (1.7.9).The off parameter disables caching inheritedfrom the previous configuration level.",
    "doc": "<p>\nDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe `off` parameter disables caching inherited\nfrom the previous configuration level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_background_update",
    "syntax": "fastcgi_cache_background_update on | off;",
    "def": "fastcgi_cache_background_update off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows starting a background subrequestto update an expired cache item,while a stale cached response is returned to the client.Note that it is necessary toallowthe usage of a stale cached response when it is being updated.",
    "doc": "<p>\nAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n<a href=\"#fastcgi_cache_use_stale_updating\">allow</a>\nthe usage of a stale cached response when it is being updated.\n</p>",
    "notes": [],
    "since": "1.11.10",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_background_update",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_bypass",
    "syntax": "fastcgi_cache_bypass string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the response will not be taken from a cache.If at least one value of the string parameters is not empty and is notequal to “0” then the response will not be taken from the cache:",
    "doc": "<p>\nDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to &#x201C;0&#x201D; then the response will not be taken from the cache:\n</p><blockquote class=\"example\"><pre>\nfastcgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nfastcgi_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#fastcgi_no_cache\">fastcgi_no_cache</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_bypass",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_key",
    "syntax": "fastcgi_cache_key string;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a key for caching, for example",
    "doc": "<p>\nDefines a key for caching, for example\n</p><blockquote class=\"example\"><pre>\nfastcgi_cache_key localhost:9000$request_uri;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_key",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_lock",
    "syntax": "fastcgi_cache_lock on | off;",
    "def": "fastcgi_cache_lock off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When enabled, only one request at a time will be allowed to populatea new cache element identified according to the fastcgi_cache_keydirective by passing a request to a FastCGI server.Other requests of the same cache element will either waitfor a response to appear in the cache or the cache lock forthis element to be released, up to the time set by thefastcgi_cache_lock_timeout directive.",
    "doc": "<p>\nWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the <a href=\"#fastcgi_cache_key\">fastcgi_cache_key</a>\ndirective by passing a request to a FastCGI server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n<a href=\"#fastcgi_cache_lock_timeout\">fastcgi_cache_lock_timeout</a> directive.\n</p>",
    "notes": [],
    "since": "1.1.12",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_lock",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_lock_age",
    "syntax": "fastcgi_cache_lock_age time;",
    "def": "fastcgi_cache_lock_age 5s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the last request passed to the FastCGI serverfor populating a new cache elementhas not completed for the specified time,one more request may be passed to the FastCGI server.",
    "doc": "<p>\nIf the last request passed to the FastCGI server\nfor populating a new cache element\nhas not completed for the specified *`time`*,\none more request may be passed to the FastCGI server.\n</p>",
    "notes": [],
    "since": "1.7.8",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_lock_age",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_lock_timeout",
    "syntax": "fastcgi_cache_lock_timeout time;",
    "def": "fastcgi_cache_lock_timeout 5s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a timeout for fastcgi_cache_lock.When the time expires,the request will be passed to the FastCGI server,however, the response will not be cached.",
    "doc": "<p>\nSets a timeout for <a href=\"#fastcgi_cache_lock\">fastcgi_cache_lock</a>.\nWhen the *`time`* expires,\nthe request will be passed to the FastCGI server,\nhowever, the response will not be cached.\n</p><blockquote class=\"note\">\nBefore 1.7.8, the response could be cached.\n</blockquote>",
    "notes": [
      "\nBefore 1.7.8, the response could be cached.\n"
    ],
    "since": "1.1.12",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_lock_timeout",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_max_range_offset",
    "syntax": "fastcgi_cache_max_range_offset number;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets an offset in bytes for byte-range requests.If the range is beyond the offset,the range request will be passed to the FastCGI serverand the response will not be cached.",
    "doc": "<p>\nSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the FastCGI server\nand the response will not be cached.\n</p>",
    "notes": [],
    "since": "1.11.6",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_max_range_offset",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_methods",
    "syntax": "fastcgi_cache_methods \n    GET |\n    HEAD |\n    POST\n    ...;",
    "def": "fastcgi_cache_methods GET HEAD;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the client request method is listed in this directive thenthe response will be cached.“GET” and “HEAD” methods are alwaysadded to the list, though it is recommended to specify them explicitly.See also the fastcgi_no_cache directive.",
    "doc": "<p>\nIf the client request method is listed in this directive then\nthe response will be cached.\n&#x201C;`GET`&#x201D; and &#x201C;`HEAD`&#x201D; methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the <a href=\"#fastcgi_no_cache\">fastcgi_no_cache</a> directive.\n</p>",
    "notes": [],
    "since": "0.7.59",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_methods",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_min_uses",
    "syntax": "fastcgi_cache_min_uses number;",
    "def": "fastcgi_cache_min_uses 1;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the number of requests after which the responsewill be cached.",
    "doc": "<p>\nSets the *`number`* of requests after which the response\nwill be cached.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_min_uses",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_path",
    "syntax": "fastcgi_cache_path \n    path\n    [levels=levels]\n    [use_temp_path=on|off]\n    keys_zone=name:size\n    [inactive=time]\n    [max_size=size]\n    [manager_files=number]\n    [manager_sleep=time]\n    [manager_threshold=time]\n    [loader_files=number]\n    [loader_sleep=time]\n    [loader_threshold=time]\n    [purger=on|off]\n    [purger_files=number]\n    [purger_sleep=time]\n    [purger_threshold=time];",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets the path and other parameters of a cache.Cache data are stored in files.Both the key and file name in a cache are a result ofapplying the MD5 function to the proxied URL.The levels parameter defines hierarchy levels of a cache:from 1 to 3, each level accepts values 1 or 2.For example, in the following configuration",
    "doc": "<p>\nSets the path and other parameters of a cache.\nCache data are stored in files.\nBoth the key and file name in a cache are a result of\napplying the MD5 function to the proxied URL.\n\nThe `levels` parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n</p><blockquote class=\"example\"><pre>\nfastcgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p> \nfile names in a cache will look like this:\n</p><blockquote class=\"example\"><pre>\n/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p>\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe `use_temp_path` parameter (1.7.10).\nIf this parameter is omitted or set to the value `on`,\nthe directory set by the <a href=\"#fastcgi_temp_path\">fastcgi_temp_path</a> directive\nfor the given location will be used.\nIf the value is set to `off`,\ntemporary files will be put directly in the cache directory.\n</p><p>\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose *`name`* and *`size`*\nare configured by the `keys_zone` parameter.\nOne megabyte zone can store about 8 thousand keys.\n</p><p>\nCached data that are not accessed during the time specified by the\n`inactive` parameter get removed from the cache\nregardless of their freshness.\nBy default, `inactive` is set to 10 minutes.\n</p><p>\nThe special &#x201C;cache manager&#x201D; process monitors the maximum cache size set\nby the `max_size` parameter.\nWhen this size is exceeded, it removes the least recently used data.\nThe data is removed in iterations configured by\n`manager_files`,\n`manager_threshold`, and\n`manager_sleep` parameters (1.11.5).\nDuring one iteration no more than `manager_files` items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n`manager_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `manager_sleep`\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nA minute after the start the special &#x201C;cache loader&#x201D; process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than `loader_files` items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n`loader_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `loader_sleep`\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p><dl class=\"compact\">\n\n<dt id=\"purger\">\n<code>purger</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nInstructs whether cache entries that match a\n<a href=\"#fastcgi_cache_purge\">wildcard key</a>\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to <code>on</code>\n(default is <code>off</code>)\nwill activate the &#x201C;cache purger&#x201D; process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\n</dd>\n\n<dt id=\"purger_files\">\n<code>purger_files</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, <code>purger_files</code> is set to 10.\n</dd>\n\n<dt id=\"purger_threshold\">\n<code>purger_threshold</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the duration of one iteration (1.7.12).\nBy default, <code>purger_threshold</code> is set to 50 milliseconds.\n</dd>\n\n<dt id=\"purger_sleep\">\n<code>purger_sleep</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets a pause between iterations (1.7.12).\nBy default, <code>purger_sleep</code> is set to 50 milliseconds.\n</dd>\n\n</dl>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_path",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_purge",
    "syntax": "fastcgi_cache_purge string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the request will be considered a cachepurge request.If at least one value of the string parameters is not empty and is not equalto “0” then the cache entry with a correspondingcache key is removed.The result of successful operation is indicated by returningthe 204 (No Content) response.",
    "doc": "<p>\nDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto &#x201C;0&#x201D; then the cache entry with a corresponding\n<a href=\"#fastcgi_cache_key\">cache key</a> is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n</p><p>\nIf the <a href=\"#fastcgi_cache_key\">cache key</a> of a purge request ends\nwith an asterisk (&#x201C;`*`&#x201D;), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either <a href=\"#fastcgi_cache_path\">inactivity</a>,\nor processed by the <a href=\"#purger\">cache purger</a> (1.7.12),\nor a client attempts to access them.\n</p><p>\nExample configuration:\n</p><blockquote class=\"example\"><pre>\nfastcgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        fastcgi_pass        backend;\n        fastcgi_cache       cache_zone;\n        fastcgi_cache_key   $uri;\n        fastcgi_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><blockquote class=\"note\">\nThis functionality is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>",
    "notes": [
      "\nThis functionality is available as part of our\ncommercial subscription.\n"
    ],
    "since": "1.5.7",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_purge",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_revalidate",
    "syntax": "fastcgi_cache_revalidate on | off;",
    "def": "fastcgi_cache_revalidate off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables revalidation of expired cache items using conditional requests withthe “If-Modified-Since” and “If-None-Match”header fields.",
    "doc": "<p>\nEnables revalidation of expired cache items using conditional requests with\nthe &#x201C;If-Modified-Since&#x201D; and &#x201C;If-None-Match&#x201D;\nheader fields.\n</p>",
    "notes": [],
    "since": "1.5.7",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_revalidate",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_use_stale",
    "syntax": "fastcgi_cache_use_stale \n    error |\n    timeout |\n    invalid_header |\n    updating |\n    http_500 |\n    http_503 |\n    http_403 |\n    http_404 |\n    http_429 |\n    off\n    ...;",
    "def": "fastcgi_cache_use_stale off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines in which cases a stale cached response can be usedwhen an error occurs during communication with the FastCGI server.The directive’s parameters match the parameters of thefastcgi_next_upstream directive.",
    "doc": "<p>\nDetermines in which cases a stale cached response can be used\nwhen an error occurs during communication with the FastCGI server.\nThe directive&#x2019;s parameters match the parameters of the\n<a href=\"#fastcgi_next_upstream\">fastcgi_next_upstream</a> directive.\n</p><p>\nThe `error` parameter also permits\nusing a stale cached response if a FastCGI server to process a request\ncannot be selected.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_use_stale",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_cache_valid",
    "syntax": "fastcgi_cache_valid [code ...] time;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets caching time for different response codes.For example, the following directives",
    "doc": "<p>\nSets caching time for different response codes.\nFor example, the following directives\n</p><blockquote class=\"example\"><pre>\nfastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 404      1m;\n</pre></blockquote><p> \nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n</p><p>\nIf only caching *`time`* is specified\n</p><blockquote class=\"example\"><pre>\nfastcgi_cache_valid 5m;\n</pre></blockquote><p> \nthen only 200, 301, and 302 responses are cached.\n</p><p>\nIn addition, the `any` parameter can be specified\nto cache any responses:\n</p><blockquote class=\"example\"><pre>\nfastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 301      1h;\nfastcgi_cache_valid any      1m;\n</pre></blockquote><p>\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_valid",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_catch_stderr",
    "syntax": "fastcgi_catch_stderr string;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a string to search for in the error stream of a responsereceived from a FastCGI server.If the string is found then it is considered that the FastCGIserver has returned an invalid response.This allows handling application errors in nginx, for example:",
    "doc": "<p>\nSets a string to search for in the error stream of a response\nreceived from a FastCGI server.\nIf the *`string`* is found then it is considered that the FastCGI\nserver has returned an <a href=\"#fastcgi_next_upstream\">invalid response</a>.\nThis allows handling application errors in nginx, for example:\n</p><blockquote class=\"example\"><pre>\nlocation /php {\n    fastcgi_pass backend:9000;\n    ...\n    fastcgi_catch_stderr &quot;PHP Fatal error&quot;;\n    fastcgi_next_upstream error timeout invalid_header;\n}\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_catch_stderr",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_connect_timeout",
    "syntax": "fastcgi_connect_timeout time;",
    "def": "fastcgi_connect_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a timeout for establishing a connection with a FastCGI server.It should be noted that this timeout cannot usually exceed 75 seconds.",
    "doc": "<p>\nDefines a timeout for establishing a connection with a FastCGI server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_connect_timeout",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_force_ranges",
    "syntax": "fastcgi_force_ranges on | off;",
    "def": "fastcgi_force_ranges off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables byte-range supportfor both cached and uncached responses from the FastCGI serverregardless of the “Accept-Ranges” field in these responses.",
    "doc": "<p>\nEnables byte-range support\nfor both cached and uncached responses from the FastCGI server\nregardless of the &#x201C;Accept-Ranges&#x201D; field in these responses.\n</p>",
    "notes": [],
    "since": "1.7.7",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_force_ranges",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_hide_header",
    "syntax": "fastcgi_hide_header field;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "By default,nginx does not pass the header fields “Status” and“X-Accel-...” from the response of a FastCGIserver to a client.The fastcgi_hide_header directive sets additional fieldsthat will not be passed.If, on the contrary, the passing of fields needs to be permitted,the fastcgi_pass_header directive can be used.",
    "doc": "<p>\nBy default,\nnginx does not pass the header fields &#x201C;Status&#x201D; and\n&#x201C;X-Accel-...&#x201D; from the response of a FastCGI\nserver to a client.\nThe `fastcgi_hide_header` directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe <a href=\"#fastcgi_pass_header\">fastcgi_pass_header</a> directive can be used.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_hide_header",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_ignore_client_abort",
    "syntax": "fastcgi_ignore_client_abort on | off;",
    "def": "fastcgi_ignore_client_abort off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether the connection with a FastCGI server should beclosed when a client closes the connection without waitingfor a response.",
    "doc": "<p>\nDetermines whether the connection with a FastCGI server should be\nclosed when a client closes the connection without waiting\nfor a response.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_ignore_client_abort",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_ignore_headers",
    "syntax": "fastcgi_ignore_headers field ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Disables processing of certain response header fields from the FastCGI server.The following fields can be ignored: “X-Accel-Redirect”,“X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6),“X-Accel-Buffering” (1.1.6),“X-Accel-Charset” (1.1.6), “Expires”,“Cache-Control”, “Set-Cookie” (0.8.44),and “Vary” (1.7.7).",
    "doc": "<p>\nDisables processing of certain response header fields from the FastCGI server.\nThe following fields can be ignored: &#x201C;X-Accel-Redirect&#x201D;,\n&#x201C;X-Accel-Expires&#x201D;, &#x201C;X-Accel-Limit-Rate&#x201D; (1.1.6),\n&#x201C;X-Accel-Buffering&#x201D; (1.1.6),\n&#x201C;X-Accel-Charset&#x201D; (1.1.6), &#x201C;Expires&#x201D;,\n&#x201C;Cache-Control&#x201D;, &#x201C;Set-Cookie&#x201D; (0.8.44),\nand &#x201C;Vary&#x201D; (1.7.7).\n</p><p>\nIf not disabled, processing of these header fields has the following\neffect:\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_index",
    "syntax": "fastcgi_index name;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a file name that will be appended after a URI that ends witha slash, in the value of the $fastcgi_script_name variable.For example, with these settings",
    "doc": "<p>\nSets a file name that will be appended after a URI that ends with\na slash, in the value of the `$fastcgi_script_name` variable.\nFor example, with these settings\n</p><blockquote class=\"example\"><pre>\nfastcgi_index index.php;\nfastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\n</pre></blockquote><p> \nand the &#x201C;`/page.php`&#x201D; request,\nthe `SCRIPT_FILENAME` parameter will be equal to\n&#x201C;`/home/www/scripts/php/page.php`&#x201D;,\nand with the &#x201C;`/`&#x201D; request it will be equal to\n&#x201C;`/home/www/scripts/php/index.php`&#x201D;.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_index",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_intercept_errors",
    "syntax": "fastcgi_intercept_errors on | off;",
    "def": "fastcgi_intercept_errors off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether FastCGI server responses with codes greater than or equalto 300 should be passed to a clientor be intercepted and redirected to nginx for processingwith the error_page directive.",
    "doc": "<p>\nDetermines whether FastCGI server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the <a href=\"ngx_http_core_module.html#error_page\">error_page</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_intercept_errors",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_keep_conn",
    "syntax": "fastcgi_keep_conn on | off;",
    "def": "fastcgi_keep_conn off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "By default, a FastCGI server will close a connection right aftersending the response.However, when this directive is set to the value on,nginx will instruct a FastCGI server to keep connections open.This is necessary, in particular, forkeepaliveconnections to FastCGI servers to function.",
    "doc": "<p>\nBy default, a FastCGI server will close a connection right after\nsending the response.\nHowever, when this directive is set to the value `on`,\nnginx will instruct a FastCGI server to keep connections open.\nThis is necessary, in particular, for\n<a href=\"ngx_http_upstream_module.html#keepalive\">keepalive</a>\nconnections to FastCGI servers to function.\n</p>",
    "notes": [],
    "since": "1.1.4",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_keep_conn",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_limit_rate",
    "syntax": "fastcgi_limit_rate rate;",
    "def": "fastcgi_limit_rate 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the speed of reading the response from the FastCGI server.The rate is specified in bytes per second.The zero value disables rate limiting.The limit is set per a request, and so if nginx simultaneously openstwo connections to the FastCFI server,the overall rate will be twice as much as the specified limit.The limitation works only ifbuffering of responses from the FastCGIserver is enabled.",
    "doc": "<p>\nLimits the speed of reading the response from the FastCGI server.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the FastCFI server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n<a href=\"#fastcgi_buffering\">buffering</a> of responses from the FastCGI\nserver is enabled.\n</p>",
    "notes": [],
    "since": "1.7.7",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_limit_rate",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_max_temp_file_size",
    "syntax": "fastcgi_max_temp_file_size size;",
    "def": "fastcgi_max_temp_file_size 1024m;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When buffering of responses from the FastCGIserver is enabled, and the whole response does not fit into the buffersset by the fastcgi_buffer_size and fastcgi_buffersdirectives, a part of the response can be saved to a temporary file.This directive sets the maximum size of the temporary file.The size of data written to the temporary file at a time is setby the fastcgi_temp_file_write_size directive.",
    "doc": "<p>\nWhen <a href=\"#fastcgi_buffering\">buffering</a> of responses from the FastCGI\nserver is enabled, and the whole response does not fit into the buffers\nset by the <a href=\"#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"#fastcgi_buffers\">fastcgi_buffers</a>\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum *`size`* of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the <a href=\"#fastcgi_temp_file_write_size\">fastcgi_temp_file_write_size</a> directive.\n</p><p>\nThe zero value disables buffering of responses to temporary files.\n</p><blockquote class=\"note\">\nThis restriction does not apply to responses\nthat will be <a href=\"#fastcgi_cache\">cached</a>\nor <a href=\"#fastcgi_store\">stored</a> on disk.\n</blockquote>",
    "notes": [
      "\nThis restriction does not apply to responses\nthat will be cached\nor stored on disk.\n"
    ],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_max_temp_file_size",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_next_upstream",
    "syntax": "fastcgi_next_upstream \n    error |\n    timeout |\n    invalid_header |\n    http_500 |\n    http_503 |\n    http_403 |\n    http_404 |\n    http_429 |\n    non_idempotent |\n    off\n    ...;",
    "def": "fastcgi_next_upstream error timeout;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies in which cases a request should be passed to the next server:",
    "doc": "<p>\nSpecifies in which cases a request should be passed to the next server:\n</p><dl class=\"compact\">\n\n<dt><code>error</code></dt>\n<dd>an error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>timeout</code></dt>\n<dd>a timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>invalid_header</code></dt>\n<dd>a server returned an empty or invalid response;</dd>\n\n<dt><code>http_500</code></dt>\n<dd>a server returned a response with the code 500;</dd>\n\n<dt><code>http_503</code></dt>\n<dd>a server returned a response with the code 503;</dd>\n\n<dt><code>http_403</code></dt>\n<dd>a server returned a response with the code 403;</dd>\n\n<dt><code>http_404</code></dt>\n<dd>a server returned a response with the code 404;</dd>\n\n<dt><code>http_429</code></dt>\n<dd>a server returned a response with the code 429 (1.11.13);</dd>\n\n<dt id=\"non_idempotent\"><code>non_idempotent</code></dt>\n<dd>normally, requests with a\n<a href=\"https://tools.ietf.org/html/rfc7231#section-4.2.2\">non-idempotent</a>\nmethod\n(<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\n</dd>\n\n<dt><code>off</code></dt>\n<dd>disables passing a request to the next server.</dd>\n\n</dl><p>\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n</p><p>\nThe directive also defines what is considered an\n<a href=\"ngx_http_upstream_module.html#max_fails\">unsuccessful\nattempt</a> of communication with a server.\nThe cases of `error`, `timeout` and\n`invalid_header` are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of `http_500`, `http_503`,\nand `http_429` are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of `http_403` and `http_404`\nare never considered unsuccessful attempts.\n</p><p>\nPassing a request to the next server can be limited by\n<a href=\"#fastcgi_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#fastcgi_next_upstream_timeout\">time</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_next_upstream",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_next_upstream_timeout",
    "syntax": "fastcgi_next_upstream_timeout time;",
    "def": "fastcgi_next_upstream_timeout 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the time during which a request can be passed to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the time during which a request can be passed to the\n<a href=\"#fastcgi_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": "1.7.5",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_next_upstream_timeout",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_next_upstream_tries",
    "syntax": "fastcgi_next_upstream_tries number;",
    "def": "fastcgi_next_upstream_tries 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the number of possible tries for passing a request to thenext server.The 0 value turns off this limitation.",
    "doc": "<p>\nLimits the number of possible tries for passing a request to the\n<a href=\"#fastcgi_next_upstream\">next server</a>.\nThe `0` value turns off this limitation.\n</p>",
    "notes": [],
    "since": "1.7.5",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_next_upstream_tries",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_no_cache",
    "syntax": "fastcgi_no_cache string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines conditions under which the response will not be saved to a cache.If at least one value of the string parameters is not empty and is notequal to “0” then the response will not be saved:",
    "doc": "<p>\nDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to &#x201C;0&#x201D; then the response will not be saved:\n</p><blockquote class=\"example\"><pre>\nfastcgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nfastcgi_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#fastcgi_cache_bypass\">fastcgi_cache_bypass</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_no_cache",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_param",
    "syntax": "fastcgi_param \n    parameter value\n    [if_not_empty];",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a parameter that should be passed to the FastCGI server.The value can contain text, variables, and their combination.These directives are inherited from the previous level if andonly if there are nofastcgi_paramdirectives defined on the current level.",
    "doc": "<p>\nSets a *`parameter`* that should be passed to the FastCGI server.\nThe *`value`* can contain text, variables, and their combination.\nThese directives are inherited from the previous level if and\nonly if there are no\n`fastcgi_param`\ndirectives defined on the current level.\n</p><p>\nThe following example shows the minimum required settings for PHP:\n</p><blockquote class=\"example\"><pre>\nfastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\nfastcgi_param QUERY_STRING    $query_string;\n</pre></blockquote><p>\nThe `SCRIPT_FILENAME` parameter is used in PHP for\ndetermining the script name, and the `QUERY_STRING`\nparameter is used to pass request parameters.\n</p><p>\nFor scripts that process `POST` requests, the\nfollowing three parameters are also required:\n</p><blockquote class=\"example\"><pre>\nfastcgi_param REQUEST_METHOD  $request_method;\nfastcgi_param CONTENT_TYPE    $content_type;\nfastcgi_param CONTENT_LENGTH  $content_length;\n</pre></blockquote><p>\nIf PHP was built with the `--enable-force-cgi-redirect`\nconfiguration parameter, the `REDIRECT_STATUS` parameter\nshould also be passed with the value &#x201C;200&#x201D;:\n</p><blockquote class=\"example\"><pre>\nfastcgi_param REDIRECT_STATUS 200;\n</pre></blockquote><p>\nIf the directive is specified with `if_not_empty` (1.1.11) then\nsuch a parameter will not be passed to the server until its value is not empty:\n</p><blockquote class=\"example\"><pre>\nfastcgi_param HTTPS           $https if_not_empty;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_param",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_pass",
    "syntax": "fastcgi_pass address;",
    "def": null,
    "contexts": [
      "location",
      "ifinlocation"
    ],
    "desc": "Sets the address of a FastCGI server.The address can be specified as a domain name or IP address,and a port:",
    "doc": "<p>\nSets the address of a FastCGI server.\nThe address can be specified as a domain name or IP address,\nand a port:\n</p><blockquote class=\"example\"><pre>\nfastcgi_pass localhost:9000;\n</pre></blockquote><p> \nor as a UNIX-domain socket path:\n</p><blockquote class=\"example\"><pre>\nfastcgi_pass unix:/tmp/fastcgi.socket;\n</pre></blockquote><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_http_upstream_module.html\">server group</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_pass",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_pass_header",
    "syntax": "fastcgi_pass_header field;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Permits passing otherwise disabled headerfields from a FastCGI server to a client.",
    "doc": "<p>\nPermits passing <a href=\"#fastcgi_hide_header\">otherwise disabled</a> header\nfields from a FastCGI server to a client.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_pass_header",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_pass_request_body",
    "syntax": "fastcgi_pass_request_body on | off;",
    "def": "fastcgi_pass_request_body on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Indicates whether the original request body is passedto the FastCGI server.See also the fastcgi_pass_request_headers directive.",
    "doc": "<p>\nIndicates whether the original request body is passed\nto the FastCGI server.\nSee also the <a href=\"#fastcgi_pass_request_headers\">fastcgi_pass_request_headers</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_pass_request_body",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_pass_request_headers",
    "syntax": "fastcgi_pass_request_headers on | off;",
    "def": "fastcgi_pass_request_headers on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Indicates whether the header fields of the original request are passedto the FastCGI server.See also the fastcgi_pass_request_body directive.",
    "doc": "<p>\nIndicates whether the header fields of the original request are passed\nto the FastCGI server.\nSee also the <a href=\"#fastcgi_pass_request_body\">fastcgi_pass_request_body</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_pass_request_headers",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_read_timeout",
    "syntax": "fastcgi_read_timeout time;",
    "def": "fastcgi_read_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a timeout for reading a response from the FastCGI server.The timeout is set only between two successive read operations,not for the transmission of the whole response.If the FastCGI server does not transmit anything within this time,the connection is closed.",
    "doc": "<p>\nDefines a timeout for reading a response from the FastCGI server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the FastCGI server does not transmit anything within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_read_timeout",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_request_buffering",
    "syntax": "fastcgi_request_buffering on | off;",
    "def": "fastcgi_request_buffering on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables buffering of a client request body.",
    "doc": "<p>\nEnables or disables buffering of a client request body.\n</p><p>\nWhen buffering is enabled, the entire request body is\n<a href=\"ngx_http_core_module.html#client_body_buffer_size\">read</a>\nfrom the client before sending the request to a FastCGI server.\n</p><p>\nWhen buffering is disabled, the request body is sent to the FastCGI server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n<a href=\"#fastcgi_next_upstream\">next server</a>\nif nginx already started sending the request body.\n</p>",
    "notes": [],
    "since": "1.7.11",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_request_buffering",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_send_lowat",
    "syntax": "fastcgi_send_lowat size;",
    "def": "fastcgi_send_lowat 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the directive is set to a non-zero value, nginx will try tominimize the numberof send operations on outgoing connections to a FastCGI server by using eitherNOTE_LOWAT flag of thekqueue method,or the SO_SNDLOWAT socket option,with the specified size.",
    "doc": "<p>\nIf the directive is set to a non-zero value, nginx will try to\nminimize the number\nof send operations on outgoing connections to a FastCGI server by using either\n`NOTE_LOWAT` flag of the\n<a href=\"../events.html#kqueue\">kqueue</a> method,\nor the `SO_SNDLOWAT` socket option,\nwith the specified *`size`*.\n</p><p>\nThis directive is ignored on Linux, Solaris, and Windows.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_send_lowat",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_send_timeout",
    "syntax": "fastcgi_send_timeout time;",
    "def": "fastcgi_send_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a timeout for transmitting a request to the FastCGI server.The timeout is set only between two successive write operations,not for the transmission of the whole request.If the FastCGI server does not receive anything within this time,the connection is closed.",
    "doc": "<p>\nSets a timeout for transmitting a request to the FastCGI server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the FastCGI server does not receive anything within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_send_timeout",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_split_path_info",
    "syntax": "fastcgi_split_path_info regex;",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Defines a regular expression that captures a value for the$fastcgi_path_info variable.The regular expression should have two captures: the first becomesa value of the $fastcgi_script_name variable, the secondbecomes a value of the $fastcgi_path_info variable.For example, with these settings",
    "doc": "<p>\nDefines a regular expression that captures a value for the\n`$fastcgi_path_info` variable.\nThe regular expression should have two captures: the first becomes\na value of the `$fastcgi_script_name` variable, the second\nbecomes a value of the `$fastcgi_path_info` variable.\nFor example, with these settings\n</p><blockquote class=\"example\"><pre>\nlocation ~ ^(.+\\.php)(.*)$ {\n    fastcgi_split_path_info       ^(.+\\.php)(.*)$;\n    fastcgi_param SCRIPT_FILENAME /path/to/php$fastcgi_script_name;\n    fastcgi_param PATH_INFO       $fastcgi_path_info;\n</pre></blockquote><p> \nand the &#x201C;`/show.php/article/0001`&#x201D; request,\nthe `SCRIPT_FILENAME` parameter will be equal to\n&#x201C;`/path/to/php/show.php`&#x201D;, and the\n`PATH_INFO` parameter will be equal to\n&#x201C;`/article/0001`&#x201D;.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_split_path_info",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_store",
    "syntax": "fastcgi_store \n    on |\n    off |\n    string;",
    "def": "fastcgi_store off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables saving of files to a disk.The on parameter saves files with pathscorresponding to the directivesalias orroot.The off parameter disables saving of files.In addition, the file name can be set explicitly using thestring with variables:",
    "doc": "<p>\nEnables saving of files to a disk.\nThe `on` parameter saves files with paths\ncorresponding to the directives\n<a href=\"ngx_http_core_module.html#alias\">alias</a> or\n<a href=\"ngx_http_core_module.html#root\">root</a>.\nThe `off` parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n*`string`* with variables:\n</p><blockquote class=\"example\"><pre>\nfastcgi_store /data/www$original_uri;\n</pre></blockquote><p>\nThe modification time of files is set according to the received\n&#x201C;Last-Modified&#x201D; response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the <a href=\"#fastcgi_temp_path\">fastcgi_temp_path</a>\ndirective, are put on the same file system.\n</p><p>\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n</p><blockquote class=\"example\"><pre>\nlocation /images/ {\n    root                 /data/www;\n    error_page           404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    fastcgi_pass         backend:9000;\n    ...\n\n    fastcgi_store        on;\n    fastcgi_store_access user:rw group:rw all:r;\n    fastcgi_temp_path    /data/temp;\n\n    alias                /data/www/;\n}\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_store",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_store_access",
    "syntax": "fastcgi_store_access users:permissions ...;",
    "def": "fastcgi_store_access user:rw;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets access permissions for newly created files and directories, e.g.:",
    "doc": "<p>\nSets access permissions for newly created files and directories, e.g.:\n</p><blockquote class=\"example\"><pre>\nfastcgi_store_access user:rw group:rw all:r;\n</pre></blockquote><p>\nIf any `group` or `all` access permissions\nare specified then `user` permissions may be omitted:\n</p><blockquote class=\"example\"><pre>\nfastcgi_store_access group:rw all:r;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_store_access",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_temp_file_write_size",
    "syntax": "fastcgi_temp_file_write_size size;",
    "def": "fastcgi_temp_file_write_size 8k|16k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the size of data written to a temporary fileat a time, when buffering of responses from the FastCGI serverto temporary files is enabled.By default, size is limited by two buffers set by thefastcgi_buffer_size and fastcgi_buffers directives.The maximum size of a temporary file is set by thefastcgi_max_temp_file_size directive.",
    "doc": "<p>\nLimits the *`size`* of data written to a temporary file\nat a time, when buffering of responses from the FastCGI server\nto temporary files is enabled.\nBy default, *`size`* is limited by two buffers set by the\n<a href=\"#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"#fastcgi_buffers\">fastcgi_buffers</a> directives.\nThe maximum size of a temporary file is set by the\n<a href=\"#fastcgi_max_temp_file_size\">fastcgi_max_temp_file_size</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_temp_file_write_size",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "fastcgi_temp_path",
    "syntax": "fastcgi_temp_path \n    path\n    [level1\n    [level2\n    [level3]]];",
    "def": "fastcgi_temp_path fastcgi_temp;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a directory for storing temporary fileswith data received from FastCGI servers.Up to three-level subdirectory hierarchy can be used underneath the specifieddirectory.For example, in the following configuration",
    "doc": "<p>\nDefines a directory for storing temporary files\nwith data received from FastCGI servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\n</p><blockquote class=\"example\"><pre>\nfastcgi_temp_path /spool/nginx/fastcgi_temp 1 2;\n</pre></blockquote><p> \na temporary file might look like this:\n</p><blockquote class=\"example\"><pre>\n/spool/nginx/fastcgi_temp/<strong>7</strong>/<strong>45</strong>/00000123<strong>457</strong>\n</pre></blockquote><p>\nSee also the `use_temp_path` parameter of the\n<a href=\"#fastcgi_cache_path\">fastcgi_cache_path</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_temp_path",
    "module": "ngx_http_fastcgi_module"
  },
  {
    "name": "f4f",
    "syntax": "f4f;",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Turns on module processing in the surrounding location.",
    "doc": "<p>\nTurns on module processing in the surrounding location.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_f4f_module.html#f4f",
    "module": "ngx_http_f4f_module"
  },
  {
    "name": "f4f_buffer_size",
    "syntax": "f4f_buffer_size size;",
    "def": "f4f_buffer_size 512k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the size of the buffer used forreading the .f4x index file.",
    "doc": "<p>\nSets the *`size`* of the buffer used for\nreading the `.f4x` index file.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_f4f_module.html#f4f_buffer_size",
    "module": "ngx_http_f4f_module"
  },
  {
    "name": "empty_gif",
    "syntax": "empty_gif;",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Turns on module processing in a surrounding location.",
    "doc": "<p>\nTurns on module processing in a surrounding location.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_empty_gif_module.html#empty_gif",
    "module": "ngx_http_empty_gif_module"
  },
  {
    "name": "dav_access",
    "syntax": "dav_access users:permissions ...;",
    "def": "dav_access user:rw;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets access permissions for newly created files and directories, e.g.:",
    "doc": "<p>\nSets access permissions for newly created files and directories, e.g.:\n</p><blockquote class=\"example\"><pre>\ndav_access user:rw group:rw all:r;\n</pre></blockquote><p>\nIf any `group` or `all` access permissions\nare specified then `user` permissions may be omitted:\n</p><blockquote class=\"example\"><pre>\ndav_access group:rw all:r;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_dav_module.html#dav_access",
    "module": "ngx_http_dav_module"
  },
  {
    "name": "dav_methods",
    "syntax": "dav_methods \n    off | method ...;",
    "def": "dav_methods off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows the specified HTTP and WebDAV methods.The parameter off denies all methods processedby this module.The following methods are supported:PUT, DELETE, MKCOL,COPY, and MOVE.",
    "doc": "<p>\nAllows the specified HTTP and WebDAV methods.\nThe parameter `off` denies all methods processed\nby this module.\nThe following methods are supported:\n`PUT`, `DELETE`, `MKCOL`,\n`COPY`, and `MOVE`.\n</p><p>\nA file uploaded with the PUT method is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the\n<a href=\"ngx_http_core_module.html#client_body_temp_path\">client_body_temp_path</a>\ndirective, are put on the same file system.\n</p><p>\nWhen creating a file with the PUT method, it is possible to specify\nthe modification date by passing it in the &#x201C;Date&#x201D;\nheader field.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_dav_module.html#dav_methods",
    "module": "ngx_http_dav_module"
  },
  {
    "name": "create_full_put_path",
    "syntax": "create_full_put_path on | off;",
    "def": "create_full_put_path off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "The WebDAV specification only allows creating files in alreadyexisting directories.This directive allows creating all needed intermediate directories.",
    "doc": "<p>\nThe WebDAV specification only allows creating files in already\nexisting directories.\nThis directive allows creating all needed intermediate directories.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_dav_module.html#create_full_put_path",
    "module": "ngx_http_dav_module"
  },
  {
    "name": "min_delete_depth",
    "syntax": "min_delete_depth number;",
    "def": "min_delete_depth 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows the DELETE method to remove files provided thatthe number of elements in a request path is not less than the specifiednumber.For example, the directive",
    "doc": "<p>\nAllows the DELETE method to remove files provided that\nthe number of elements in a request path is not less than the specified\nnumber.\nFor example, the directive\n</p><blockquote class=\"example\"><pre>\nmin_delete_depth 4;\n</pre></blockquote><p> \nallows removing files on requests\n</p><blockquote class=\"example\"><pre>\n/users/00/00/name\n/users/00/00/name/pic.jpg\n/users/00/00/page.html\n</pre></blockquote><p> \nand denies the removal of\n</p><blockquote class=\"example\"><pre>\n/users/00/00\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_dav_module.html#min_delete_depth",
    "module": "ngx_http_dav_module"
  },
  {
    "name": "charset",
    "syntax": "charset charset | off;",
    "def": "charset off;",
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Adds the specified charset to the “Content-Type”response header field.If this charset is different from the charset specifiedin the source_charset directive, a conversion is performed.",
    "doc": "<p>\nAdds the specified charset to the &#x201C;Content-Type&#x201D;\nresponse header field.\nIf this charset is different from the charset specified\nin the <a href=\"#source_charset\">source_charset</a> directive, a conversion is performed.\n</p><p>\nThe parameter `off` cancels the addition of charset\nto the &#x201C;Content-Type&#x201D; response header field.\n</p><p>\nA charset can be defined with a variable:\n</p><blockquote class=\"example\"><pre>\ncharset $charset;\n</pre></blockquote><p> \nIn such a case, all possible values of a variable need to be present\nin the configuration at least once in the form of the\n<a href=\"#charset_map\">charset_map</a>, <a href=\"#charset\">charset</a>, or\n<a href=\"#source_charset\">source_charset</a> directives.\nFor `utf-8`, `windows-1251`, and\n`koi8-r` charsets, it is sufficient to include the files\n`conf/koi-win`, `conf/koi-utf`, and\n`conf/win-utf` into configuration.\nFor other charsets, simply making a fictitious conversion table works,\nfor example:\n</p><blockquote class=\"example\"><pre>\ncharset_map iso-8859-5 _ { }\n</pre></blockquote><p>\nIn addition, a charset can be set in the\n&#x201C;X-Accel-Charset&#x201D; response header field.\nThis capability can be disabled using the\n<a href=\"ngx_http_proxy_module.html#proxy_ignore_headers\">proxy_ignore_headers</a>,\n<a href=\"ngx_http_fastcgi_module.html#fastcgi_ignore_headers\">fastcgi_ignore_headers</a>,\n<a href=\"ngx_http_uwsgi_module.html#uwsgi_ignore_headers\">uwsgi_ignore_headers</a>,\nand\n<a href=\"ngx_http_scgi_module.html#scgi_ignore_headers\">scgi_ignore_headers</a>\ndirectives.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_charset_module.html#charset",
    "module": "ngx_http_charset_module"
  },
  {
    "name": "charset_map",
    "syntax": "charset_map charset1 charset2 { ... }",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Describes the conversion table from one charset to another.A reverse conversion table is built using the same data.Character codes are given in hexadecimal.Missing characters in the range 80-FF are replaced with “?”.When converting from UTF-8, characters missing in a one-byte charsetare replaced with “&#XXXX;”.",
    "doc": "<p>\nDescribes the conversion table from one charset to another.\nA reverse conversion table is built using the same data.\nCharacter codes are given in hexadecimal.\nMissing characters in the range 80-FF are replaced with &#x201C;`?`&#x201D;.\nWhen converting from UTF-8, characters missing in a one-byte charset\nare replaced with &#x201C;`&amp;#XXXX;`&#x201D;.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\ncharset_map koi8-r windows-1251 {\n    C0 FE ; # small yu\n    C1 E0 ; # small a\n    C2 E1 ; # small b\n    C3 F6 ; # small ts\n    ...\n}\n</pre></blockquote><p>\nWhen describing a conversion table to UTF-8, codes for the UTF-8 charset should\nbe given in the second column, for example:\n</p><blockquote class=\"example\"><pre>\ncharset_map koi8-r utf-8 {\n    C0 D18E ; # small yu\n    C1 D0B0 ; # small a\n    C2 D0B1 ; # small b\n    C3 D186 ; # small ts\n    ...\n}\n</pre></blockquote><p>\nFull conversion tables from `koi8-r` to\n`windows-1251`, and from `koi8-r` and\n`windows-1251` to `utf-8`\nare provided in the distribution files `conf/koi-win`,\n`conf/koi-utf`, and `conf/win-utf`.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_charset_module.html#charset_map",
    "module": "ngx_http_charset_module"
  },
  {
    "name": "charset_types",
    "syntax": "charset_types mime-type ...;",
    "def": "charset_types text/html text/xml text/plain text/vnd.wap.wml\napplication/javascript application/rss+xml;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables module processing in responses with the specified MIME typesin addition to “text/html”.The special value “*” matches any MIME type (0.8.29).",
    "doc": "<p>\nEnables module processing in responses with the specified MIME types\nin addition to &#x201C;`text/html`&#x201D;.\nThe special value &#x201C;`*`&#x201D; matches any MIME type (0.8.29).\n</p><blockquote class=\"note\">\nUntil version 1.5.4, &#x201C;<code>application/x-javascript</code>&#x201D; was used\nas the default MIME type instead of &#x201C;<code>application/javascript</code>&#x201D;.\n</blockquote>",
    "notes": [
      "\nUntil version 1.5.4, “application/x-javascript” was used\nas the default MIME type instead of “application/javascript”.\n"
    ],
    "since": "0.7.9",
    "link": "http/ngx_http_charset_module.html#charset_types",
    "module": "ngx_http_charset_module"
  },
  {
    "name": "override_charset",
    "syntax": "override_charset on | off;",
    "def": "override_charset off;",
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Determines whether a conversion should be performed for answersreceived from a proxied or a FastCGI/uwsgi/SCGI serverwhen the answers already carry a charset in the “Content-Type”response header field.If conversion is enabled, a charset specified in the receivedresponse is used as a source charset.",
    "doc": "<p>\nDetermines whether a conversion should be performed for answers\nreceived from a proxied or a FastCGI/uwsgi/SCGI server\nwhen the answers already carry a charset in the &#x201C;Content-Type&#x201D;\nresponse header field.\nIf conversion is enabled, a charset specified in the received\nresponse is used as a source charset.\n</p><blockquote class=\"note\">\nIt should be noted that if a response is received in a subrequest\nthen the conversion from the response charset to the main request charset\nis always performed, regardless of the <code>override_charset</code>\ndirective setting.\n</blockquote>",
    "notes": [
      "\nIt should be noted that if a response is received in a subrequest\nthen the conversion from the response charset to the main request charset\nis always performed, regardless of the override_charset\ndirective setting.\n"
    ],
    "since": null,
    "link": "http/ngx_http_charset_module.html#override_charset",
    "module": "ngx_http_charset_module"
  },
  {
    "name": "source_charset",
    "syntax": "source_charset charset;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Defines the source charset of a response.If this charset is different from the charset specifiedin the charset directive, a conversion is performed.",
    "doc": "<p>\nDefines the source charset of a response.\nIf this charset is different from the charset specified\nin the <a href=\"#charset\">charset</a> directive, a conversion is performed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_charset_module.html#source_charset",
    "module": "ngx_http_charset_module"
  },
  {
    "name": "ancient_browser",
    "syntax": "ancient_browser string ...;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If any of the specified substrings is found in the “User-Agent”request header field, the browser will be considered ancient.The special string “netscape4” corresponds to theregular expression “^Mozilla/[1-4]”.",
    "doc": "<p>\nIf any of the specified substrings is found in the &#x201C;User-Agent&#x201D;\nrequest header field, the browser will be considered ancient.\nThe special string &#x201C;`netscape4`&#x201D; corresponds to the\nregular expression &#x201C;`^Mozilla/[1-4]`&#x201D;.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_browser_module.html#ancient_browser",
    "module": "ngx_http_browser_module"
  },
  {
    "name": "ancient_browser_value",
    "syntax": "ancient_browser_value string;",
    "def": "ancient_browser_value 1;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a value for the $ancient_browser variables.",
    "doc": "<p>\nSets a value for the `$ancient_browser` variables.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_browser_module.html#ancient_browser_value",
    "module": "ngx_http_browser_module"
  },
  {
    "name": "modern_browser",
    "syntax": "modern_browser browser version;modern_browser unlisted;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a version starting from which a browser is considered modern.A browser can be any one of the following: msie,gecko (browsers based on Mozilla),opera, safari,or konqueror.",
    "doc": "<p>\nSpecifies a version starting from which a browser is considered modern.\nA browser can be any one of the following: `msie`,\n`gecko` (browsers based on Mozilla),\n`opera`, `safari`,\nor `konqueror`.\n</p><p>\nVersions can be specified in the following formats: X, X.X, X.X.X, or X.X.X.X.\nThe maximum values for each of the format are\n4000, 4000.99, 4000.99.99, and 4000.99.99.99, respectively.\n</p><p>\nThe special value `unlisted` specifies to consider\na browser as modern if it was not listed by the\n`modern_browser` and <a href=\"#ancient_browser\">ancient_browser</a>\ndirectives.\nOtherwise such a browser is considered ancient.\nIf a request does not provide the &#x201C;User-Agent&#x201D; field\nin the header, the browser is treated as not being listed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_browser_module.html#modern_browser",
    "module": "ngx_http_browser_module"
  },
  {
    "name": "modern_browser_value",
    "syntax": "modern_browser_value string;",
    "def": "modern_browser_value 1;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a value for the $modern_browser variables.",
    "doc": "<p>\nSets a value for the `$modern_browser` variables.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_browser_module.html#modern_browser_value",
    "module": "ngx_http_browser_module"
  },
  {
    "name": "autoindex",
    "syntax": "autoindex on | off;",
    "def": "autoindex off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables the directory listing output.",
    "doc": "<p>\nEnables or disables the directory listing output.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_autoindex_module.html#autoindex",
    "module": "ngx_http_autoindex_module"
  },
  {
    "name": "autoindex_exact_size",
    "syntax": "autoindex_exact_size on | off;",
    "def": "autoindex_exact_size on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "For the HTML format,specifies whether exact file sizes should be output in the directory listing,or rather rounded to kilobytes, megabytes, and gigabytes.",
    "doc": "<p>\nFor the HTML <a href=\"#autoindex_format\">format</a>,\nspecifies whether exact file sizes should be output in the directory listing,\nor rather rounded to kilobytes, megabytes, and gigabytes.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_autoindex_module.html#autoindex_exact_size",
    "module": "ngx_http_autoindex_module"
  },
  {
    "name": "autoindex_format",
    "syntax": "autoindex_format \n    html |\n    xml |\n    json |\n    jsonp;",
    "def": "autoindex_format html;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the format of a directory listing.",
    "doc": "<p>\nSets the format of a directory listing.\n</p><p>\nWhen the JSONP format is used, the name of a callback function is set\nwith the `callback` request argument.\nIf the argument is missing or has an empty value,\nthen the JSON format is used.\n</p><p>\nThe XML output can be transformed using the\n<a href=\"ngx_http_xslt_module.html\">ngx_http_xslt_module</a> module.\n</p>",
    "notes": [],
    "since": "1.7.9",
    "link": "http/ngx_http_autoindex_module.html#autoindex_format",
    "module": "ngx_http_autoindex_module"
  },
  {
    "name": "autoindex_localtime",
    "syntax": "autoindex_localtime on | off;",
    "def": "autoindex_localtime off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "For the HTML format,specifies whether times in the directory listing should beoutput in the local time zone or UTC.",
    "doc": "<p>\nFor the HTML <a href=\"#autoindex_format\">format</a>,\nspecifies whether times in the directory listing should be\noutput in the local time zone or UTC.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_autoindex_module.html#autoindex_localtime",
    "module": "ngx_http_autoindex_module"
  },
  {
    "name": "auth_request",
    "syntax": "auth_request uri | off;",
    "def": "auth_request off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables authorization based on the result of a subrequest and setsthe URI to which the subrequest will be sent.",
    "doc": "<p>\nEnables authorization based on the result of a subrequest and sets\nthe URI to which the subrequest will be sent.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_auth_request_module.html#auth_request",
    "module": "ngx_http_auth_request_module"
  },
  {
    "name": "auth_request_set",
    "syntax": "auth_request_set $variable value;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the request variable to the givenvalue after the authorization request completes.The value may contain variables from the authorization request,such as $upstream_http_*.",
    "doc": "<p>\nSets the request *`variable`* to the given\n*`value`* after the authorization request completes.\nThe value may contain variables from the authorization request,\nsuch as `$upstream_http_*`.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_auth_request_module.html#auth_request_set",
    "module": "ngx_http_auth_request_module"
  },
  {
    "name": "auth_jwt",
    "syntax": "auth_jwt \n    string\n    [token=$variable] |\n    off;",
    "def": "auth_jwt off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables validation of JSON Web Token.The specified string is used as a realm.Parameter value can contain variables.",
    "doc": "<p>\nEnables validation of JSON Web Token.\nThe specified *`string`* is used as a `realm`.\nParameter value can contain variables.\n</p><p>\nThe optional `token` parameter specifies a variable\nthat contains JSON Web Token.\nBy default, JWT is passed in the &#x201C;Authorization&#x201D; header\nas a\n<a href=\"https://tools.ietf.org/html/rfc6750\">Bearer Token</a>.\nJWT may be also passed as a cookie or a part of a query string:\n</p><blockquote class=\"example\"><pre>\nauth_jwt &quot;closed site&quot; token=$cookie_auth_token;\n</pre></blockquote><p>\nThe special value `off` cancels the effect\nof the `auth_jwt` directive\ninherited from the previous configuration level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt",
    "module": "ngx_http_auth_jwt_module"
  },
  {
    "name": "auth_jwt_header_set",
    "syntax": "auth_jwt_header_set $variable name;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets the variable to the givenJOSE header parameter name.",
    "doc": "<p>\nSets the *`variable`* to the given\nJOSE header parameter *`name`*.\n</p>",
    "notes": [],
    "since": "1.11.10",
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt_header_set",
    "module": "ngx_http_auth_jwt_module"
  },
  {
    "name": "auth_jwt_claim_set",
    "syntax": "auth_jwt_claim_set $variable name;",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets the variable to the givenJWT claim parameter name.",
    "doc": "<p>\nSets the *`variable`* to the given\nJWT claim parameter *`name`*.\n</p>",
    "notes": [],
    "since": "1.11.10",
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt_claim_set",
    "module": "ngx_http_auth_jwt_module"
  },
  {
    "name": "auth_jwt_key_file",
    "syntax": "auth_jwt_key_file file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies a file inJSON Web Key Setformat for validating JWT signature.Parameter value can contain variables.",
    "doc": "<p>\nSpecifies a *`file`* in\n<a href=\"https://tools.ietf.org/html/rfc7517#section-5\">JSON Web Key Set</a>\nformat for validating JWT signature.\nParameter value can contain variables.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt_key_file",
    "module": "ngx_http_auth_jwt_module"
  },
  {
    "name": "auth_basic",
    "syntax": "auth_basic string | off;",
    "def": "auth_basic off;",
    "contexts": [
      "http",
      "server",
      "location",
      "limit_except"
    ],
    "desc": "Enables validation of user name and password using the“HTTP Basic Authentication” protocol.The specified parameter is used as a realm.Parameter value can contain variables (1.3.10, 1.2.7).The special value off allows cancelling the effectof the auth_basic directiveinherited from the previous configuration level.",
    "doc": "<p>\nEnables validation of user name and password using the\n&#x201C;HTTP Basic Authentication&#x201D; protocol.\nThe specified parameter is used as a *`realm`*.\nParameter value can contain variables (1.3.10, 1.2.7).\nThe special value `off` allows cancelling the effect\nof the `auth_basic` directive\ninherited from the previous configuration level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_auth_basic_module.html#auth_basic",
    "module": "ngx_http_auth_basic_module"
  },
  {
    "name": "auth_basic_user_file",
    "syntax": "auth_basic_user_file file;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location",
      "limit_except"
    ],
    "desc": "Specifies a file that keeps user names and passwords,in the following format:",
    "doc": "<p>\nSpecifies a file that keeps user names and passwords,\nin the following format:\n</p><blockquote class=\"example\"><pre>\n# comment\nname1:password1\nname2:password2:comment\nname3:password3\n</pre></blockquote><p> \nThe *`file`* name can contain variables.\n</p><p>\nThe following password types are supported:\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_auth_basic_module.html#auth_basic_user_file",
    "module": "ngx_http_auth_basic_module"
  },
  {
    "name": "add_before_body",
    "syntax": "add_before_body uri;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Adds the text returned as a result of processing a given subrequestbefore the response body.An empty string (\"\") as a parameter cancels additioninherited from the previous configuration level.",
    "doc": "<p>\nAdds the text returned as a result of processing a given subrequest\nbefore the response body.\nAn empty string (`&quot;&quot;`) as a parameter cancels addition\ninherited from the previous configuration level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_addition_module.html#add_before_body",
    "module": "ngx_http_addition_module"
  },
  {
    "name": "add_after_body",
    "syntax": "add_after_body uri;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Adds the text returned as a result of processing a given subrequestafter the response body.An empty string (\"\") as a parameter cancels additioninherited from the previous configuration level.",
    "doc": "<p>\nAdds the text returned as a result of processing a given subrequest\nafter the response body.\nAn empty string (`&quot;&quot;`) as a parameter cancels addition\ninherited from the previous configuration level.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_addition_module.html#add_after_body",
    "module": "ngx_http_addition_module"
  },
  {
    "name": "addition_types",
    "syntax": "addition_types mime-type ...;",
    "def": "addition_types text/html;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows adding text in responses with the specified MIME types,in addition to “text/html”.The special value “*” matches any MIME type (0.8.29).",
    "doc": "<p>\nAllows adding text in responses with the specified MIME types,\nin addition to &#x201C;`text/html`&#x201D;.\nThe special value &#x201C;`*`&#x201D; matches any MIME type (0.8.29).\n</p>",
    "notes": [],
    "since": "0.7.9",
    "link": "http/ngx_http_addition_module.html#addition_types",
    "module": "ngx_http_addition_module"
  },
  {
    "name": "allow",
    "syntax": "allow \n    address |\n    CIDR |\n    unix: |\n    all;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location",
      "limit_except"
    ],
    "desc": "Allows access for the specified network or address.If the special value unix: is specified (1.5.1),allows access for all UNIX-domain sockets.",
    "doc": "<p>\nAllows access for the specified network or address.\nIf the special value `unix:` is specified (1.5.1),\nallows access for all UNIX-domain sockets.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_access_module.html#allow",
    "module": "ngx_http_access_module"
  },
  {
    "name": "deny",
    "syntax": "deny \n    address |\n    CIDR |\n    unix: |\n    all;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location",
      "limit_except"
    ],
    "desc": "Denies access for the specified network or address.If the special value unix: is specified (1.5.1),denies access for all UNIX-domain sockets.",
    "doc": "<p>\nDenies access for the specified network or address.\nIf the special value `unix:` is specified (1.5.1),\ndenies access for all UNIX-domain sockets.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_access_module.html#deny",
    "module": "ngx_http_access_module"
  },
  {
    "name": "absolute_redirect",
    "syntax": "absolute_redirect on | off;",
    "def": "absolute_redirect on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If disabled, redirects issued by nginx will be relative.",
    "doc": "<p>\nIf disabled, redirects issued by nginx will be relative.\n</p><p>\nSee also <a href=\"#server_name_in_redirect\">server_name_in_redirect</a>\nand <a href=\"#port_in_redirect\">port_in_redirect</a> directives.\n</p>",
    "notes": [],
    "since": "1.11.8",
    "link": "http/ngx_http_core_module.html#absolute_redirect",
    "module": "ngx_http_core_module"
  },
  {
    "name": "aio",
    "syntax": "aio \n    on |\n    off |\n    threads[=pool];",
    "def": "aio off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables the use of asynchronous file I/O (AIO)on FreeBSD and Linux:",
    "doc": "<p>\nEnables or disables the use of asynchronous file I/O (AIO)\non FreeBSD and Linux:\n</p><blockquote class=\"example\"><pre>\nlocation /video/ {\n    aio            on;\n    output_buffers 1 64k;\n}\n</pre></blockquote><p>\nOn FreeBSD, AIO can be used starting from FreeBSD&#xA0;4.3.\nPrior to FreeBSD&#xA0;11.0,\nAIO can either be linked statically into a kernel:\n</p><blockquote class=\"example\"><pre>\noptions VFS_AIO\n</pre></blockquote><p> \nor loaded dynamically as a kernel loadable module:\n</p><blockquote class=\"example\"><pre>\nkldload aio\n</pre></blockquote><p>\nOn Linux, AIO can be used starting from kernel version 2.6.22.\nAlso, it is necessary to enable\n<a href=\"#directio\">directio</a>,\nor otherwise reading will be blocking:\n</p><blockquote class=\"example\"><pre>\nlocation /video/ {\n    aio            on;\n    directio       512;\n    output_buffers 1 128k;\n}\n</pre></blockquote><p>\nOn Linux,\n<a href=\"#directio\">directio</a>\ncan only be used for reading blocks that are aligned on 512-byte\nboundaries (or 4K for XFS).\nFile&#x2019;s unaligned end is read in blocking mode.\nThe same holds true for byte range requests and for FLV requests\nnot from the beginning of a file: reading of unaligned data at the\nbeginning and end of a file will be blocking.\n</p><p>\nWhen both AIO and <a href=\"#sendfile\">sendfile</a> are enabled on Linux,\nAIO is used for files that are larger than or equal to\nthe size specified in the <a href=\"#directio\">directio</a> directive,\nwhile <a href=\"#sendfile\">sendfile</a> is used for files of smaller sizes\nor when <a href=\"#directio\">directio</a> is disabled.\n</p><blockquote class=\"example\"><pre>\nlocation /video/ {\n    sendfile       on;\n    aio            on;\n    directio       8m;\n}\n</pre></blockquote><p>\nFinally, files can be read and <a href=\"#sendfile\">sent</a>\nusing multi-threading (1.7.11),\nwithout blocking a worker process:\n</p><blockquote class=\"example\"><pre>\nlocation /video/ {\n    sendfile       on;\n    aio            threads;\n}\n</pre></blockquote><p> \nRead and send file operations are offloaded to threads of the specified\n<a href=\"../ngx_core_module.html#thread_pool\">pool</a>.\nIf the pool name is omitted,\nthe pool with the name &#x201C;`default`&#x201D; is used.\nThe pool name can also be set with variables:\n</p><blockquote class=\"example\"><pre>\naio threads=pool$disk;\n</pre></blockquote><p> \nBy default, multi-threading is disabled, it should be\nenabled with the\n`--with-threads` configuration parameter.\nCurrently, multi-threading is compatible only with the\n<a href=\"../events.html#epoll\">epoll</a>,\n<a href=\"../events.html#kqueue\">kqueue</a>,\nand\n<a href=\"../events.html#eventport\">eventport</a> methods.\nMulti-threaded sending of files is only supported on Linux.\n</p><p>\nSee also the <a href=\"#sendfile\">sendfile</a> directive.\n</p>",
    "notes": [],
    "since": "0.8.11",
    "link": "http/ngx_http_core_module.html#aio",
    "module": "ngx_http_core_module"
  },
  {
    "name": "aio_write",
    "syntax": "aio_write on | off;",
    "def": "aio_write off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If aio is enabled, specifies whether it is used for writing files.Currently, this only works when usingaio threadsand is limited to writing temporary fileswith data received from proxied servers.",
    "doc": "<p>\nIf <a href=\"#aio\">aio</a> is enabled, specifies whether it is used for writing files.\nCurrently, this only works when using\n`aio threads`\nand is limited to writing temporary files\nwith data received from proxied servers.\n</p>",
    "notes": [],
    "since": "1.9.13",
    "link": "http/ngx_http_core_module.html#aio_write",
    "module": "ngx_http_core_module"
  },
  {
    "name": "alias",
    "syntax": "alias path;",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Defines a replacement for the specified location.For example, with the following configuration",
    "doc": "<p>\nDefines a replacement for the specified location.\nFor example, with the following configuration\n</p><blockquote class=\"example\"><pre>\nlocation /i/ {\n    alias /data/w3/images/;\n}\n</pre></blockquote><p> \non request of\n&#x201C;`/i/top.gif`&#x201D;, the file\n`/data/w3/images/top.gif` will be sent.\n</p><p>\nThe *`path`* value can contain variables,\nexcept `$document_root` and `$realpath_root`.\n</p><p>\nIf `alias` is used inside a location defined\nwith a regular expression then such regular expression should\ncontain captures and `alias` should refer to\nthese captures (0.7.40), for example:\n</p><blockquote class=\"example\"><pre>\nlocation ~ ^/users/(.+\\.(?:gif|jpe?g|png))$ {\n    alias /data/w3/images/$1;\n}\n</pre></blockquote><p>\nWhen location matches the last part of the directive&#x2019;s value:\n</p><blockquote class=\"example\"><pre>\nlocation /images/ {\n    alias /data/w3/images/;\n}\n</pre></blockquote><p> \nit is better to use the\n<a href=\"#root\">root</a>\ndirective instead:\n</p><blockquote class=\"example\"><pre>\nlocation /images/ {\n    root /data/w3;\n}\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#alias",
    "module": "ngx_http_core_module"
  },
  {
    "name": "chunked_transfer_encoding",
    "syntax": "chunked_transfer_encoding on | off;",
    "def": "chunked_transfer_encoding on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows disabling chunked transfer encoding in HTTP/1.1.It may come in handy when using a software failing to supportchunked encoding despite the standard’s requirement.",
    "doc": "<p>\nAllows disabling chunked transfer encoding in HTTP/1.1.\nIt may come in handy when using a software failing to support\nchunked encoding despite the standard&#x2019;s requirement.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#chunked_transfer_encoding",
    "module": "ngx_http_core_module"
  },
  {
    "name": "client_body_buffer_size",
    "syntax": "client_body_buffer_size size;",
    "def": "client_body_buffer_size 8k|16k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets buffer size for reading client request body.In case the request body is larger than the buffer,the whole body or only its part is written to atemporary file.By default, buffer size is equal to two memory pages.This is 8K on x86, other 32-bit platforms, and x86-64.It is usually 16K on other 64-bit platforms.",
    "doc": "<p>\nSets buffer size for reading client request body.\nIn case the request body is larger than the buffer,\nthe whole body or only its part is written to a\n<a href=\"#client_body_temp_path\">temporary file</a>.\nBy default, buffer size is equal to two memory pages.\nThis is 8K on x86, other 32-bit platforms, and x86-64.\nIt is usually 16K on other 64-bit platforms.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#client_body_buffer_size",
    "module": "ngx_http_core_module"
  },
  {
    "name": "client_body_in_file_only",
    "syntax": "client_body_in_file_only \n    on |\n    clean |\n    off;",
    "def": "client_body_in_file_only off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether nginx should save the entire client request bodyinto a file.This directive can be used during debugging, or when using the$request_body_filevariable, or the$r->request_body_filemethod of the modulengx_http_perl_module.",
    "doc": "<p>\nDetermines whether nginx should save the entire client request body\ninto a file.\nThis directive can be used during debugging, or when using the\n`$request_body_file`\nvariable, or the\n<a href=\"ngx_http_perl_module.html#methods\">$r-&gt;request_body_file</a>\nmethod of the module\n<a href=\"ngx_http_perl_module.html\">ngx_http_perl_module</a>.\n</p><p>\nWhen set to the value `on`, temporary files are not\nremoved after request processing.\n</p><p>\nThe value `clean` will cause the temporary files\nleft after request processing to be removed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#client_body_in_file_only",
    "module": "ngx_http_core_module"
  },
  {
    "name": "client_body_in_single_buffer",
    "syntax": "client_body_in_single_buffer on | off;",
    "def": "client_body_in_single_buffer off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines whether nginx should save the entire client request bodyin a single buffer.The directive is recommended when using the$request_bodyvariable, to save the number of copy operations involved.",
    "doc": "<p>\nDetermines whether nginx should save the entire client request body\nin a single buffer.\nThe directive is recommended when using the\n`$request_body`\nvariable, to save the number of copy operations involved.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#client_body_in_single_buffer",
    "module": "ngx_http_core_module"
  },
  {
    "name": "client_body_temp_path",
    "syntax": "client_body_temp_path \n    path\n    [level1\n    [level2\n    [level3]]];",
    "def": "client_body_temp_path client_body_temp;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a directory for storing temporary files holding client request bodies.Up to three-level subdirectory hierarchy can be used under the specifieddirectory.For example, in the following configuration",
    "doc": "<p>\nDefines a directory for storing temporary files holding client request bodies.\nUp to three-level subdirectory hierarchy can be used under the specified\ndirectory.\nFor example, in the following configuration\n</p><blockquote class=\"example\"><pre>\nclient_body_temp_path /spool/nginx/client_temp 1 2;\n</pre></blockquote><p> \na path to a temporary file might look like this:\n</p><blockquote class=\"example\"><pre>\n/spool/nginx/client_temp/7/45/00000123457\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#client_body_temp_path",
    "module": "ngx_http_core_module"
  },
  {
    "name": "client_body_timeout",
    "syntax": "client_body_timeout time;",
    "def": "client_body_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines a timeout for reading client request body.The timeout is set only for a period between two successive read operations,not for the transmission of the whole request body.If a client does not transmit anything within this time, the408 (Request Time-out)error is returned to the client.",
    "doc": "<p>\nDefines a timeout for reading client request body.\nThe timeout is set only for a period between two successive read operations,\nnot for the transmission of the whole request body.\nIf a client does not transmit anything within this time, the\n408 (Request Time-out)\nerror is returned to the client.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#client_body_timeout",
    "module": "ngx_http_core_module"
  },
  {
    "name": "client_header_buffer_size",
    "syntax": "client_header_buffer_size size;",
    "def": "client_header_buffer_size 1k;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Sets buffer size for reading client request header.For most requests, a buffer of 1K bytes is enough.However, if a request includes long cookies, or comes from a WAP client,it may not fit into 1K.If a request line or a request header field does not fit intothis buffer then larger buffers, configured by thelarge_client_header_buffers directive,are allocated.",
    "doc": "<p>\nSets buffer size for reading client request header.\nFor most requests, a buffer of 1K bytes is enough.\nHowever, if a request includes long cookies, or comes from a WAP client,\nit may not fit into 1K.\nIf a request line or a request header field does not fit into\nthis buffer then larger buffers, configured by the\n<a href=\"#large_client_header_buffers\">large_client_header_buffers</a> directive,\nare allocated.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#client_header_buffer_size",
    "module": "ngx_http_core_module"
  },
  {
    "name": "client_header_timeout",
    "syntax": "client_header_timeout time;",
    "def": "client_header_timeout 60s;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Defines a timeout for reading client request header.If a client does not transmit the entire header within this time, the408 (Request Time-out)error is returned to the client.",
    "doc": "<p>\nDefines a timeout for reading client request header.\nIf a client does not transmit the entire header within this time, the\n408 (Request Time-out)\nerror is returned to the client.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#client_header_timeout",
    "module": "ngx_http_core_module"
  },
  {
    "name": "client_max_body_size",
    "syntax": "client_max_body_size size;",
    "def": "client_max_body_size 1m;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the maximum allowed size of the client request body,specified in the“Content-Length”request header field.If the size in a request exceeds the configured value, the413 (Request Entity Too Large)error is returned to the client.Please be aware thatbrowsers cannot correctly displaythis error.Setting size to 0 disables checking of clientrequest body size.",
    "doc": "<p>\nSets the maximum allowed size of the client request body,\nspecified in the\n&#x201C;Content-Length&#x201D;\nrequest header field.\nIf the size in a request exceeds the configured value, the\n413 (Request Entity Too Large)\nerror is returned to the client.\nPlease be aware that\nbrowsers cannot correctly display\nthis error.\nSetting *`size`* to 0 disables checking of client\nrequest body size.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#client_max_body_size",
    "module": "ngx_http_core_module"
  },
  {
    "name": "connection_pool_size",
    "syntax": "connection_pool_size size;",
    "def": "connection_pool_size 256|512;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Allows accurate tuning of per-connection memory allocations.This directive has minimal impact on performanceand should not generally be used.By default, the size is equal to256 bytes on 32-bit platforms and 512 bytes on 64-bit platforms.",
    "doc": "<p>\nAllows accurate tuning of per-connection memory allocations.\nThis directive has minimal impact on performance\nand should not generally be used.\nBy default, the size is equal to\n256 bytes on 32-bit platforms and 512 bytes on 64-bit platforms.\n</p><blockquote class=\"note\">\nPrior to version 1.9.8, the default value was 256 on all platforms.\n</blockquote>",
    "notes": [
      "\nPrior to version 1.9.8, the default value was 256 on all platforms.\n"
    ],
    "since": null,
    "link": "http/ngx_http_core_module.html#connection_pool_size",
    "module": "ngx_http_core_module"
  },
  {
    "name": "default_type",
    "syntax": "default_type mime-type;",
    "def": "default_type text/plain;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Defines the default MIME type of a response.Mapping of file name extensions to MIME types can be setwith the types directive.",
    "doc": "<p>\nDefines the default MIME type of a response.\nMapping of file name extensions to MIME types can be set\nwith the <a href=\"#types\">types</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#default_type",
    "module": "ngx_http_core_module"
  },
  {
    "name": "directio",
    "syntax": "directio size | off;",
    "def": "directio off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables the use ofthe O_DIRECT flag (FreeBSD, Linux),the F_NOCACHE flag (macOS),or the directio() function (Solaris),when reading files that are larger than or equal tothe specified size.The directive automatically disables (0.7.15) the use ofsendfilefor a given request.It can be useful for serving large files:",
    "doc": "<p>\nEnables the use of\nthe `O_DIRECT` flag (FreeBSD, Linux),\nthe `F_NOCACHE` flag (macOS),\nor the `directio()` function (Solaris),\nwhen reading files that are larger than or equal to\nthe specified *`size`*.\nThe directive automatically disables (0.7.15) the use of\n<a href=\"#sendfile\">sendfile</a>\nfor a given request.\nIt can be useful for serving large files:\n</p><blockquote class=\"example\"><pre>\ndirectio 4m;\n</pre></blockquote><p> \nor when using <a href=\"#aio\">aio</a> on Linux.\n</p>",
    "notes": [],
    "since": "0.7.7",
    "link": "http/ngx_http_core_module.html#directio",
    "module": "ngx_http_core_module"
  },
  {
    "name": "directio_alignment",
    "syntax": "directio_alignment size;",
    "def": "directio_alignment 512;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the alignment fordirectio.In most cases, a 512-byte alignment is enough.However, when using XFS under Linux, it needs to be increased to 4K.",
    "doc": "<p>\nSets the alignment for\n<a href=\"#directio\">directio</a>.\nIn most cases, a 512-byte alignment is enough.\nHowever, when using XFS under Linux, it needs to be increased to 4K.\n</p>",
    "notes": [],
    "since": "0.8.11",
    "link": "http/ngx_http_core_module.html#directio_alignment",
    "module": "ngx_http_core_module"
  },
  {
    "name": "disable_symlinks",
    "syntax": "disable_symlinks off;disable_symlinks \n    on |\n    if_not_owner\n    [from=part];",
    "def": "disable_symlinks off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Determines how symbolic links should be treated when opening files:",
    "doc": "<p>\nDetermines how symbolic links should be treated when opening files:\n</p><dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nSymbolic links in the pathname are allowed and not checked.\nThis is the default behavior.\n</dd>\n\n<dt><code>on</code></dt>\n<dd>\nIf any component of the pathname is a symbolic link,\naccess to a file is denied.\n</dd>\n\n<dt><code>if_not_owner</code></dt>\n<dd>\nAccess to a file is denied if any component of the pathname\nis a symbolic link, and the link and object that the link\npoints to have different owners.\n</dd>\n\n<dt><code>from</code>=<code><i>part</i></code></dt>\n<dd>\nWhen checking symbolic links\n(parameters <code>on</code> and <code>if_not_owner</code>),\nall components of the pathname are normally checked.\nChecking of symbolic links in the initial part of the pathname\nmay be avoided by specifying additionally the\n<code>from</code>=<code><i>part</i></code> parameter.\nIn this case, symbolic links are checked only from\nthe pathname component that follows the specified initial part.\nIf the value is not an initial part of the pathname checked, the whole\npathname is checked as if this parameter was not specified at all.\nIf the value matches the whole file name,\nsymbolic links are not checked.\nThe parameter value can contain variables.\n</dd>\n\n</dl><p>\nExample:\n</p><blockquote class=\"example\"><pre>\ndisable_symlinks on from=$document_root;\n</pre></blockquote><p>\nThis directive is only available on systems that have the\n`openat()` and `fstatat()` interfaces.\nSuch systems include modern versions of FreeBSD, Linux, and Solaris.\n</p><p>\nParameters `on` and `if_not_owner`\nadd a processing overhead.\n</p><blockquote class=\"note\">\nOn systems that do not support opening of directories only for search,\nto use these parameters it is required that worker processes\nhave read permissions for all directories being checked.\n</blockquote><blockquote class=\"note\">\nThe\n<a href=\"ngx_http_autoindex_module.html\">ngx_http_autoindex_module</a>,\n<a href=\"ngx_http_random_index_module.html\">ngx_http_random_index_module</a>,\nand <a href=\"ngx_http_dav_module.html\">ngx_http_dav_module</a>\nmodules currently ignore this directive.\n</blockquote>",
    "notes": [
      "\nOn systems that do not support opening of directories only for search,\nto use these parameters it is required that worker processes\nhave read permissions for all directories being checked.\n",
      "\nThe\nngx_http_autoindex_module,\nngx_http_random_index_module,\nand ngx_http_dav_module\nmodules currently ignore this directive.\n"
    ],
    "since": "1.1.15",
    "link": "http/ngx_http_core_module.html#disable_symlinks",
    "module": "ngx_http_core_module"
  },
  {
    "name": "error_page",
    "syntax": "error_page \n    code ...\n    [=[response]]\n    uri;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Defines the URI that will be shown for the specified errors.A uri value can contain variables.",
    "doc": "<p>\nDefines the URI that will be shown for the specified errors.\nA *`uri`* value can contain variables.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nerror_page 404             /404.html;\nerror_page 500 502 503 504 /50x.html;\n</pre></blockquote><p>\nThis causes an internal redirect to the specified *`uri`*\nwith the client request method changed to &#x201C;`GET`&#x201D;\n(for all methods other than\n&#x201C;`GET`&#x201D; and &#x201C;`HEAD`&#x201D;).\n</p><p>\nFurthermore, it is possible to change the response code to another\nusing the &#x201C;`=`*`response`*&#x201D; syntax, for example:\n</p><blockquote class=\"example\"><pre>\nerror_page 404 =200 /empty.gif;\n</pre></blockquote><p>\nIf an error response is processed by a proxied server\nor a FastCGI/uwsgi/SCGI server,\nand the server may return different response codes (e.g., 200, 302, 401\nor 404), it is possible to respond with the code it returns:\n</p><blockquote class=\"example\"><pre>\nerror_page 404 = /404.php;\n</pre></blockquote><p>\nIf there is no need to change URI and method during internal redirection\nit is possible to pass error processing into a named location:\n</p><blockquote class=\"example\"><pre>\nlocation / {\n    error_page 404 = @fallback;\n}\n\nlocation @fallback {\n    proxy_pass http://backend;\n}\n</pre></blockquote><blockquote class=\"note\">\nIf <code><i>uri</i></code> processing leads to an error,\nthe status code of the last occurred error is returned to the client.\n</blockquote><p>\nIt is also possible to use URL redirects for error processing:\n</p><blockquote class=\"example\"><pre>\nerror_page 403      http://example.com/forbidden.html;\nerror_page 404 =301 http://example.com/notfound.html;\n</pre></blockquote><p> \nIn this case, by default, the response code 302 is returned to the client.\nIt can only be changed to one of the redirect status\ncodes (301, 302, 303, and 307).\n</p><p>\nThese directives are inherited from the previous level if and\nonly if there are no\n`error_page`\ndirectives defined on the current level.\n</p>",
    "notes": [
      "\nIf uri processing leads to an error,\nthe status code of the last occurred error is returned to the client.\n"
    ],
    "since": null,
    "link": "http/ngx_http_core_module.html#error_page",
    "module": "ngx_http_core_module"
  },
  {
    "name": "etag",
    "syntax": "etag on | off;",
    "def": "etag on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables automatic generation of the “ETag”response header field for static resources.",
    "doc": "<p>\nEnables or disables automatic generation of the &#x201C;ETag&#x201D;\nresponse header field for static resources.\n</p>",
    "notes": [],
    "since": "1.3.3",
    "link": "http/ngx_http_core_module.html#etag",
    "module": "ngx_http_core_module"
  },
  {
    "name": "http",
    "syntax": "http { ... }",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Provides the configuration file context in which the HTTP server directivesare specified.",
    "doc": "<p>\nProvides the configuration file context in which the HTTP server directives\nare specified.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#http",
    "module": "ngx_http_core_module"
  },
  {
    "name": "if_modified_since",
    "syntax": "if_modified_since \n    off |\n    exact |\n    before;",
    "def": "if_modified_since exact;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Specifies how to compare modification time of a responsewith the time in the“If-Modified-Since”request header field:",
    "doc": "<p>\nSpecifies how to compare modification time of a response\nwith the time in the\n&#x201C;If-Modified-Since&#x201D;\nrequest header field:\n\n</p><dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nthe\n&#x201C;If-Modified-Since&#x201D; request header field is ignored (0.7.34);\n</dd>\n\n<dt><code>exact</code></dt>\n<dd>\nexact match;\n</dd>\n\n<dt><code>before</code></dt>\n<dd>\nmodification time of a response is\nless than or equal to the time in the &#x201C;If-Modified-Since&#x201D;\nrequest header field.\n</dd>\n\n</dl>",
    "notes": [],
    "since": "0.7.24",
    "link": "http/ngx_http_core_module.html#if_modified_since",
    "module": "ngx_http_core_module"
  },
  {
    "name": "ignore_invalid_headers",
    "syntax": "ignore_invalid_headers on | off;",
    "def": "ignore_invalid_headers on;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Controls whether header fields with invalid names should be ignored.Valid names are composed of English letters, digits, hyphens, and possiblyunderscores (as controlled by the underscores_in_headersdirective).",
    "doc": "<p>\nControls whether header fields with invalid names should be ignored.\nValid names are composed of English letters, digits, hyphens, and possibly\nunderscores (as controlled by the <a href=\"#underscores_in_headers\">underscores_in_headers</a>\ndirective).\n</p><p>\nIf the directive is specified on the <a href=\"#server\">server</a> level,\nits value is only used if a server is a default one.\nThe value specified also applies to all virtual servers\nlistening on the same address and port.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#ignore_invalid_headers",
    "module": "ngx_http_core_module"
  },
  {
    "name": "internal",
    "syntax": "internal;",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Specifies that a given location can only be used for internal requests.For external requests, the client error404 (Not Found)is returned.Internal requests are the following:",
    "doc": "<p>\nSpecifies that a given location can only be used for internal requests.\nFor external requests, the client error\n404 (Not Found)\nis returned.\nInternal requests are the following:\n\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#internal",
    "module": "ngx_http_core_module"
  },
  {
    "name": "keepalive_disable",
    "syntax": "keepalive_disable none | browser ...;",
    "def": "keepalive_disable msie6;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Disables keep-alive connections with misbehaving browsers.The browser parameters specify whichbrowsers will be affected.The value msie6 disables keep-alive connectionswith old versions of MSIE, once a POST request is received.The value safari disables keep-alive connectionswith Safari and Safari-like browsers on macOS and macOS-likeoperating systems.The value none enables keep-alive connectionswith all browsers.",
    "doc": "<p>\nDisables keep-alive connections with misbehaving browsers.\nThe *`browser`* parameters specify which\nbrowsers will be affected.\nThe value `msie6` disables keep-alive connections\nwith old versions of MSIE, once a POST request is received.\nThe value `safari` disables keep-alive connections\nwith Safari and Safari-like browsers on macOS and macOS-like\noperating systems.\nThe value `none` enables keep-alive connections\nwith all browsers.\n</p><blockquote class=\"note\">\nPrior to version 1.1.18, the value <code>safari</code> matched\nall Safari and Safari-like browsers on all operating systems, and\nkeep-alive connections with them were disabled by default.\n</blockquote>",
    "notes": [
      "\nPrior to version 1.1.18, the value safari matched\nall Safari and Safari-like browsers on all operating systems, and\nkeep-alive connections with them were disabled by default.\n"
    ],
    "since": null,
    "link": "http/ngx_http_core_module.html#keepalive_disable",
    "module": "ngx_http_core_module"
  },
  {
    "name": "keepalive_requests",
    "syntax": "keepalive_requests number;",
    "def": "keepalive_requests 100;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the maximum number of requests that can beserved through one keep-alive connection.After the maximum number of requests are made, the connection is closed.",
    "doc": "<p>\nSets the maximum number of requests that can be\nserved through one keep-alive connection.\nAfter the maximum number of requests are made, the connection is closed.\n</p>",
    "notes": [],
    "since": "0.8.0",
    "link": "http/ngx_http_core_module.html#keepalive_requests",
    "module": "ngx_http_core_module"
  },
  {
    "name": "keepalive_timeout",
    "syntax": "keepalive_timeout \n    timeout\n    [header_timeout];",
    "def": "keepalive_timeout 75s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "The first parameter sets a timeout during which a keep-aliveclient connection will stay open on the server side.The zero value disables keep-alive client connections.The optional second parameter sets a value in the“Keep-Alive: timeout=time”response header field.Two parameters may differ.",
    "doc": "<p>\nThe first parameter sets a timeout during which a keep-alive\nclient connection will stay open on the server side.\nThe zero value disables keep-alive client connections.\nThe optional second parameter sets a value in the\n&#x201C;Keep-Alive: timeout=*`time`*&#x201D;\nresponse header field.\nTwo parameters may differ.\n</p><p>\nThe\n&#x201C;Keep-Alive: timeout=*`time`*&#x201D;\nheader field is recognized by Mozilla and Konqueror.\nMSIE closes keep-alive connections by itself in about 60 seconds.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#keepalive_timeout",
    "module": "ngx_http_core_module"
  },
  {
    "name": "large_client_header_buffers",
    "syntax": "large_client_header_buffers number size;",
    "def": "large_client_header_buffers 4 8k;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Sets the maximum number and size ofbuffers used for reading large client request header.A request line cannot exceed the size of one buffer, or the414 (Request-URI Too Large)error is returned to the client.A request header field cannot exceed the size of one buffer as well, or the400 (Bad Request)error is returned to the client.Buffers are allocated only on demand.By default, the buffer size is equal to 8K bytes.If after the end of request processing a connection is transitionedinto the keep-alive state, these buffers are released.",
    "doc": "<p>\nSets the maximum *`number`* and *`size`* of\nbuffers used for reading large client request header.\nA request line cannot exceed the size of one buffer, or the\n414 (Request-URI Too Large)\nerror is returned to the client.\nA request header field cannot exceed the size of one buffer as well, or the\n400 (Bad Request)\nerror is returned to the client.\nBuffers are allocated only on demand.\nBy default, the buffer size is equal to 8K bytes.\nIf after the end of request processing a connection is transitioned\ninto the keep-alive state, these buffers are released.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#large_client_header_buffers",
    "module": "ngx_http_core_module"
  },
  {
    "name": "limit_except",
    "syntax": "limit_except method ... { ... }",
    "def": null,
    "contexts": [
      "location"
    ],
    "desc": "Limits allowed HTTP methods inside a location.The method parameter can be one of the following:GET,HEAD,POST,PUT,DELETE,MKCOL,COPY,MOVE,OPTIONS,PROPFIND,PROPPATCH,LOCK,UNLOCK,orPATCH.Allowing the GET method makes theHEAD method also allowed.Access to other methods can be limited using thengx_http_access_moduleandngx_http_auth_basic_modulemodules directives:",
    "doc": "<p>\nLimits allowed HTTP methods inside a location.\nThe *`method`* parameter can be one of the following:\n`GET`,\n`HEAD`,\n`POST`,\n`PUT`,\n`DELETE`,\n`MKCOL`,\n`COPY`,\n`MOVE`,\n`OPTIONS`,\n`PROPFIND`,\n`PROPPATCH`,\n`LOCK`,\n`UNLOCK`,\nor\n`PATCH`.\nAllowing the `GET` method makes the\n`HEAD` method also allowed.\nAccess to other methods can be limited using the\n<a href=\"ngx_http_access_module.html\">ngx_http_access_module</a>\nand\n<a href=\"ngx_http_auth_basic_module.html\">ngx_http_auth_basic_module</a>\nmodules directives:\n</p><blockquote class=\"example\"><pre>\nlimit_except GET {\n    allow 192.168.1.0/32;\n    deny  all;\n}\n</pre></blockquote><p> \nPlease note that this will limit access to all methods\n<strong>except</strong> GET and HEAD.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#limit_except",
    "module": "ngx_http_core_module"
  },
  {
    "name": "limit_rate",
    "syntax": "limit_rate rate;",
    "def": "limit_rate 0;",
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Limits the rate of response transmission to a client.The rate is specified in bytes per second.The zero value disables rate limiting.The limit is set per a request, and so if a client simultaneously openstwo connections, the overall rate will be twice as muchas the specified limit.",
    "doc": "<p>\nLimits the rate of response transmission to a client.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\n\nThe limit is set per a request, and so if a client simultaneously opens\ntwo connections, the overall rate will be twice as much\nas the specified limit.\n</p><p>\nRate limit can also be set in the `$limit_rate` variable.\nIt may be useful in cases where rate should be limited\ndepending on a certain condition:\n</p><blockquote class=\"example\"><pre>\nserver {\n\n    if ($slow) {\n        set $limit_rate 4k;\n    }\n\n    ...\n}\n</pre></blockquote><p>\nRate limit can also be set in the\n&#x201C;X-Accel-Limit-Rate&#x201D; header field of a proxied server response.\nThis capability can be disabled using the\n<a href=\"ngx_http_proxy_module.html#proxy_ignore_headers\">proxy_ignore_headers</a>,\n<a href=\"ngx_http_fastcgi_module.html#fastcgi_ignore_headers\">fastcgi_ignore_headers</a>,\n<a href=\"ngx_http_uwsgi_module.html#uwsgi_ignore_headers\">uwsgi_ignore_headers</a>,\nand\n<a href=\"ngx_http_scgi_module.html#scgi_ignore_headers\">scgi_ignore_headers</a>\ndirectives.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#limit_rate",
    "module": "ngx_http_core_module"
  },
  {
    "name": "limit_rate_after",
    "syntax": "limit_rate_after size;",
    "def": "limit_rate_after 0;",
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Sets the initial amount after which the further transmissionof a response to a client will be rate limited.",
    "doc": "<p>\nSets the initial amount after which the further transmission\nof a response to a client will be rate limited.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nlocation /flv/ {\n    flv;\n    limit_rate_after 500k;\n    limit_rate       50k;\n}\n</pre></blockquote>",
    "notes": [],
    "since": "0.8.0",
    "link": "http/ngx_http_core_module.html#limit_rate_after",
    "module": "ngx_http_core_module"
  },
  {
    "name": "lingering_close",
    "syntax": "lingering_close \n    off |\n    on |\n    always;",
    "def": "lingering_close on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Controls how nginx closes client connections.",
    "doc": "<p>\nControls how nginx closes client connections.\n</p><p>\nThe default value &#x201C;`on`&#x201D; instructs nginx to\n<a href=\"#lingering_timeout\">wait for</a> and\n<a href=\"#lingering_time\">process</a> additional data from a client\nbefore fully closing a connection, but only\nif heuristics suggests that a client may be sending more data.\n</p><p>\nThe value &#x201C;`always`&#x201D; will cause nginx to unconditionally\nwait for and process additional client data.\n</p><p>\nThe value &#x201C;`off`&#x201D; tells nginx to never wait for\nmore data and close the connection immediately.\nThis behavior breaks the protocol and should not be used under normal\ncircumstances.\n</p>",
    "notes": [],
    "since": "1.1.0",
    "link": "http/ngx_http_core_module.html#lingering_close",
    "module": "ngx_http_core_module"
  },
  {
    "name": "lingering_time",
    "syntax": "lingering_time time;",
    "def": "lingering_time 30s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When lingering_close is in effect,this directive specifies the maximum time during which nginxwill process (read and ignore) additional data coming from a client.After that, the connection will be closed, even if there will bemore data.",
    "doc": "<p>\nWhen <a href=\"#lingering_close\">lingering_close</a> is in effect,\nthis directive specifies the maximum time during which nginx\nwill process (read and ignore) additional data coming from a client.\nAfter that, the connection will be closed, even if there will be\nmore data.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#lingering_time",
    "module": "ngx_http_core_module"
  },
  {
    "name": "lingering_timeout",
    "syntax": "lingering_timeout time;",
    "def": "lingering_timeout 5s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When lingering_close is in effect, this directive specifiesthe maximum waiting time for more client data to arrive.If data are not received during this time, the connection is closed.Otherwise, the data are read and ignored, and nginx starts waitingfor more data again.The “wait-read-ignore” cycle is repeated, but no longer than specified by thelingering_time directive.",
    "doc": "<p>\nWhen <a href=\"#lingering_close\">lingering_close</a> is in effect, this directive specifies\nthe maximum waiting time for more client data to arrive.\nIf data are not received during this time, the connection is closed.\nOtherwise, the data are read and ignored, and nginx starts waiting\nfor more data again.\nThe &#x201C;wait-read-ignore&#x201D; cycle is repeated, but no longer than specified by the\n<a href=\"#lingering_time\">lingering_time</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#lingering_timeout",
    "module": "ngx_http_core_module"
  },
  {
    "name": "listen",
    "syntax": "listen \n    address[:port]\n    [default_server]\n    [ssl]\n    [http2 | spdy]\n    [proxy_protocol]\n    [setfib=number]\n    [fastopen=number]\n    [backlog=number]\n    [rcvbuf=size]\n    [sndbuf=size]\n    [accept_filter=filter]\n    [deferred]\n    [bind]\n    [ipv6only=on|off]\n    [reuseport]\n    [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];listen \n    port\n    [default_server]\n    [ssl]\n    [http2 | spdy]\n    [proxy_protocol]\n    [setfib=number]\n    [fastopen=number]\n    [backlog=number]\n    [rcvbuf=size]\n    [sndbuf=size]\n    [accept_filter=filter]\n    [deferred]\n    [bind]\n    [ipv6only=on|off]\n    [reuseport]\n    [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];listen \n    unix:path\n    [default_server]\n    [ssl]\n    [http2 | spdy]\n    [proxy_protocol]\n    [backlog=number]\n    [rcvbuf=size]\n    [sndbuf=size]\n    [accept_filter=filter]\n    [deferred]\n    [bind]\n    [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];",
    "def": "listen *:80 | *:8000;",
    "contexts": [
      "server"
    ],
    "desc": "Sets the address and port for IP,or the path for a UNIX-domain socket on whichthe server will accept requests.Both address and port,or only address or only port can be specified.An address may also be a hostname, for example:",
    "doc": "<p>\nSets the *`address`* and *`port`* for IP,\nor the *`path`* for a UNIX-domain socket on which\nthe server will accept requests.\nBoth *`address`* and *`port`*,\nor only *`address`* or only *`port`* can be specified.\nAn *`address`* may also be a hostname, for example:\n</p><blockquote class=\"example\"><pre>\nlisten 127.0.0.1:8000;\nlisten 127.0.0.1;\nlisten 8000;\nlisten *:8000;\nlisten localhost:8000;\n</pre></blockquote><p> \nIPv6 addresses (0.7.36) are specified in square brackets:\n</p><blockquote class=\"example\"><pre>\nlisten [::]:8000;\nlisten [::1];\n</pre></blockquote><p> \nUNIX-domain sockets (0.8.21) are specified with the &#x201C;`unix:`&#x201D;\nprefix:\n</p><blockquote class=\"example\"><pre>\nlisten unix:/var/run/nginx.sock;\n</pre></blockquote><p>\nIf only *`address`* is given, the port 80 is used.\n</p><p>\nIf the directive is not present then either `*:80` is used\nif nginx runs with the superuser privileges, or `*:8000`\notherwise.\n</p><p>\nThe `default_server` parameter, if present,\nwill cause the server to become the default server for the specified\n*`address`*:*`port`* pair.\nIf none of the directives have the `default_server`\nparameter then the first server with the\n*`address`*:*`port`* pair will be\nthe default server for this pair.\n</p><blockquote class=\"note\">\nIn versions prior to 0.8.21 this parameter is named simply\n<code>default</code>.\n</blockquote><p>\nThe `ssl` parameter (0.7.14) allows specifying that all\nconnections accepted on this port should work in SSL mode.\nThis allows for a more compact <a href=\"configuring_https_servers.html#single_http_https_server\">configuration</a> for the server that\nhandles both HTTP and HTTPS requests.\n</p><p>\nThe `http2` parameter (1.9.5) configures the port to accept\n<a href=\"ngx_http_v2_module.html\">HTTP/2</a> connections.\nNormally, for this to work the `ssl` parameter should be\nspecified as well, but nginx can also be configured to accept HTTP/2\nconnections without SSL.\n</p><p>\nThe `spdy` parameter (1.3.15-1.9.4) allows accepting\n<a href=\"ngx_http_spdy_module.html\">SPDY</a> connections on this port.\nNormally, for this to work the `ssl` parameter should be\nspecified as well, but nginx can also be configured to accept SPDY\nconnections without SSL.\n</p><p>\nThe `proxy_protocol` parameter (1.5.12)\nallows specifying that all connections accepted on this port should use the\n<a href=\"http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt\">PROXY\nprotocol</a>.\n</p><p>\nThe `listen` directive\ncan have several additional parameters specific to socket-related system calls.\nThese parameters can be specified in any\n`listen` directive, but only once for a given\n*`address`*:*`port`* pair.\n</p><blockquote class=\"note\">\nIn versions prior to 0.8.21, they could only be\nspecified in the <code>listen</code> directive together with the\n<code>default</code> parameter.\n</blockquote><dl class=\"compact\">\n\n<dt>\n<code>setfib</code>=<code><i>number</i></code>\n</dt>\n<dd>\nthis parameter (0.8.44) sets the associated routing table, FIB\n(the <code>SO_SETFIB</code> option) for the listening socket.\nThis currently works only on FreeBSD.\n</dd>\n\n<dt>\n<code>fastopen</code>=<code><i>number</i></code>\n</dt>\n<dd>\nenables\n&#x201C;<a href=\"http://en.wikipedia.org/wiki/TCP_Fast_Open\">TCP Fast Open</a>&#x201D;\nfor the listening socket (1.5.8) and\n<a href=\"https://tools.ietf.org/html/rfc7413#section-5.1\">limits</a>\nthe maximum length for the queue of connections that have not yet completed\nthe three-way handshake.\n<blockquote class=\"note\">\nDo not enable this feature unless the server can handle\nreceiving the\n<a href=\"https://tools.ietf.org/html/rfc7413#section-6.1\">\nsame SYN packet with data</a> more than once.\n</blockquote>\n</dd>\n\n<dt>\n<code>backlog</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the <code>backlog</code> parameter in the\n<code>listen()</code> call that limits\nthe maximum length for the queue of pending connections.\nBy default,\n<code>backlog</code> is set to -1 on FreeBSD, DragonFly BSD, and macOS,\nand to 511 on other platforms.\n</dd>\n\n<dt>\n<code>rcvbuf</code>=<code><i>size</i></code>\n</dt>\n<dd>\nsets the receive buffer size\n(the <code>SO_RCVBUF</code> option) for the listening socket.\n</dd>\n\n<dt>\n<code>sndbuf</code>=<code><i>size</i></code>\n</dt>\n<dd>\nsets the send buffer size\n(the <code>SO_SNDBUF</code> option) for the listening socket.\n</dd>\n\n<dt>\n<code>accept_filter</code>=<code><i>filter</i></code>\n</dt>\n<dd>\nsets the name of accept filter\n(the <code>SO_ACCEPTFILTER</code> option) for the listening socket\nthat filters incoming connections before passing them to\n<code>accept()</code>.\nThis works only on FreeBSD and NetBSD&#xA0;5.0+.\nPossible values are\n<a href=\"http://man.freebsd.org/accf_data\">dataready</a>\nand\n<a href=\"http://man.freebsd.org/accf_http\">httpready</a>.\n</dd>\n\n<dt>\n<code>deferred</code>\n</dt>\n<dd>\ninstructs to use a deferred <code>accept()</code>\n(the <code>TCP_DEFER_ACCEPT</code> socket option) on Linux.\n</dd>\n\n<dt>\n<code>bind</code>\n</dt>\n<dd>\ninstructs to make a separate <code>bind()</code> call for a given\n<code><i>address</i></code>:<code><i>port</i></code> pair.\nThis is useful because if there are several <code>listen</code>\ndirectives with the same port but different addresses, and one of the\n<code>listen</code> directives listens on all addresses\nfor the given port (<code>*:</code><code><i>port</i></code>), nginx\nwill <code>bind()</code> only to <code>*:</code><code><i>port</i></code>.\nIt should be noted that the <code>getsockname()</code> system call will be\nmade in this case to determine the address that accepted the connection.\nIf the <code>setfib</code>,\n<code>backlog</code>, <code>rcvbuf</code>,\n<code>sndbuf</code>, <code>accept_filter</code>,\n<code>deferred</code>, <code>ipv6only</code>,\nor <code>so_keepalive</code> parameters\nare used then for a given\n<code><i>address</i></code>:<code><i>port</i></code> pair\na separate <code>bind()</code> call will always be made.\n</dd>\n\n<dt>\n<code>ipv6only</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nthis parameter (0.7.42) determines\n(via the <code>IPV6_V6ONLY</code> socket option)\nwhether an IPv6 socket listening on a wildcard address <code>[::]</code>\nwill accept only IPv6 connections or both IPv6 and IPv4 connections.\nThis parameter is turned on by default.\nIt can only be set once on start.\n<blockquote class=\"note\">\nPrior to version 1.3.4,\nif this parameter was omitted then the operating system&#x2019;s settings were\nin effect for the socket.\n</blockquote>\n</dd>\n\n<dt id=\"reuseport\">\n<code>reuseport</code>\n</dt>\n<dd>\nthis parameter (1.9.1) instructs to create an individual listening socket\nfor each worker process\n(using the <code>SO_REUSEPORT</code> socket option), allowing a kernel\nto distribute incoming connections between worker processes.\nThis currently works only on Linux&#xA0;3.9+ and DragonFly BSD.\n<blockquote class=\"note\">\nInappropriate use of this option may have its security\n<a href=\"http://man7.org/linux/man-pages/man7/socket.7.html\">implications</a>.\n</blockquote>\n</dd>\n\n<dt>\n<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code><i>keepidle</i></code>]:[<code><i>keepintvl</i></code>]:[<code><i>keepcnt</i></code>]\n</dt>\n<dd>\nthis parameter (1.1.11) configures the &#x201C;TCP keepalive&#x201D; behavior\nfor the listening socket.\nIf this parameter is omitted then the operating system&#x2019;s settings will be\nin effect for the socket.\nIf it is set to the value &#x201C;<code>on</code>&#x201D;, the\n<code>SO_KEEPALIVE</code> option is turned on for the socket.\nIf it is set to the value &#x201C;<code>off</code>&#x201D;, the\n<code>SO_KEEPALIVE</code> option is turned off for the socket.\nSome operating systems support setting of TCP keepalive parameters on\na per-socket basis using the <code>TCP_KEEPIDLE</code>,\n<code>TCP_KEEPINTVL</code>, and <code>TCP_KEEPCNT</code> socket options.\nOn such systems (currently, Linux&#xA0;2.4+, NetBSD&#xA0;5+, and\nFreeBSD&#xA0;9.0-STABLE), they can be configured\nusing the <code><i>keepidle</i></code>, <code><i>keepintvl</i></code>, and\n<code><i>keepcnt</i></code> parameters.\nOne or two parameters may be omitted, in which case the system default setting\nfor the corresponding socket option will be in effect.\nFor example,\n<blockquote class=\"example\"><pre>so_keepalive=30m::10</pre></blockquote>\nwill set the idle timeout (<code>TCP_KEEPIDLE</code>) to 30 minutes,\nleave the probe interval (<code>TCP_KEEPINTVL</code>) at its system default,\nand set the probes count (<code>TCP_KEEPCNT</code>) to 10 probes.\n</dd>\n\n</dl><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nlisten 127.0.0.1 default_server accept_filter=dataready backlog=1024;\n</pre></blockquote>",
    "notes": [
      "\nIn versions prior to 0.8.21 this parameter is named simply\ndefault.\n",
      "\nIn versions prior to 0.8.21, they could only be\nspecified in the listen directive together with the\ndefault parameter.\n"
    ],
    "since": null,
    "link": "http/ngx_http_core_module.html#listen",
    "module": "ngx_http_core_module"
  },
  {
    "name": "location",
    "syntax": "location [\n    = |\n    ~ |\n    ~* |\n    ^~\n    ] uri { ... }location @name { ... }",
    "def": null,
    "contexts": [
      "server",
      "location"
    ],
    "desc": "Sets configuration depending on a request URI.",
    "doc": "<p>\nSets configuration depending on a request URI.\n</p><p>\nThe matching is performed against a normalized URI,\nafter decoding the text encoded in the &#x201C;`%XX`&#x201D; form,\nresolving references to relative path components &#x201C;`.`&#x201D;\nand &#x201C;`..`&#x201D;, and possible\n<a href=\"#merge_slashes\">compression</a> of two or more\nadjacent slashes into a single slash.\n</p><p>\nA location can either be defined by a prefix string, or by a regular expression.\nRegular expressions are specified with the preceding\n&#x201C;`~*`&#x201D; modifier (for case-insensitive matching), or the\n&#x201C;`~`&#x201D; modifier (for case-sensitive matching).\nTo find location matching a given request, nginx first checks\nlocations defined using the prefix strings (prefix locations).\nAmong them, the location with the longest matching\nprefix is selected and remembered.\nThen regular expressions are checked, in the order of their appearance\nin the configuration file.\nThe search of regular expressions terminates on the first match,\nand the corresponding configuration is used.\nIf no match with a regular expression is found then the\nconfiguration of the prefix location remembered earlier is used.\n</p><p>\n`location` blocks can be nested, with some exceptions\nmentioned below.\n</p><p>\nFor case-insensitive operating systems such as macOS and Cygwin,\nmatching with prefix strings ignores a case (0.7.7).\nHowever, comparison is limited to one-byte locales.\n</p><p>\nRegular expressions can contain captures (0.7.40) that can later\nbe used in other directives.\n</p><p>\nIf the longest matching prefix location has the &#x201C;`^~`&#x201D; modifier\nthen regular expressions are not checked.\n</p><p>\nAlso, using the &#x201C;`=`&#x201D; modifier it is possible to define\nan exact match of URI and location.\nIf an exact match is found, the search terminates.\nFor example, if a &#x201C;`/`&#x201D; request happens frequently,\ndefining &#x201C;`location = /`&#x201D; will speed up the processing\nof these requests, as search terminates right after the first\ncomparison.\nSuch a location cannot obviously contain nested locations.\n</p><blockquote class=\"note\">\nIn versions from 0.7.1 to 0.8.41, if a request matched the prefix\nlocation without the &#x201C;<code>=</code>&#x201D; and &#x201C;<code>^~</code>&#x201D;\nmodifiers, the search also terminated and regular expressions were\nnot checked.\n</blockquote><p>\nLet&#x2019;s illustrate the above by an example:\n</p><blockquote class=\"example\"><pre>\nlocation = / {\n    [ configuration A ]\n}\n\nlocation / {\n    [ configuration B ]\n}\n\nlocation /documents/ {\n    [ configuration C ]\n}\n\nlocation ^~ /images/ {\n    [ configuration D ]\n}\n\nlocation ~* \\.(gif|jpg|jpeg)$ {\n    [ configuration E ]\n}\n</pre></blockquote><p> \nThe &#x201C;`/`&#x201D; request will match configuration A,\nthe &#x201C;`/index.html`&#x201D; request will match configuration B,\nthe &#x201C;`/documents/document.html`&#x201D; request will match\nconfiguration C,\nthe &#x201C;`/images/1.gif`&#x201D; request will match configuration D, and\nthe &#x201C;`/documents/1.jpg`&#x201D; request will match configuration E.\n</p><p>\nThe &#x201C;`@`&#x201D; prefix defines a named location.\nSuch a location is not used for a regular request processing, but instead\nused for request redirection.\nThey cannot be nested, and cannot contain nested locations.\n</p><p>\nIf a location is defined by a prefix string that ends with the slash character,\nand requests are processed by one of\n<a href=\"ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a>,\n<a href=\"ngx_http_fastcgi_module.html#fastcgi_pass\">fastcgi_pass</a>,\n<a href=\"ngx_http_uwsgi_module.html#uwsgi_pass\">uwsgi_pass</a>,\n<a href=\"ngx_http_scgi_module.html#scgi_pass\">scgi_pass</a>, or\n<a href=\"ngx_http_memcached_module.html#memcached_pass\">memcached_pass</a>,\nthen the special processing is performed.\nIn response to a request with URI equal to this string,\nbut without the trailing slash,\na permanent redirect with the code 301 will be returned to the requested URI\nwith the slash appended.\nIf this is not desired, an exact match of the URI and location could be\ndefined like this:\n</p><blockquote class=\"example\"><pre>\nlocation /user/ {\n    proxy_pass http://user.example.com;\n}\n\nlocation = /user {\n    proxy_pass http://login.example.com;\n}\n</pre></blockquote>",
    "notes": [
      "\nIn versions from 0.7.1 to 0.8.41, if a request matched the prefix\nlocation without the “=” and “^~”\nmodifiers, the search also terminated and regular expressions were\nnot checked.\n"
    ],
    "since": null,
    "link": "http/ngx_http_core_module.html#location",
    "module": "ngx_http_core_module"
  },
  {
    "name": "log_not_found",
    "syntax": "log_not_found on | off;",
    "def": "log_not_found on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables logging of errors about not found files intoerror_log.",
    "doc": "<p>\nEnables or disables logging of errors about not found files into\n<a href=\"../ngx_core_module.html#error_log\">error_log</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#log_not_found",
    "module": "ngx_http_core_module"
  },
  {
    "name": "log_subrequest",
    "syntax": "log_subrequest on | off;",
    "def": "log_subrequest off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables logging of subrequests intoaccess_log.",
    "doc": "<p>\nEnables or disables logging of subrequests into\n<a href=\"ngx_http_log_module.html#access_log\">access_log</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#log_subrequest",
    "module": "ngx_http_core_module"
  },
  {
    "name": "max_ranges",
    "syntax": "max_ranges number;",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Limits the maximum allowed number of ranges in byte-range requests.Requests that exceed the limit are processed as if there were nobyte ranges specified.By default, the number of ranges is not limited.The zero value disables the byte-range support completely.",
    "doc": "<p>\nLimits the maximum allowed number of ranges in byte-range requests.\nRequests that exceed the limit are processed as if there were no\nbyte ranges specified.\nBy default, the number of ranges is not limited.\nThe zero value disables the byte-range support completely.\n</p>",
    "notes": [],
    "since": "1.1.2",
    "link": "http/ngx_http_core_module.html#max_ranges",
    "module": "ngx_http_core_module"
  },
  {
    "name": "merge_slashes",
    "syntax": "merge_slashes on | off;",
    "def": "merge_slashes on;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Enables or disables compression of two or more adjacent slashesin a URI into a single slash.",
    "doc": "<p>\nEnables or disables compression of two or more adjacent slashes\nin a URI into a single slash.\n</p><p>\nNote that compression is essential for the correct matching of prefix string\nand regular expression locations.\nWithout it, the &#x201C;`//scripts/one.php`&#x201D; request would not match\n</p><blockquote class=\"example\"><pre>\nlocation /scripts/ {\n    ...\n}\n</pre></blockquote><p> \nand might be processed as a static file.\nSo it gets converted to &#x201C;`/scripts/one.php`&#x201D;.\n</p><p>\nTurning the compression `off` can become necessary if a URI\ncontains base64-encoded names, since base64 uses the &#x201C;`/`&#x201D;\ncharacter internally.\nHowever, for security considerations, it is better to avoid turning\nthe compression off.\n</p><p>\nIf the directive is specified on the <a href=\"#server\">server</a> level,\nits value is only used if a server is a default one.\nThe value specified also applies to all virtual servers\nlistening on the same address and port.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#merge_slashes",
    "module": "ngx_http_core_module"
  },
  {
    "name": "msie_padding",
    "syntax": "msie_padding on | off;",
    "def": "msie_padding on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables adding comments to responses for MSIE clients with statusgreater than 400 to increase the response size to 512 bytes.",
    "doc": "<p>\nEnables or disables adding comments to responses for MSIE clients with status\ngreater than 400 to increase the response size to 512 bytes.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#msie_padding",
    "module": "ngx_http_core_module"
  },
  {
    "name": "msie_refresh",
    "syntax": "msie_refresh on | off;",
    "def": "msie_refresh off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables issuing refreshes instead of redirects for MSIE clients.",
    "doc": "<p>\nEnables or disables issuing refreshes instead of redirects for MSIE clients.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#msie_refresh",
    "module": "ngx_http_core_module"
  },
  {
    "name": "open_file_cache",
    "syntax": "open_file_cache off;open_file_cache \nmax=N\n[inactive=time];",
    "def": "open_file_cache off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Configures a cache that can store:",
    "doc": "<p>\nConfigures a cache that can store:\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#open_file_cache",
    "module": "ngx_http_core_module"
  },
  {
    "name": "open_file_cache_errors",
    "syntax": "open_file_cache_errors on | off;",
    "def": "open_file_cache_errors off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables caching of file lookup errors byopen_file_cache.",
    "doc": "<p>\nEnables or disables caching of file lookup errors by\n<a href=\"#open_file_cache\">open_file_cache</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#open_file_cache_errors",
    "module": "ngx_http_core_module"
  },
  {
    "name": "open_file_cache_min_uses",
    "syntax": "open_file_cache_min_uses number;",
    "def": "open_file_cache_min_uses 1;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the minimum number of file accesses duringthe period configured by the inactive parameterof the open_file_cache directive, required for a filedescriptor to remain open in the cache.",
    "doc": "<p>\nSets the minimum *`number`* of file accesses during\nthe period configured by the `inactive` parameter\nof the <a href=\"#open_file_cache\">open_file_cache</a> directive, required for a file\ndescriptor to remain open in the cache.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#open_file_cache_min_uses",
    "module": "ngx_http_core_module"
  },
  {
    "name": "open_file_cache_valid",
    "syntax": "open_file_cache_valid time;",
    "def": "open_file_cache_valid 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a time after whichopen_file_cacheelements should be validated.",
    "doc": "<p>\nSets a time after which\n<a href=\"#open_file_cache\">open_file_cache</a>\nelements should be validated.\n\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#open_file_cache_valid",
    "module": "ngx_http_core_module"
  },
  {
    "name": "output_buffers",
    "syntax": "output_buffers number size;",
    "def": "output_buffers 2 32k;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the number and size of thebuffers used for reading a response from a disk.",
    "doc": "<p>\nSets the *`number`* and *`size`* of the\nbuffers used for reading a response from a disk.\n</p><blockquote class=\"note\">\nPrior to version 1.9.5, the default value was 1 32k.\n</blockquote>",
    "notes": [
      "\nPrior to version 1.9.5, the default value was 1 32k.\n"
    ],
    "since": null,
    "link": "http/ngx_http_core_module.html#output_buffers",
    "module": "ngx_http_core_module"
  },
  {
    "name": "port_in_redirect",
    "syntax": "port_in_redirect on | off;",
    "def": "port_in_redirect on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables specifying the port inabsolute redirects issued by nginx.",
    "doc": "<p>\nEnables or disables specifying the port in\n<a href=\"#absolute_redirect\">absolute</a> redirects issued by nginx.\n</p><p>\nThe use of the primary server name in redirects is controlled by\nthe <a href=\"#server_name_in_redirect\">server_name_in_redirect</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#port_in_redirect",
    "module": "ngx_http_core_module"
  },
  {
    "name": "postpone_output",
    "syntax": "postpone_output size;",
    "def": "postpone_output 1460;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If possible, the transmission of client data will be postponed untilnginx has at least size bytes of data to send.The zero value disables postponing data transmission.",
    "doc": "<p>\nIf possible, the transmission of client data will be postponed until\nnginx has at least *`size`* bytes of data to send.\nThe zero value disables postponing data transmission.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#postpone_output",
    "module": "ngx_http_core_module"
  },
  {
    "name": "read_ahead",
    "syntax": "read_ahead size;",
    "def": "read_ahead 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the amount of pre-reading for the kernel when working with file.",
    "doc": "<p>\nSets the amount of pre-reading for the kernel when working with file.\n</p><p>\nOn Linux, the\n`posix_fadvise(0, 0, 0, POSIX_FADV_SEQUENTIAL)`\nsystem call is used, and so the *`size`* parameter is ignored.\n</p><p>\nOn FreeBSD, the\n`fcntl(O_READAHEAD,`\n*`size`*`)`\nsystem call, supported since FreeBSD&#xA0;9.0-CURRENT, is used.\nFreeBSD&#xA0;7 has to be\n<a href=\"http://sysoev.ru/freebsd/patch.readahead.txt\">patched</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#read_ahead",
    "module": "ngx_http_core_module"
  },
  {
    "name": "recursive_error_pages",
    "syntax": "recursive_error_pages on | off;",
    "def": "recursive_error_pages off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables doing several redirects using theerror_pagedirective.The number of such redirects is limited.",
    "doc": "<p>\nEnables or disables doing several redirects using the\n<a href=\"#error_page\">error_page</a>\ndirective.\nThe number of such redirects is <a href=\"#internal\">limited</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#recursive_error_pages",
    "module": "ngx_http_core_module"
  },
  {
    "name": "request_pool_size",
    "syntax": "request_pool_size size;",
    "def": "request_pool_size 4k;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Allows accurate tuning of per-request memory allocations.This directive has minimal impact on performanceand should not generally be used.",
    "doc": "<p>\nAllows accurate tuning of per-request memory allocations.\nThis directive has minimal impact on performance\nand should not generally be used.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#request_pool_size",
    "module": "ngx_http_core_module"
  },
  {
    "name": "reset_timedout_connection",
    "syntax": "reset_timedout_connection on | off;",
    "def": "reset_timedout_connection off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables resetting timed out connections.The reset is performed as follows.Before closing a socket, theSO_LINGERoption is set on it with a timeout value of 0.When the socket is closed, TCP RST is sent to the client, and all memoryoccupied by this socket is released.This helps avoid keeping an already closed socket with filled buffersin a FIN_WAIT1 state for a long time.",
    "doc": "<p>\nEnables or disables resetting timed out connections.\nThe reset is performed as follows.\nBefore closing a socket, the\n`SO_LINGER`\noption is set on it with a timeout value of 0.\nWhen the socket is closed, TCP RST is sent to the client, and all memory\noccupied by this socket is released.\nThis helps avoid keeping an already closed socket with filled buffers\nin a FIN_WAIT1 state for a long time.\n</p><p>\nIt should be noted that timed out keep-alive connections are\nclosed normally.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#reset_timedout_connection",
    "module": "ngx_http_core_module"
  },
  {
    "name": "resolver",
    "syntax": "resolver \n    address ...\n    [valid=time]\n    [ipv6=on|off];",
    "def": null,
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Configures name servers used to resolve names of upstream serversinto addresses, for example:",
    "doc": "<p>\nConfigures name servers used to resolve names of upstream servers\ninto addresses, for example:\n</p><blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p> \nAn address can be specified as a domain name or IP address,\nand an optional port (1.3.1, 1.2.2).\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\n</p><blockquote class=\"note\">\nBefore version 1.1.7, only a single name server could be configured.\nSpecifying name servers using IPv6 addresses is supported\nstarting from versions 1.3.1 and 1.2.2.\n</blockquote><p> \nBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv6 addresses is not desired,\nthe `ipv6=off` parameter can be specified.\n</p><blockquote class=\"note\">\nResolving of names into IPv6 addresses is supported\nstarting from version 1.5.8.\n</blockquote><p> \nBy default, nginx caches answers using the TTL value of a response.\nAn optional `valid` parameter allows overriding it:\n</p><blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353 valid=30s;\n</pre></blockquote><blockquote class=\"note\">\nBefore version 1.1.9, tuning of caching time was not possible,\nand nginx always cached answers for the duration of 5 minutes.\n</blockquote><blockquote class=\"note\">\nTo prevent DNS spoofing, it is recommended\nconfiguring DNS servers in a properly secured trusted local network.\n</blockquote>",
    "notes": [
      "\nBefore version 1.1.7, only a single name server could be configured.\nSpecifying name servers using IPv6 addresses is supported\nstarting from versions 1.3.1 and 1.2.2.\n",
      "\nResolving of names into IPv6 addresses is supported\nstarting from version 1.5.8.\n",
      "\nBefore version 1.1.9, tuning of caching time was not possible,\nand nginx always cached answers for the duration of 5 minutes.\n",
      "\nTo prevent DNS spoofing, it is recommended\nconfiguring DNS servers in a properly secured trusted local network.\n"
    ],
    "since": null,
    "link": "http/ngx_http_core_module.html#resolver",
    "module": "ngx_http_core_module"
  },
  {
    "name": "resolver_timeout",
    "syntax": "resolver_timeout time;",
    "def": "resolver_timeout 30s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a timeout for name resolution, for example:",
    "doc": "<p>\nSets a timeout for name resolution, for example:\n</p><blockquote class=\"example\"><pre>\nresolver_timeout 5s;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#resolver_timeout",
    "module": "ngx_http_core_module"
  },
  {
    "name": "root",
    "syntax": "root path;",
    "def": "root html;",
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Sets the root directory for requests.For example, with the following configuration",
    "doc": "<p>\nSets the root directory for requests.\nFor example, with the following configuration\n</p><blockquote class=\"example\"><pre>\nlocation /i/ {\n    root /data/w3;\n}\n</pre></blockquote><p> \nThe `/data/w3/i/top.gif` file will be sent in response to\nthe &#x201C;`/i/top.gif`&#x201D; request.\n</p><p>\nThe *`path`* value can contain variables,\nexcept `$document_root` and `$realpath_root`.\n</p><p>\nA path to the file is constructed by merely adding a URI to the value\nof the `root` directive.\nIf a URI has to be modified, the\n<a href=\"#alias\">alias</a> directive should be used.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#root",
    "module": "ngx_http_core_module"
  },
  {
    "name": "satisfy",
    "syntax": "satisfy all | any;",
    "def": "satisfy all;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Allows access if all (all) or at least one(any) of thengx_http_access_module,ngx_http_auth_basic_module,ngx_http_auth_request_module,orngx_http_auth_jwt_modulemodules allow access.",
    "doc": "<p>\nAllows access if all (`all`) or at least one\n(`any`) of the\n<a href=\"ngx_http_access_module.html\">ngx_http_access_module</a>,\n<a href=\"ngx_http_auth_basic_module.html\">ngx_http_auth_basic_module</a>,\n<a href=\"ngx_http_auth_request_module.html\">ngx_http_auth_request_module</a>,\nor\n<a href=\"ngx_http_auth_jwt_module.html\">ngx_http_auth_jwt_module</a>\nmodules allow access.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nlocation / {\n    satisfy any;\n\n    allow 192.168.1.0/32;\n    deny  all;\n\n    auth_basic           &quot;closed site&quot;;\n    auth_basic_user_file conf/htpasswd;\n}\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#satisfy",
    "module": "ngx_http_core_module"
  },
  {
    "name": "send_lowat",
    "syntax": "send_lowat size;",
    "def": "send_lowat 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "If the directive is set to a non-zero value, nginx will try to minimizethe number of send operations on client sockets by using eitherNOTE_LOWAT flag of thekqueue methodor the SO_SNDLOWAT socket option.In both cases the specified size is used.",
    "doc": "<p>\nIf the directive is set to a non-zero value, nginx will try to minimize\nthe number of send operations on client sockets by using either\n`NOTE_LOWAT` flag of the\n<a href=\"../events.html#kqueue\">kqueue</a> method\nor the `SO_SNDLOWAT` socket option.\nIn both cases the specified *`size`* is used.\n</p><p>\nThis directive is ignored on Linux, Solaris, and Windows.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#send_lowat",
    "module": "ngx_http_core_module"
  },
  {
    "name": "send_timeout",
    "syntax": "send_timeout time;",
    "def": "send_timeout 60s;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets a timeout for transmitting a response to the client.The timeout is set only between two successive write operations,not for the transmission of the whole response.If the client does not receive anything within this time,the connection is closed.",
    "doc": "<p>\nSets a timeout for transmitting a response to the client.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole response.\nIf the client does not receive anything within this time,\nthe connection is closed.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#send_timeout",
    "module": "ngx_http_core_module"
  },
  {
    "name": "sendfile",
    "syntax": "sendfile on | off;",
    "def": "sendfile off;",
    "contexts": [
      "http",
      "server",
      "location",
      "ifinlocation"
    ],
    "desc": "Enables or disables the use ofsendfile().",
    "doc": "<p>\nEnables or disables the use of\n`sendfile()`.\n</p><p>\nStarting from nginx&#xA0;0.8.12 and FreeBSD&#xA0;5.2.1,\n<a href=\"#aio\">aio</a> can be used to pre-load data\nfor `sendfile()`:\n</p><blockquote class=\"example\"><pre>\nlocation /video/ {\n    sendfile       on;\n    tcp_nopush     on;\n    aio            on;\n}\n</pre></blockquote><p> \nIn this configuration, `sendfile()` is called with\nthe `SF_NODISKIO` flag which causes it not to block on disk I/O,\nbut, instead, report back that the data are not in memory.\nnginx then initiates an asynchronous data load by reading one byte.\nOn the first read, the FreeBSD kernel loads the first 128K bytes\nof a file into memory, although next reads will only load data in 16K chunks.\nThis can be changed using the\n<a href=\"#read_ahead\">read_ahead</a> directive.\n</p><blockquote class=\"note\">\nBefore version 1.7.11, pre-loading could be enabled with\n<code>aio sendfile;</code>.\n</blockquote>",
    "notes": [
      "\nBefore version 1.7.11, pre-loading could be enabled with\naio sendfile;.\n"
    ],
    "since": null,
    "link": "http/ngx_http_core_module.html#sendfile",
    "module": "ngx_http_core_module"
  },
  {
    "name": "sendfile_max_chunk",
    "syntax": "sendfile_max_chunk size;",
    "def": "sendfile_max_chunk 0;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "When set to a non-zero value, limits the amount of data that can betransferred in a single sendfile() call.Without the limit, one fast connection may seize the worker process entirely.",
    "doc": "<p>\nWhen set to a non-zero value, limits the amount of data that can be\ntransferred in a single `sendfile()` call.\nWithout the limit, one fast connection may seize the worker process entirely.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#sendfile_max_chunk",
    "module": "ngx_http_core_module"
  },
  {
    "name": "server",
    "syntax": "server { ... }",
    "def": null,
    "contexts": [
      "http"
    ],
    "desc": "Sets configuration for a virtual server.There is no clear separation between IP-based (based on the IP address)and name-based (based on the “Host” request header field)virtual servers.Instead, the listen directives describe alladdresses and ports that should accept connections for the server, and theserver_name directive lists all server names.Example configurations are provided in the“How nginx processes a request” document.",
    "doc": "<p>\nSets configuration for a virtual server.\nThere is no clear separation between IP-based (based on the IP address)\nand name-based (based on the &#x201C;Host&#x201D; request header field)\nvirtual servers.\nInstead, the <a href=\"#listen\">listen</a> directives describe all\naddresses and ports that should accept connections for the server, and the\n<a href=\"#server_name\">server_name</a> directive lists all server names.\nExample configurations are provided in the\n&#x201C;<a href=\"request_processing.html\">How nginx processes a request</a>&#x201D; document.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#server",
    "module": "ngx_http_core_module"
  },
  {
    "name": "server_name",
    "syntax": "server_name name ...;",
    "def": "server_name \"\";",
    "contexts": [
      "server"
    ],
    "desc": "Sets names of a virtual server, for example:",
    "doc": "<p>\nSets names of a virtual server, for example:\n</p><blockquote class=\"example\"><pre>\nserver {\n    server_name example.com www.example.com;\n}\n</pre></blockquote><p>\nThe first name becomes the primary server name.\n</p><p>\nServer names can include an asterisk (&#x201C;`*`&#x201D;)\nreplacing the first or last part of a name:\n</p><blockquote class=\"example\"><pre>\nserver {\n    server_name example.com *.example.com www.example.*;\n}\n</pre></blockquote><p> \nSuch names are called wildcard names.\n</p><p>\nThe first two of the names mentioned above can be combined in one:\n</p><blockquote class=\"example\"><pre>\nserver {\n    server_name .example.com;\n}\n</pre></blockquote><p>\nIt is also possible to use regular expressions in server names,\npreceding the name with a tilde (&#x201C;`~`&#x201D;):\n</p><blockquote class=\"example\"><pre>\nserver {\n    server_name www.example.com ~^www\\d+\\.example\\.com$;\n}\n</pre></blockquote><p>\nRegular expressions can contain captures (0.7.40) that can later\nbe used in other directives:\n</p><blockquote class=\"example\"><pre>\nserver {\n    server_name ~^(www\\.)?(.+)$;\n\n    location / {\n        root /sites/$2;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n</pre></blockquote><p>\nNamed captures in regular expressions create variables (0.8.25)\nthat can later be used in other directives:\n</p><blockquote class=\"example\"><pre>\nserver {\n    server_name ~^(www\\.)?(?&lt;domain&gt;.+)$;\n\n    location / {\n        root /sites/$domain;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n</pre></blockquote><p>\nIf the directive&#x2019;s parameter is set to &#x201C;`$hostname`&#x201D; (0.9.4), the\nmachine&#x2019;s hostname is inserted.\n</p><p>\nIt is also possible to specify an empty server name (0.7.11):\n</p><blockquote class=\"example\"><pre>\nserver {\n    server_name www.example.com &quot;&quot;;\n}\n</pre></blockquote><p> \nIt allows this server to process requests without the &#x201C;Host&#x201D;\nheader field&#xA0;&#x2014; instead of the default server&#xA0;&#x2014; for the given address:port pair.\nThis is the default setting.\n</p><blockquote class=\"note\">\nBefore 0.8.48, the machine&#x2019;s hostname was used by default.\n</blockquote><p>\nDuring searching for a virtual server by name,\nif the name matches more than one of the specified variants,\n(e.g. both a wildcard name and regular expression match), the first matching\nvariant will be chosen, in the following order of priority:\n</p>",
    "notes": [
      "\nBefore 0.8.48, the machine’s hostname was used by default.\n"
    ],
    "since": null,
    "link": "http/ngx_http_core_module.html#server_name",
    "module": "ngx_http_core_module"
  },
  {
    "name": "server_name_in_redirect",
    "syntax": "server_name_in_redirect on | off;",
    "def": "server_name_in_redirect off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables the use of the primary server name, specified by theserver_name directive,in absolute redirects issued by nginx.When the use of the primary server name is disabled, the name from the“Host” request header field is used.If this field is not present, the IP address of the server is used.",
    "doc": "<p>\nEnables or disables the use of the primary server name, specified by the\n<a href=\"#server_name\">server_name</a> directive,\nin <a href=\"#absolute_redirect\">absolute</a> redirects issued by nginx.\nWhen the use of the primary server name is disabled, the name from the\n&#x201C;Host&#x201D; request header field is used.\nIf this field is not present, the IP address of the server is used.\n</p><p>\nThe use of a port in redirects is controlled by\nthe <a href=\"#port_in_redirect\">port_in_redirect</a> directive.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#server_name_in_redirect",
    "module": "ngx_http_core_module"
  },
  {
    "name": "server_names_hash_bucket_size",
    "syntax": "server_names_hash_bucket_size size;",
    "def": "server_names_hash_bucket_size 32|64|128;",
    "contexts": [
      "http"
    ],
    "desc": "Sets the bucket size for the server names hash tables.The default value depends on the size of the processor’s cache line.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the bucket size for the server names hash tables.\nThe default value depends on the size of the processor&#x2019;s cache line.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#server_names_hash_bucket_size",
    "module": "ngx_http_core_module"
  },
  {
    "name": "server_names_hash_max_size",
    "syntax": "server_names_hash_max_size size;",
    "def": "server_names_hash_max_size 512;",
    "contexts": [
      "http"
    ],
    "desc": "Sets the maximum size of the server names hash tables.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the maximum *`size`* of the server names hash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#server_names_hash_max_size",
    "module": "ngx_http_core_module"
  },
  {
    "name": "server_tokens",
    "syntax": "server_tokens \n    on |\n    off |\n    build |\n    string;",
    "def": "server_tokens on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables emitting nginx version on error pages and in the“Server” response header field.",
    "doc": "<p>\nEnables or disables emitting nginx version on error pages and in the\n&#x201C;Server&#x201D; response header field.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#server_tokens",
    "module": "ngx_http_core_module"
  },
  {
    "name": "tcp_nodelay",
    "syntax": "tcp_nodelay on | off;",
    "def": "tcp_nodelay on;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables the use of the TCP_NODELAY option.The option is enabled only when a connection is transitioned into thekeep-alive state.",
    "doc": "<p>\nEnables or disables the use of the `TCP_NODELAY` option.\nThe option is enabled only when a connection is transitioned into the\nkeep-alive state.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#tcp_nodelay",
    "module": "ngx_http_core_module"
  },
  {
    "name": "tcp_nopush",
    "syntax": "tcp_nopush on | off;",
    "def": "tcp_nopush off;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Enables or disables the use ofthe TCP_NOPUSH socket option on FreeBSDor the TCP_CORK socket option on Linux.The options are enabled only when sendfile is used.Enabling the option allows",
    "doc": "<p>\nEnables or disables the use of\nthe `TCP_NOPUSH` socket option on FreeBSD\nor the `TCP_CORK` socket option on Linux.\nThe options are enabled only when <a href=\"#sendfile\">sendfile</a> is used.\nEnabling the option allows\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#tcp_nopush",
    "module": "ngx_http_core_module"
  },
  {
    "name": "try_files",
    "syntax": "try_files file ... uri;try_files file ... =code;",
    "def": null,
    "contexts": [
      "server",
      "location"
    ],
    "desc": "Checks the existence of files in the specified order and usesthe first found file for request processing; the processingis performed in the current context.The path to a file is constructed from thefile parameteraccording to theroot and alias directives.It is possible to check directory’s existence by specifyinga slash at the end of a name, e.g. “$uri/”.If none of the files were found, an internal redirect to theuri specified in the last parameter is made.For example:",
    "doc": "<p>\nChecks the existence of files in the specified order and uses\nthe first found file for request processing; the processing\nis performed in the current context.\nThe path to a file is constructed from the\n*`file`* parameter\naccording to the\n<a href=\"#root\">root</a> and <a href=\"#alias\">alias</a> directives.\nIt is possible to check directory&#x2019;s existence by specifying\na slash at the end of a name, e.g. &#x201C;`$uri/`&#x201D;.\nIf none of the files were found, an internal redirect to the\n*`uri`* specified in the last parameter is made.\nFor example:\n</p><blockquote class=\"example\"><pre>\nlocation /images/ {\n    try_files $uri /images/default.gif;\n}\n\nlocation = /images/default.gif {\n    expires 30s;\n}\n</pre></blockquote><p> \nThe last parameter can also point to a named location,\nas shown in examples below.\nStarting from version 0.7.51, the last parameter can also be a\n*`code`*:\n</p><blockquote class=\"example\"><pre>\nlocation / {\n    try_files $uri $uri/index.html $uri.html =404;\n}\n</pre></blockquote><p>\nExample in proxying Mongrel:\n</p><blockquote class=\"example\"><pre>\nlocation / {\n    try_files /system/maintenance.html\n              $uri $uri/index.html $uri.html\n              @mongrel;\n}\n\nlocation @mongrel {\n    proxy_pass http://mongrel;\n}\n</pre></blockquote><p>\nExample for Drupal/FastCGI:\n</p><blockquote class=\"example\"><pre>\nlocation / {\n    try_files $uri $uri/ @drupal;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    fastcgi_param SCRIPT_NAME     $fastcgi_script_name;\n    fastcgi_param QUERY_STRING    $args;\n\n    ... other fastcgi_param&apos;s\n}\n\nlocation @drupal {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    fastcgi_param SCRIPT_NAME     /index.php;\n    fastcgi_param QUERY_STRING    q=$uri&amp;$args;\n\n    ... other fastcgi_param&apos;s\n}\n</pre></blockquote><p> \nIn the following example,\n</p><blockquote class=\"example\"><pre>\nlocation / {\n    try_files $uri $uri/ @drupal;\n}\n</pre></blockquote><p> \nthe `try_files` directive is equivalent to\n</p><blockquote class=\"example\"><pre>\nlocation / {\n    error_page 404 = @drupal;\n    log_not_found off;\n}\n</pre></blockquote><p> \nAnd here,\n</p><blockquote class=\"example\"><pre>\nlocation ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n\n    ...\n}\n</pre></blockquote><p> \n`try_files` checks the existence of the PHP file\nbefore passing the request to the FastCGI server.\n</p><p>\nExample for Wordpress and Joomla:\n</p><blockquote class=\"example\"><pre>\nlocation / {\n    try_files $uri $uri/ @wordpress;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @wordpress;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    ... other fastcgi_param&apos;s\n}\n\nlocation @wordpress {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    ... other fastcgi_param&apos;s\n}\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#try_files",
    "module": "ngx_http_core_module"
  },
  {
    "name": "types",
    "syntax": "types { ... }",
    "def": "types {\n    text/html  html;\n    image/gif  gif;\n    image/jpeg jpg;\n}",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Maps file name extensions to MIME types of responses.Extensions are case-insensitive.Several extensions can be mapped to one type, for example:",
    "doc": "<p>\nMaps file name extensions to MIME types of responses.\nExtensions are case-insensitive.\nSeveral extensions can be mapped to one type, for example:\n</p><blockquote class=\"example\"><pre>\ntypes {\n    application/octet-stream bin exe dll;\n    application/octet-stream deb;\n    application/octet-stream dmg;\n}\n</pre></blockquote><p>\nA sufficiently full mapping table is distributed with nginx in the\n`conf/mime.types` file.\n</p><p>\nTo make a particular location emit the\n&#x201C;`application/octet-stream`&#x201D;\nMIME type for all requests, the following configuration can be used:\n</p><blockquote class=\"example\"><pre>\nlocation /download/ {\n    types        { }\n    default_type application/octet-stream;\n}\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#types",
    "module": "ngx_http_core_module"
  },
  {
    "name": "types_hash_bucket_size",
    "syntax": "types_hash_bucket_size size;",
    "def": "types_hash_bucket_size 64;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the bucket size for the types hash tables.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the bucket size for the types hash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p><blockquote class=\"note\">\nPrior to version 1.5.13,\nthe default value depended on the size of the processor&#x2019;s cache line.\n</blockquote>",
    "notes": [
      "\nPrior to version 1.5.13,\nthe default value depended on the size of the processor’s cache line.\n"
    ],
    "since": null,
    "link": "http/ngx_http_core_module.html#types_hash_bucket_size",
    "module": "ngx_http_core_module"
  },
  {
    "name": "types_hash_max_size",
    "syntax": "types_hash_max_size size;",
    "def": "types_hash_max_size 1024;",
    "contexts": [
      "http",
      "server",
      "location"
    ],
    "desc": "Sets the maximum size of the types hash tables.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the maximum *`size`* of the types hash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#types_hash_max_size",
    "module": "ngx_http_core_module"
  },
  {
    "name": "underscores_in_headers",
    "syntax": "underscores_in_headers on | off;",
    "def": "underscores_in_headers off;",
    "contexts": [
      "http",
      "server"
    ],
    "desc": "Enables or disables the use of underscores in client request header fields.When the use of underscores is disabled, request header fields whose namescontain underscores aremarked as invalid and become subject to theignore_invalid_headers directive.",
    "doc": "<p>\nEnables or disables the use of underscores in client request header fields.\nWhen the use of underscores is disabled, request header fields whose names\ncontain underscores are\nmarked as invalid and become subject to the\n<a href=\"#ignore_invalid_headers\">ignore_invalid_headers</a> directive.\n</p><p>\nIf the directive is specified on the <a href=\"#server\">server</a> level,\nits value is only used if a server is a default one.\nThe value specified also applies to all virtual servers\nlistening on the same address and port.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#underscores_in_headers",
    "module": "ngx_http_core_module"
  },
  {
    "name": "variables_hash_bucket_size",
    "syntax": "variables_hash_bucket_size size;",
    "def": "variables_hash_bucket_size 64;",
    "contexts": [
      "http"
    ],
    "desc": "Sets the bucket size for the variables hash table.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the bucket size for the variables hash table.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "http/ngx_http_core_module.html#variables_hash_bucket_size",
    "module": "ngx_http_core_module"
  },
  {
    "name": "variables_hash_max_size",
    "syntax": "variables_hash_max_size size;",
    "def": "variables_hash_max_size 1024;",
    "contexts": [
      "http"
    ],
    "desc": "Sets the maximum size of the variables hash table.The details of setting up hash tables are provided in a separatedocument.",
    "doc": "<p>\nSets the maximum *`size`* of the variables hash table.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p><blockquote class=\"note\">\nPrior to version 1.5.13, the default value was 512.\n</blockquote>",
    "notes": [
      "\nPrior to version 1.5.13, the default value was 512.\n"
    ],
    "since": null,
    "link": "http/ngx_http_core_module.html#variables_hash_max_size",
    "module": "ngx_http_core_module"
  },
  {
    "name": "accept_mutex",
    "syntax": "accept_mutex on | off;",
    "def": "accept_mutex off;",
    "contexts": [
      "events"
    ],
    "desc": "If accept_mutex is enabled,worker processes will accept new connections by turn.Otherwise, all worker processes will be notified about new connections,and if volume of new connections is low, some of the worker processesmay just waste system resources.",
    "doc": "<p>\nIf `accept_mutex` is enabled,\nworker processes will accept new connections by turn.\nOtherwise, all worker processes will be notified about new connections,\nand if volume of new connections is low, some of the worker processes\nmay just waste system resources.\n</p><blockquote class=\"note\">\nThere is no need to enable <code>accept_mutex</code>\non systems that support the\n<a href=\"events.html#epoll\">EPOLLEXCLUSIVE</a> flag (1.11.3) or\nwhen using <a href=\"http/ngx_http_core_module.html#reuseport\">reuseport</a>.\n</blockquote><blockquote class=\"note\">\nPrior to version 1.11.3, the default value was <code>on</code>.\n</blockquote>",
    "notes": [
      "\nThere is no need to enable accept_mutex\non systems that support the\nEPOLLEXCLUSIVE flag (1.11.3) or\nwhen using reuseport.\n",
      "\nPrior to version 1.11.3, the default value was on.\n"
    ],
    "since": null,
    "link": "ngx_core_module.html#accept_mutex",
    "module": "Core functionality"
  },
  {
    "name": "accept_mutex_delay",
    "syntax": "accept_mutex_delay time;",
    "def": "accept_mutex_delay 500ms;",
    "contexts": [
      "events"
    ],
    "desc": "If accept_mutex is enabled, specifies the maximum timeduring which a worker process will try to restart accepting newconnections if another worker process is currently acceptingnew connections.",
    "doc": "<p>\nIf <a href=\"#accept_mutex\">accept_mutex</a> is enabled, specifies the maximum time\nduring which a worker process will try to restart accepting new\nconnections if another worker process is currently accepting\nnew connections.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#accept_mutex_delay",
    "module": "Core functionality"
  },
  {
    "name": "daemon",
    "syntax": "daemon on | off;",
    "def": "daemon on;",
    "contexts": [
      "main"
    ],
    "desc": "Determines whether nginx should become a daemon.Mainly used during development.",
    "doc": "<p>\nDetermines whether nginx should become a daemon.\nMainly used during development.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#daemon",
    "module": "Core functionality"
  },
  {
    "name": "debug_connection",
    "syntax": "debug_connection \n    address |\n    CIDR |\n    unix:;",
    "def": null,
    "contexts": [
      "events"
    ],
    "desc": "Enables debugging log for selected client connections.Other connections will use logging level set by theerror_log directive.Debugged connections are specified by IPv4 or IPv6 (1.3.0, 1.2.1)address or network.A connection may also be specified using a hostname.For connections using UNIX-domain sockets (1.3.0, 1.2.1),debugging log is enabled by the “unix:” parameter.",
    "doc": "<p>\nEnables debugging log for selected client connections.\nOther connections will use logging level set by the\n<a href=\"#error_log\">error_log</a> directive.\nDebugged connections are specified by IPv4 or IPv6 (1.3.0, 1.2.1)\naddress or network.\nA connection may also be specified using a hostname.\nFor connections using UNIX-domain sockets (1.3.0, 1.2.1),\ndebugging log is enabled by the &#x201C;`unix:`&#x201D; parameter.\n</p><blockquote class=\"example\"><pre>\nevents {\n    debug_connection 127.0.0.1;\n    debug_connection localhost;\n    debug_connection 192.0.2.0/24;\n    debug_connection ::1;\n    debug_connection 2001:0db8::/32;\n    debug_connection unix:;\n    ...\n}\n</pre></blockquote><blockquote class=\"note\">\nFor this directive to work, nginx needs to\nbe built with <code>--with-debug</code>,\nsee &#x201C;<a href=\"debugging_log.html\">A debugging log</a>&#x201D;.\n</blockquote>",
    "notes": [
      "\nFor this directive to work, nginx needs to\nbe built with --with-debug,\nsee “A debugging log”.\n"
    ],
    "since": null,
    "link": "ngx_core_module.html#debug_connection",
    "module": "Core functionality"
  },
  {
    "name": "debug_points",
    "syntax": "debug_points abort | stop;",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "This directive is used for debugging.",
    "doc": "<p>\nThis directive is used for debugging.\n</p><p>\nWhen internal error is detected, e.g. the leak of sockets on\nrestart of working processes, enabling `debug_points`\nleads to a core file creation (`abort`)\nor to stopping of a process (`stop`) for further\nanalysis using a system debugger.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#debug_points",
    "module": "Core functionality"
  },
  {
    "name": "error_log",
    "syntax": "error_log file [level];",
    "def": "error_log logs/error.log error;",
    "contexts": [
      "main",
      "http",
      "mail",
      "stream",
      "server",
      "location"
    ],
    "desc": "Configures logging.Several logs can be specified on the same level (1.5.2).If on the main configuration level writing a log to a fileis not explicitly defined, the default file will be used.",
    "doc": "<p>\nConfigures logging.\nSeveral logs can be specified on the same level (1.5.2).\nIf on the `main` configuration level writing a log to a file\nis not explicitly defined, the default file will be used.\n</p><p>\nThe first parameter defines a *`file`* that will store the log.\n\nThe special value `stderr` selects the standard error file.\nLogging to <a href=\"syslog.html\">syslog</a> can be configured by specifying\nthe &#x201C;`syslog:`&#x201D; prefix.\nLogging to a\n<a href=\"debugging_log.html#memory\">cyclic memory buffer</a>\ncan be configured by specifying the &#x201C;`memory:`&#x201D; prefix and\nbuffer *`size`*, and is generally used for debugging (1.7.11).\n</p><p>\nThe second parameter determines the *`level`* of logging,\nand can be one of the following:\n`debug`, `info`, `notice`,\n`warn`, `error`, `crit`,\n`alert`, or `emerg`.\nLog levels above are listed in the order of increasing severity.\nSetting a certain log level will cause all messages of\nthe specified and more severe log levels to be logged.\nFor example, the default level `error` will\ncause `error`, `crit`,\n`alert`, and `emerg` messages\nto be logged.\nIf this parameter is omitted then `error` is used.\n</p><blockquote class=\"note\">\nFor <code>debug</code> logging to work, nginx needs to\nbe built with <code>--with-debug</code>,\nsee &#x201C;<a href=\"debugging_log.html\">A debugging log</a>&#x201D;.\n</blockquote><blockquote class=\"note\">\nThe directive can be specified on the\n<code>stream</code> level\nstarting from version 1.7.11,\nand on the <code>mail</code> level\nstarting from version 1.9.0.\n</blockquote>",
    "notes": [
      "\nFor debug logging to work, nginx needs to\nbe built with --with-debug,\nsee “A debugging log”.\n",
      "\nThe directive can be specified on the\nstream level\nstarting from version 1.7.11,\nand on the mail level\nstarting from version 1.9.0.\n"
    ],
    "since": null,
    "link": "ngx_core_module.html#error_log",
    "module": "Core functionality"
  },
  {
    "name": "env",
    "syntax": "env variable[=value];",
    "def": "env TZ;",
    "contexts": [
      "main"
    ],
    "desc": "By default, nginx removes all environment variables inheritedfrom its parent process except the TZ variable.This directive allows preserving some of the inherited variables,changing their values, or creating new environment variables.These variables are then:",
    "doc": "<p>\nBy default, nginx removes all environment variables inherited\nfrom its parent process except the TZ variable.\nThis directive allows preserving some of the inherited variables,\nchanging their values, or creating new environment variables.\nThese variables are then:\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#env",
    "module": "Core functionality"
  },
  {
    "name": "events",
    "syntax": "events { ... }",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Provides the configuration file context in which the directives thataffect connection processing are specified.",
    "doc": "<p>\nProvides the configuration file context in which the directives that\naffect connection processing are specified.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#events",
    "module": "Core functionality"
  },
  {
    "name": "include",
    "syntax": "include file | mask;",
    "def": null,
    "contexts": [
      "any"
    ],
    "desc": "Includes another file, or files matching thespecified mask, into configuration.Included files should consist ofsyntactically correct directives and blocks.",
    "doc": "<p>\nIncludes another *`file`*, or files matching the\nspecified *`mask`*, into configuration.\nIncluded files should consist of\nsyntactically correct directives and blocks.\n</p><p>\nUsage example:\n</p><blockquote class=\"example\"><pre>\ninclude mime.types;\ninclude vhosts/*.conf;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#include",
    "module": "Core functionality"
  },
  {
    "name": "load_module",
    "syntax": "load_module file;",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Loads a dynamic module.",
    "doc": "<p>\nLoads a dynamic module.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nload_module modules/ngx_mail_module.so;\n</pre></blockquote>",
    "notes": [],
    "since": "1.9.11",
    "link": "ngx_core_module.html#load_module",
    "module": "Core functionality"
  },
  {
    "name": "lock_file",
    "syntax": "lock_file file;",
    "def": "lock_file logs/nginx.lock;",
    "contexts": [
      "main"
    ],
    "desc": "nginx uses the locking mechanism to implement accept_mutexand serialize access to shared memory.On most systems the locks are implemented using atomic operations,and this directive is ignored.On other systems the “lock file” mechanism is used.This directive specifies a prefix for the names of lock files.",
    "doc": "<p>\nnginx uses the locking mechanism to implement <a href=\"#accept_mutex\">accept_mutex</a>\nand serialize access to shared memory.\nOn most systems the locks are implemented using atomic operations,\nand this directive is ignored.\nOn other systems the &#x201C;lock file&#x201D; mechanism is used.\nThis directive specifies a prefix for the names of lock files.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#lock_file",
    "module": "Core functionality"
  },
  {
    "name": "master_process",
    "syntax": "master_process on | off;",
    "def": "master_process on;",
    "contexts": [
      "main"
    ],
    "desc": "Determines whether worker processes are started.This directive is intended for nginx developers.",
    "doc": "<p>\nDetermines whether worker processes are started.\nThis directive is intended for nginx developers.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#master_process",
    "module": "Core functionality"
  },
  {
    "name": "multi_accept",
    "syntax": "multi_accept on | off;",
    "def": "multi_accept off;",
    "contexts": [
      "events"
    ],
    "desc": "If multi_accept is disabled, a worker processwill accept one new connection at a time.Otherwise, a worker processwill accept all new connections at a time.",
    "doc": "<p>\nIf `multi_accept` is disabled, a worker process\nwill accept one new connection at a time.\nOtherwise, a worker process\nwill accept all new connections at a time.\n</p><blockquote class=\"note\">\nThe directive is ignored if <a href=\"events.html#kqueue\">kqueue</a>\nconnection processing method is used, because it reports\nthe number of new connections waiting to be accepted.\n</blockquote>",
    "notes": [
      "\nThe directive is ignored if kqueue\nconnection processing method is used, because it reports\nthe number of new connections waiting to be accepted.\n"
    ],
    "since": null,
    "link": "ngx_core_module.html#multi_accept",
    "module": "Core functionality"
  },
  {
    "name": "pcre_jit",
    "syntax": "pcre_jit on | off;",
    "def": "pcre_jit off;",
    "contexts": [
      "main"
    ],
    "desc": "Enables or disables the use of “just-in-time compilation” (PCRE JIT)for the regular expressions known by the time of configuration parsing.",
    "doc": "<p>\nEnables or disables the use of &#x201C;just-in-time compilation&#x201D; (PCRE JIT)\nfor the regular expressions known by the time of configuration parsing.\n</p><p>\nPCRE JIT can speed up processing of regular expressions significantly.\n</p><blockquote class=\"note\">\nThe JIT is available in PCRE libraries starting from version 8.20\nbuilt with the <code>--enable-jit</code> configuration parameter.\nWhen the PCRE library is built with nginx (<code>--with-pcre=</code>),\nthe JIT support is enabled via the\n<code>--with-pcre-jit</code> configuration parameter.\n</blockquote>",
    "notes": [
      "\nThe JIT is available in PCRE libraries starting from version 8.20\nbuilt with the --enable-jit configuration parameter.\nWhen the PCRE library is built with nginx (--with-pcre=),\nthe JIT support is enabled via the\n--with-pcre-jit configuration parameter.\n"
    ],
    "since": "1.1.12",
    "link": "ngx_core_module.html#pcre_jit",
    "module": "Core functionality"
  },
  {
    "name": "pid",
    "syntax": "pid file;",
    "def": "pid nginx.pid;",
    "contexts": [
      "main"
    ],
    "desc": "Defines a file that will store the process ID of the main process.",
    "doc": "<p>\nDefines a *`file`* that will store the process ID of the main process.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#pid",
    "module": "Core functionality"
  },
  {
    "name": "ssl_engine",
    "syntax": "ssl_engine device;",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Defines the name of the hardware SSL accelerator.",
    "doc": "<p>\nDefines the name of the hardware SSL accelerator.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#ssl_engine",
    "module": "Core functionality"
  },
  {
    "name": "thread_pool",
    "syntax": "thread_pool \n    name\n    threads=number\n    [max_queue=number];",
    "def": "thread_pool default threads=32 max_queue=65536;",
    "contexts": [
      "main"
    ],
    "desc": "Defines named thread poolsused for multi-threaded reading and sending of fileswithout blockingworker processes.",
    "doc": "<p>\nDefines named thread pools\nused for multi-threaded reading and sending of files\n<a href=\"http/ngx_http_core_module.html#aio\">without blocking</a>\nworker processes.\n</p><p>\nThe `threads` parameter\ndefines the number of threads in the pool.\n</p><p>\nIn the event that all threads in the pool are busy,\na new task will wait in the queue.\nThe `max_queue` parameter limits the number\nof tasks allowed to be waiting in the queue.\nBy default, up to 65536 tasks can wait in the queue.\nWhen the queue overflows, the task is completed with an error.\n</p>",
    "notes": [],
    "since": "1.7.11",
    "link": "ngx_core_module.html#thread_pool",
    "module": "Core functionality"
  },
  {
    "name": "timer_resolution",
    "syntax": "timer_resolution interval;",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Reduces timer resolution in worker processes, thus reducing thenumber of gettimeofday() system calls made.By default, gettimeofday() is called each timea kernel event is received.With reduced resolution, gettimeofday() is onlycalled once per specified interval.",
    "doc": "<p>\nReduces timer resolution in worker processes, thus reducing the\nnumber of `gettimeofday()` system calls made.\nBy default, `gettimeofday()` is called each time\na kernel event is received.\nWith reduced resolution, `gettimeofday()` is only\ncalled once per specified *`interval`*.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\ntimer_resolution 100ms;\n</pre></blockquote><p>\nInternal implementation of the interval depends on the method used:\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#timer_resolution",
    "module": "Core functionality"
  },
  {
    "name": "use",
    "syntax": "use method;",
    "def": null,
    "contexts": [
      "events"
    ],
    "desc": "Specifies the connection processingmethod to use.There is normally no need to specify it explicitly, because nginx willby default use the most efficient method.",
    "doc": "<p>\nSpecifies the <a href=\"events.html\">connection processing</a>\n*`method`* to use.\nThere is normally no need to specify it explicitly, because nginx will\nby default use the most efficient method.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#use",
    "module": "Core functionality"
  },
  {
    "name": "user",
    "syntax": "user user [group];",
    "def": "user nobody nobody;",
    "contexts": [
      "main"
    ],
    "desc": "Defines user and groupcredentials used by worker processes.If group is omitted, a group whose name equalsthat of user is used.",
    "doc": "<p>\nDefines *`user`* and *`group`*\ncredentials used by worker processes.\nIf *`group`* is omitted, a group whose name equals\nthat of *`user`* is used.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#user",
    "module": "Core functionality"
  },
  {
    "name": "worker_aio_requests",
    "syntax": "worker_aio_requests number;",
    "def": "worker_aio_requests 32;",
    "contexts": [
      "events"
    ],
    "desc": "When using aiowith the epollconnection processing method, sets the maximum number ofoutstanding asynchronous I/O operationsfor a single worker process.",
    "doc": "<p>\nWhen using <a href=\"http/ngx_http_core_module.html#aio\">aio</a>\nwith the <a href=\"../docs/events.html#epoll\">epoll</a>\nconnection processing method, sets the maximum *`number`* of\noutstanding asynchronous I/O operations\nfor a single worker process.\n</p>",
    "notes": [],
    "since": "1.1.4",
    "link": "ngx_core_module.html#worker_aio_requests",
    "module": "Core functionality"
  },
  {
    "name": "worker_connections",
    "syntax": "worker_connections number;",
    "def": "worker_connections 512;",
    "contexts": [
      "events"
    ],
    "desc": "Sets the maximum number of simultaneous connections thatcan be opened by a worker process.",
    "doc": "<p>\nSets the maximum number of simultaneous connections that\ncan be opened by a worker process.\n</p><p>\nIt should be kept in mind that this number includes all connections\n(e.g. connections with proxied servers, among others),\nnot only connections with clients.\nAnother consideration is that the actual number of simultaneous\nconnections cannot exceed the current limit on\nthe maximum number of open files, which can be changed by\n<a href=\"#worker_rlimit_nofile\">worker_rlimit_nofile</a>.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#worker_connections",
    "module": "Core functionality"
  },
  {
    "name": "worker_cpu_affinity",
    "syntax": "worker_cpu_affinity cpumask ...;worker_cpu_affinity auto [cpumask];",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Binds worker processes to the sets of CPUs.Each CPU set is represented by a bitmask of allowed CPUs.There should be a separate set defined for each of the worker processes.By default, worker processes are not bound to any specific CPUs.",
    "doc": "<p>\nBinds worker processes to the sets of CPUs.\nEach CPU set is represented by a bitmask of allowed CPUs.\nThere should be a separate set defined for each of the worker processes.\nBy default, worker processes are not bound to any specific CPUs.\n</p><p>\nFor example,\n</p><blockquote class=\"example\"><pre>\nworker_processes    4;\nworker_cpu_affinity 0001 0010 0100 1000;\n</pre></blockquote><p> \nbinds each worker process to a separate CPU, while\n</p><blockquote class=\"example\"><pre>\nworker_processes    2;\nworker_cpu_affinity 0101 1010;\n</pre></blockquote><p> \nbinds the first worker process to CPU0/CPU2,\nand the second worker process to CPU1/CPU3.\nThe second example is suitable for hyper-threading.\n</p><p>\nThe special value `auto` (1.9.10) allows\nbinding worker processes automatically to available CPUs:\n</p><blockquote class=\"example\"><pre>\nworker_processes auto;\nworker_cpu_affinity auto;\n</pre></blockquote><p> \nThe optional mask parameter can be used to limit the CPUs\navailable for automatic binding:\n</p><blockquote class=\"example\"><pre>\nworker_cpu_affinity auto 01010101;\n</pre></blockquote><blockquote class=\"note\">\nThe directive is only available on FreeBSD and Linux.\n</blockquote>",
    "notes": [
      "\nThe directive is only available on FreeBSD and Linux.\n"
    ],
    "since": null,
    "link": "ngx_core_module.html#worker_cpu_affinity",
    "module": "Core functionality"
  },
  {
    "name": "worker_priority",
    "syntax": "worker_priority number;",
    "def": "worker_priority 0;",
    "contexts": [
      "main"
    ],
    "desc": "Defines the scheduling priority for worker processes like it isdone by the nice command: a negativenumbermeans higher priority.Allowed range normally varies from -20 to 20.",
    "doc": "<p>\nDefines the scheduling priority for worker processes like it is\ndone by the `nice` command: a negative\n*`number`*\nmeans higher priority.\nAllowed range normally varies from -20 to 20.\n</p><p>\nExample:\n</p><blockquote class=\"example\"><pre>\nworker_priority -10;\n</pre></blockquote>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#worker_priority",
    "module": "Core functionality"
  },
  {
    "name": "worker_processes",
    "syntax": "worker_processes number | auto;",
    "def": "worker_processes 1;",
    "contexts": [
      "main"
    ],
    "desc": "Defines the number of worker processes.",
    "doc": "<p>\nDefines the number of worker processes.\n</p><p>\nThe optimal value depends on many factors including (but not\nlimited to) the number of CPU cores, the number of hard disk\ndrives that store data, and load pattern.\nWhen one is in doubt, setting it to the number of available CPU cores\nwould be a good start (the value &#x201C;`auto`&#x201D;\nwill try to autodetect it).\n</p><blockquote class=\"note\">\nThe <code>auto</code> parameter is supported starting from\nversions 1.3.8 and 1.2.5.\n</blockquote>",
    "notes": [
      "\nThe auto parameter is supported starting from\nversions 1.3.8 and 1.2.5.\n"
    ],
    "since": null,
    "link": "ngx_core_module.html#worker_processes",
    "module": "Core functionality"
  },
  {
    "name": "worker_rlimit_core",
    "syntax": "worker_rlimit_core size;",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Changes the limit on the largest size of a core file(RLIMIT_CORE) for worker processes.Used to increase the limit without restarting the main process.",
    "doc": "<p>\nChanges the limit on the largest size of a core file\n(`RLIMIT_CORE`) for worker processes.\nUsed to increase the limit without restarting the main process.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#worker_rlimit_core",
    "module": "Core functionality"
  },
  {
    "name": "worker_rlimit_nofile",
    "syntax": "worker_rlimit_nofile number;",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Changes the limit on the maximum number of open files(RLIMIT_NOFILE) for worker processes.Used to increase the limit without restarting the main process.",
    "doc": "<p>\nChanges the limit on the maximum number of open files\n(`RLIMIT_NOFILE`) for worker processes.\nUsed to increase the limit without restarting the main process.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#worker_rlimit_nofile",
    "module": "Core functionality"
  },
  {
    "name": "worker_shutdown_timeout",
    "syntax": "worker_shutdown_timeout time;",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Configures a timeout for a graceful shutdown of worker processes.When the time expires,nginx will try to close all the connections currently opento facilitate shutdown.",
    "doc": "<p>\nConfigures a timeout for a graceful shutdown of worker processes.\nWhen the *`time`* expires,\nnginx will try to close all the connections currently open\nto facilitate shutdown.\n</p>",
    "notes": [],
    "since": "1.11.11",
    "link": "ngx_core_module.html#worker_shutdown_timeout",
    "module": "Core functionality"
  },
  {
    "name": "working_directory",
    "syntax": "working_directory directory;",
    "def": null,
    "contexts": [
      "main"
    ],
    "desc": "Defines the current working directory for a worker process.It is primarily used when writing a core-file, in which casea worker process should have write permission for thespecified directory.",
    "doc": "<p>\nDefines the current working directory for a worker process.\nIt is primarily used when writing a core-file, in which case\na worker process should have write permission for the\nspecified directory.\n</p>",
    "notes": [],
    "since": null,
    "link": "ngx_core_module.html#working_directory",
    "module": "Core functionality"
  }
]
